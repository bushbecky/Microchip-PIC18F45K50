

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Feb 01 15:04:58 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.35
    31                           ; Generated 05/05/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F45K50 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     _ADCON0bits	set	4034
    66  0000                     _LATD	set	3980
    67  0000                     _ANSELAbits	set	3931
    68  0000                     _PORTD	set	3971
    69  0000                     _LATDbits	set	3980
    70  0000                     _TRISAbits	set	3986
    71  0000                     _TRISD	set	3989
    72  0000                     _ADCON2	set	4032
    73  0000                     _OSCCON	set	4051
    74  0000                     _ADRESH	set	4036
    75  0000                     _ADCON0	set	4034
    76  0000                     _ADCON1	set	4033
    77                           
    78                           	psect	smallconst
    79  000800                     __psmallconst:
    80                           	callstack 0
    81  000800  00                 	db	0
    82  000801                     STR_2:
    83  000801  55                 	db	85	;'U'
    84  000802  50                 	db	80	;'P'
    85  000803  43                 	db	67	;'C'
    86  000804  20                 	db	32
    87  000805  56                 	db	86	;'V'
    88  000806  65                 	db	101	;'e'
    89  000807  72                 	db	114	;'r'
    90  000808  61                 	db	97	;'a'
    91  000809  6E                 	db	110	;'n'
    92  00080A  6F                 	db	111	;'o'
    93  00080B  20                 	db	32
    94  00080C  32                 	db	50	;'2'
    95  00080D  30                 	db	48	;'0'
    96  00080E  32                 	db	50	;'2'
    97  00080F  33                 	db	51	;'3'
    98  000810  00                 	db	0
    99  000811                     STR_1:
   100  000811  48                 	db	72	;'H'
   101  000812  6F                 	db	111	;'o'
   102  000813  6C                 	db	108	;'l'
   103  000814  61                 	db	97	;'a'
   104  000815  20                 	db	32
   105  000816  6D                 	db	109	;'m'
   106  000817  75                 	db	117	;'u'
   107  000818  6E                 	db	110	;'n'
   108  000819  64                 	db	100	;'d'
   109  00081A  6F                 	db	111	;'o'
   110  00081B  00                 	db	0
   111  00081C                     STR_3:
   112  00081C  43                 	db	67	;'C'
   113  00081D  61                 	db	97	;'a'
   114  00081E  6E                 	db	110	;'n'
   115  00081F  61                 	db	97	;'a'
   116  000820  6C                 	db	108	;'l'
   117  000821  20                 	db	32
   118  000822  30                 	db	48	;'0'
   119  000823  3A                 	db	58	;':'
   120  000824  00                 	db	0
   121  000825                     STR_4:
   122  000825  43                 	db	67	;'C'
   123  000826  61                 	db	97	;'a'
   124  000827  6E                 	db	110	;'n'
   125  000828  61                 	db	97	;'a'
   126  000829  6C                 	db	108	;'l'
   127  00082A  20                 	db	32
   128  00082B  31                 	db	49	;'1'
   129  00082C  3A                 	db	58	;':'
   130  00082D  00                 	db	0
   131  00082E  00                 	db	0	; dummy byte at the end
   132  0000                     
   133                           ; #config settings
   134                           
   135                           	psect	cinit
   136  000D36                     __pcinit:
   137                           	callstack 0
   138  000D36                     start_initialization:
   139                           	callstack 0
   140  000D36                     __initialization:
   141                           	callstack 0
   142                           
   143                           ; Clear objects allocated to COMRAM (3 bytes)
   144  000D36  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
   145  000D38  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   146  000D3A  6A12               	clrf	__pbssCOMRAM& (0+255),c
   147  000D3C                     end_of_initialization:
   148                           	callstack 0
   149  000D3C                     __end_of__initialization:
   150                           	callstack 0
   151  000D3C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   152  000D3E  6EF8               	movwf	tblptru,c
   153  000D40  0E08               	movlw	high __Lsmallconst
   154  000D42  6EF7               	movwf	tblptrh,c
   155  000D44  0100               	movlb	0
   156  000D46  EF18  F004         	goto	_main	;jump to C main() function
   157                           
   158                           	psect	bssCOMRAM
   159  000012                     __pbssCOMRAM:
   160                           	callstack 0
   161  000012                     _unidades:
   162                           	callstack 0
   163  000012                     	ds	1
   164  000013                     _decenas:
   165                           	callstack 0
   166  000013                     	ds	1
   167  000014                     _centenas:
   168                           	callstack 0
   169  000014                     	ds	1
   170                           
   171                           	psect	cstackCOMRAM
   172  000001                     __pcstackCOMRAM:
   173                           	callstack 0
   174  000001                     ?___awmod:
   175                           	callstack 0
   176  000001                     ENVIA_NIBBLE@dato:
   177                           	callstack 0
   178  000001                     LEER_LCD@aux:
   179                           	callstack 0
   180  000001                     ___awmod@dividend:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x0
   184  000001                     	ds	1
   185  000002                     ENVIA_CHAR@dato:
   186                           	callstack 0
   187  000002                     ENVIA_LCD_CMD@dato:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x1
   191  000002                     	ds	1
   192  000003                     ENVIA_CHAR@aux:
   193                           	callstack 0
   194  000003                     ENVIA_LCD_CMD@aux:
   195                           	callstack 0
   196  000003                     ___awmod@divisor:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x2
   200  000003                     	ds	1
   201  000004                     ??_LCD_CONFIG:
   202  000004                     POS_CURSOR@columna:
   203                           	callstack 0
   204  000004                     CURSOR_ONOFF@estado:
   205                           	callstack 0
   206  000004                     ESCRIBE_MENSAJE@cadena:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0x3
   210  000004                     	ds	1
   211  000005                     ??_LCD_Init:
   212  000005                     POS_CURSOR@fila:
   213                           	callstack 0
   214  000005                     ___awmod@counter:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x4
   218  000005                     	ds	1
   219  000006                     ESCRIBE_MENSAJE@tam:
   220                           	callstack 0
   221  000006                     ___awmod@sign:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x5
   225  000006                     	ds	1
   226  000007                     ??_ESCRIBE_MENSAJE:
   227  000007                     ?___awdiv:
   228                           	callstack 0
   229  000007                     ___awdiv@dividend:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x6
   233  000007                     	ds	2
   234  000009                     ESCRIBE_MENSAJE@i:
   235                           	callstack 0
   236  000009                     ___awdiv@divisor:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x8
   240  000009                     	ds	2
   241  00000B                     ___awdiv@counter:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0xA
   245  00000B                     	ds	1
   246  00000C                     ___awdiv@sign:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0xB
   250  00000C                     	ds	1
   251  00000D                     ___awdiv@quotient:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0xC
   255  00000D                     	ds	2
   256  00000F                     convierte@numero:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0xE
   260  00000F                     	ds	1
   261  000010                     ??_main:
   262                           
   263                           ; 1 bytes @ 0xF
   264  000010                     	ds	2
   265                           
   266 ;;
   267 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   268 ;;
   269 ;; *************** function _main *****************
   270 ;; Defined at:
   271 ;;		line 35 in file "maincode2.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   285 ;;      Params:         0       0       0       0       0       0       0       0       0
   286 ;;      Locals:         0       0       0       0       0       0       0       0       0
   287 ;;      Temps:          2       0       0       0       0       0       0       0       0
   288 ;;      Totals:         2       0       0       0       0       0       0       0       0
   289 ;;Total ram usage:        2 bytes
   290 ;; Hardware stack levels required when called: 4
   291 ;; This function calls:
   292 ;;		_BORRAR_LCD
   293 ;;		_ENVIA_CHAR
   294 ;;		_ESCRIBE_MENSAJE
   295 ;;		_LCD_Init
   296 ;;		_POS_CURSOR
   297 ;;		_configuro
   298 ;;		_convierte
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text0
   305  000830                     __ptext0:
   306                           	callstack 0
   307  000830                     _main:
   308                           	callstack 27
   309  000830                     
   310                           ;maincode2.c: 36:     configuro();
   311  000830  EC7F  F006         	call	_configuro	;wreg free
   312  000834                     
   313                           ;maincode2.c: 37:     LCD_Init();
   314  000834  EC6B  F006         	call	_LCD_Init	;wreg free
   315  000838                     
   316                           ;maincode2.c: 38:     POS_CURSOR(1,0);
   317  000838  0E00               	movlw	0
   318  00083A  6E04               	movwf	POS_CURSOR@columna^0,c
   319  00083C  0E01               	movlw	1
   320  00083E  EC02  F006         	call	_POS_CURSOR
   321  000842                     
   322                           ;maincode2.c: 39:     ESCRIBE_MENSAJE("Hola mundo",10);
   323  000842  0E11               	movlw	low STR_1
   324  000844  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   325  000846  0E08               	movlw	high STR_1
   326  000848  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   327  00084A  0E0A               	movlw	10
   328  00084C  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   329  00084E  ECE3  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   330  000852                     
   331                           ;maincode2.c: 40:     POS_CURSOR(2,0);
   332  000852  0E00               	movlw	0
   333  000854  6E04               	movwf	POS_CURSOR@columna^0,c
   334  000856  0E02               	movlw	2
   335  000858  EC02  F006         	call	_POS_CURSOR
   336  00085C                     
   337                           ;maincode2.c: 41:     ESCRIBE_MENSAJE("UPC Verano 2023",15);
   338  00085C  0E01               	movlw	low STR_2
   339  00085E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   340  000860  0E08               	movlw	high STR_2
   341  000862  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   342  000864  0E0F               	movlw	15
   343  000866  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   344  000868  ECE3  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   345  00086C                     
   346                           ;maincode2.c: 42:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
   347  00086C  0E0B               	movlw	11
   348  00086E  6E11               	movwf	(??_main+1)^0,c
   349  000870  0E26               	movlw	38
   350  000872  6E10               	movwf	??_main^0,c
   351  000874  0E5E               	movlw	94
   352  000876                     u437:
   353  000876  2EE8               	decfsz	wreg,f,c
   354  000878  D7FE               	bra	u437
   355  00087A  2E10               	decfsz	??_main^0,f,c
   356  00087C  D7FC               	bra	u437
   357  00087E  2E11               	decfsz	(??_main+1)^0,f,c
   358  000880  D7FA               	bra	u437
   359  000882                     
   360                           ;maincode2.c: 43:     BORRAR_LCD();
   361  000882  ECA9  F006         	call	_BORRAR_LCD	;wreg free
   362  000886                     l1249:
   363                           
   364                           ;maincode2.c: 45:         ADCON0 = 0x01;
   365  000886  0E01               	movlw	1
   366  000888  6EC2               	movwf	194,c	;volatile
   367  00088A                     
   368                           ;maincode2.c: 46:         ADCON0bits.GO_DONE = 1;
   369  00088A  82C2               	bsf	194,1,c	;volatile
   370  00088C                     l129:
   371  00088C  B2C2               	btfsc	194,1,c	;volatile
   372  00088E  EF4B  F004         	goto	u411
   373  000892  EF4D  F004         	goto	u410
   374  000896                     u411:
   375  000896  EF46  F004         	goto	l129
   376  00089A                     u410:
   377  00089A                     
   378                           ;maincode2.c: 48:         convierte(ADRESH);
   379  00089A  50C4               	movf	196,w,c	;volatile
   380  00089C  ECB6  F005         	call	_convierte
   381                           
   382                           ;maincode2.c: 49:         POS_CURSOR(1,0);
   383  0008A0  0E00               	movlw	0
   384  0008A2  6E04               	movwf	POS_CURSOR@columna^0,c
   385  0008A4  0E01               	movlw	1
   386  0008A6  EC02  F006         	call	_POS_CURSOR
   387  0008AA                     
   388                           ;maincode2.c: 50:         ESCRIBE_MENSAJE("Canal 0:",8);
   389  0008AA  0E1C               	movlw	low STR_3
   390  0008AC  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   391  0008AE  0E08               	movlw	high STR_3
   392  0008B0  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   393  0008B2  0E08               	movlw	8
   394  0008B4  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   395  0008B6  ECE3  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   396  0008BA                     
   397                           ;maincode2.c: 51:         ENVIA_CHAR(centenas+0x30);
   398  0008BA  5014               	movf	_centenas^0,w,c
   399  0008BC  0F30               	addlw	48
   400  0008BE  EC39  F006         	call	_ENVIA_CHAR
   401  0008C2                     
   402                           ;maincode2.c: 52:         ENVIA_CHAR(decenas+0x30);
   403  0008C2  5013               	movf	_decenas^0,w,c
   404  0008C4  0F30               	addlw	48
   405  0008C6  EC39  F006         	call	_ENVIA_CHAR
   406  0008CA                     
   407                           ;maincode2.c: 53:         ENVIA_CHAR(unidades+0x30);
   408  0008CA  5012               	movf	_unidades^0,w,c
   409  0008CC  0F30               	addlw	48
   410  0008CE  EC39  F006         	call	_ENVIA_CHAR
   411  0008D2                     
   412                           ;maincode2.c: 54:         ADCON0 = 0x05;
   413  0008D2  0E05               	movlw	5
   414  0008D4  6EC2               	movwf	194,c	;volatile
   415  0008D6                     
   416                           ;maincode2.c: 55:         ADCON0bits.GO_DONE = 1;
   417  0008D6  82C2               	bsf	194,1,c	;volatile
   418  0008D8                     l132:
   419  0008D8  B2C2               	btfsc	194,1,c	;volatile
   420  0008DA  EF71  F004         	goto	u421
   421  0008DE  EF73  F004         	goto	u420
   422  0008E2                     u421:
   423  0008E2  EF6C  F004         	goto	l132
   424  0008E6                     u420:
   425  0008E6                     
   426                           ;maincode2.c: 57:         convierte(ADRESH);
   427  0008E6  50C4               	movf	196,w,c	;volatile
   428  0008E8  ECB6  F005         	call	_convierte
   429                           
   430                           ;maincode2.c: 58:         POS_CURSOR(2,0);
   431  0008EC  0E00               	movlw	0
   432  0008EE  6E04               	movwf	POS_CURSOR@columna^0,c
   433  0008F0  0E02               	movlw	2
   434  0008F2  EC02  F006         	call	_POS_CURSOR
   435  0008F6                     
   436                           ;maincode2.c: 59:         ESCRIBE_MENSAJE("Canal 1:",8);
   437  0008F6  0E25               	movlw	low STR_4
   438  0008F8  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   439  0008FA  0E08               	movlw	high STR_4
   440  0008FC  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   441  0008FE  0E08               	movlw	8
   442  000900  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   443  000902  ECE3  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   444  000906                     
   445                           ;maincode2.c: 60:         ENVIA_CHAR(centenas+0x30);
   446  000906  5014               	movf	_centenas^0,w,c
   447  000908  0F30               	addlw	48
   448  00090A  EC39  F006         	call	_ENVIA_CHAR
   449  00090E                     
   450                           ;maincode2.c: 61:         ENVIA_CHAR(decenas+0x30);
   451  00090E  5013               	movf	_decenas^0,w,c
   452  000910  0F30               	addlw	48
   453  000912  EC39  F006         	call	_ENVIA_CHAR
   454  000916                     
   455                           ;maincode2.c: 62:         ENVIA_CHAR(unidades+0x30);
   456  000916  5012               	movf	_unidades^0,w,c
   457  000918  0F30               	addlw	48
   458  00091A  EC39  F006         	call	_ENVIA_CHAR
   459  00091E  EF43  F004         	goto	l1249
   460  000922  EF00  F000         	goto	start
   461  000926                     __end_of_main:
   462                           	callstack 0
   463                           
   464 ;; *************** function _convierte *****************
   465 ;; Defined at:
   466 ;;		line 29 in file "maincode2.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  numero          1    wreg     unsigned char 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  numero          1   14[COMRAM] unsigned char 
   471 ;; Return value:  Size  Location     Type
   472 ;;                  2  122[None  ] int 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   480 ;;      Params:         0       0       0       0       0       0       0       0       0
   481 ;;      Locals:         1       0       0       0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0
   483 ;;      Totals:         1       0       0       0       0       0       0       0       0
   484 ;;Total ram usage:        1 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; Hardware stack levels required when called: 1
   487 ;; This function calls:
   488 ;;		___awdiv
   489 ;;		___awmod
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text1
   496  000B6C                     __ptext1:
   497                           	callstack 0
   498  000B6C                     _convierte:
   499                           	callstack 29
   500                           
   501                           ;incstack = 0
   502                           ;convierte@numero stored from wreg
   503  000B6C  6E0F               	movwf	convierte@numero^0,c
   504  000B6E                     
   505                           ;maincode2.c: 30:     centenas = numero / 100;
   506  000B6E  C00F  F007         	movff	convierte@numero,___awdiv@dividend
   507  000B72  6A08               	clrf	(___awdiv@dividend+1)^0,c
   508  000B74  0E00               	movlw	0
   509  000B76  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   510  000B78  0E64               	movlw	100
   511  000B7A  6E09               	movwf	___awdiv@divisor^0,c
   512  000B7C  EC93  F004         	call	___awdiv	;wreg free
   513  000B80  5007               	movf	?___awdiv^0,w,c
   514  000B82  6E14               	movwf	_centenas^0,c
   515                           
   516                           ;maincode2.c: 31:     decenas = (numero % 100) / 10;
   517  000B84  0E00               	movlw	0
   518  000B86  6E04               	movwf	(___awmod@divisor+1)^0,c
   519  000B88  0E64               	movlw	100
   520  000B8A  6E03               	movwf	___awmod@divisor^0,c
   521  000B8C  C00F  F001         	movff	convierte@numero,___awmod@dividend
   522  000B90  6A02               	clrf	(___awmod@dividend+1)^0,c
   523  000B92  ECF5  F004         	call	___awmod	;wreg free
   524  000B96  C001  F007         	movff	?___awmod,___awdiv@dividend
   525  000B9A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   526  000B9E  0E00               	movlw	0
   527  000BA0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   528  000BA2  0E0A               	movlw	10
   529  000BA4  6E09               	movwf	___awdiv@divisor^0,c
   530  000BA6  EC93  F004         	call	___awdiv	;wreg free
   531  000BAA  5007               	movf	?___awdiv^0,w,c
   532  000BAC  6E13               	movwf	_decenas^0,c
   533                           
   534                           ;maincode2.c: 32:     unidades = numero % 10;
   535  000BAE  C00F  F001         	movff	convierte@numero,___awmod@dividend
   536  000BB2  6A02               	clrf	(___awmod@dividend+1)^0,c
   537  000BB4  0E00               	movlw	0
   538  000BB6  6E04               	movwf	(___awmod@divisor+1)^0,c
   539  000BB8  0E0A               	movlw	10
   540  000BBA  6E03               	movwf	___awmod@divisor^0,c
   541  000BBC  ECF5  F004         	call	___awmod	;wreg free
   542  000BC0  5001               	movf	?___awmod^0,w,c
   543  000BC2  6E12               	movwf	_unidades^0,c
   544  000BC4  0012               	return		;funcret
   545  000BC6                     __end_of_convierte:
   546                           	callstack 0
   547                           
   548 ;; *************** function ___awmod *****************
   549 ;; Defined at:
   550 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  dividend        2    0[COMRAM] int 
   553 ;;  divisor         2    2[COMRAM] int 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  sign            1    5[COMRAM] unsigned char 
   556 ;;  counter         1    4[COMRAM] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  2    0[COMRAM] int 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   566 ;;      Params:         4       0       0       0       0       0       0       0       0
   567 ;;      Locals:         2       0       0       0       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0
   569 ;;      Totals:         6       0       0       0       0       0       0       0       0
   570 ;;Total ram usage:        6 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_convierte
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text2
   580  0009EA                     __ptext2:
   581                           	callstack 0
   582  0009EA                     ___awmod:
   583                           	callstack 29
   584  0009EA  0E00               	movlw	0
   585  0009EC  6E06               	movwf	___awmod@sign^0,c
   586  0009EE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   587  0009F0  EFFE  F004         	goto	u320
   588  0009F4  EFFC  F004         	goto	u321
   589  0009F8                     u321:
   590  0009F8  EF04  F005         	goto	l1187
   591  0009FC                     u320:
   592  0009FC  6C01               	negf	___awmod@dividend^0,c
   593  0009FE  1E02               	comf	(___awmod@dividend+1)^0,f,c
   594  000A00  B0D8               	btfsc	status,0,c
   595  000A02  2A02               	incf	(___awmod@dividend+1)^0,f,c
   596  000A04  0E01               	movlw	1
   597  000A06  6E06               	movwf	___awmod@sign^0,c
   598  000A08                     l1187:
   599  000A08  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   600  000A0A  EF0B  F005         	goto	u330
   601  000A0E  EF09  F005         	goto	u331
   602  000A12                     u331:
   603  000A12  EF0F  F005         	goto	l1191
   604  000A16                     u330:
   605  000A16  6C03               	negf	___awmod@divisor^0,c
   606  000A18  1E04               	comf	(___awmod@divisor+1)^0,f,c
   607  000A1A  B0D8               	btfsc	status,0,c
   608  000A1C  2A04               	incf	(___awmod@divisor+1)^0,f,c
   609  000A1E                     l1191:
   610  000A1E  5003               	movf	___awmod@divisor^0,w,c
   611  000A20  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   612  000A22  B4D8               	btfsc	status,2,c
   613  000A24  EF16  F005         	goto	u341
   614  000A28  EF18  F005         	goto	u340
   615  000A2C                     u341:
   616  000A2C  EF3C  F005         	goto	l1207
   617  000A30                     u340:
   618  000A30  0E01               	movlw	1
   619  000A32  6E05               	movwf	___awmod@counter^0,c
   620  000A34  EF20  F005         	goto	l1197
   621  000A38                     l1195:
   622  000A38  90D8               	bcf	status,0,c
   623  000A3A  3603               	rlcf	___awmod@divisor^0,f,c
   624  000A3C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   625  000A3E  2A05               	incf	___awmod@counter^0,f,c
   626  000A40                     l1197:
   627  000A40  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   628  000A42  EF25  F005         	goto	u351
   629  000A46  EF27  F005         	goto	u350
   630  000A4A                     u351:
   631  000A4A  EF1C  F005         	goto	l1195
   632  000A4E                     u350:
   633  000A4E                     l1199:
   634  000A4E  5003               	movf	___awmod@divisor^0,w,c
   635  000A50  5C01               	subwf	___awmod@dividend^0,w,c
   636  000A52  5004               	movf	(___awmod@divisor+1)^0,w,c
   637  000A54  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   638  000A56  A0D8               	btfss	status,0,c
   639  000A58  EF30  F005         	goto	u361
   640  000A5C  EF32  F005         	goto	u360
   641  000A60                     u361:
   642  000A60  EF36  F005         	goto	l1203
   643  000A64                     u360:
   644  000A64  5003               	movf	___awmod@divisor^0,w,c
   645  000A66  5E01               	subwf	___awmod@dividend^0,f,c
   646  000A68  5004               	movf	(___awmod@divisor+1)^0,w,c
   647  000A6A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   648  000A6C                     l1203:
   649  000A6C  90D8               	bcf	status,0,c
   650  000A6E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   651  000A70  3203               	rrcf	___awmod@divisor^0,f,c
   652  000A72  2E05               	decfsz	___awmod@counter^0,f,c
   653  000A74  EF27  F005         	goto	l1199
   654  000A78                     l1207:
   655  000A78  5006               	movf	___awmod@sign^0,w,c
   656  000A7A  B4D8               	btfsc	status,2,c
   657  000A7C  EF42  F005         	goto	u371
   658  000A80  EF44  F005         	goto	u370
   659  000A84                     u371:
   660  000A84  EF48  F005         	goto	l1211
   661  000A88                     u370:
   662  000A88  6C01               	negf	___awmod@dividend^0,c
   663  000A8A  1E02               	comf	(___awmod@dividend+1)^0,f,c
   664  000A8C  B0D8               	btfsc	status,0,c
   665  000A8E  2A02               	incf	(___awmod@dividend+1)^0,f,c
   666  000A90                     l1211:
   667  000A90  C001  F001         	movff	___awmod@dividend,?___awmod
   668  000A94  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   669  000A98  0012               	return		;funcret
   670  000A9A                     __end_of___awmod:
   671                           	callstack 0
   672                           
   673 ;; *************** function ___awdiv *****************
   674 ;; Defined at:
   675 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  dividend        2    6[COMRAM] int 
   678 ;;  divisor         2    8[COMRAM] int 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  quotient        2   12[COMRAM] int 
   681 ;;  sign            1   11[COMRAM] unsigned char 
   682 ;;  counter         1   10[COMRAM] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  2    6[COMRAM] int 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   692 ;;      Params:         4       0       0       0       0       0       0       0       0
   693 ;;      Locals:         4       0       0       0       0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0
   695 ;;      Totals:         8       0       0       0       0       0       0       0       0
   696 ;;Total ram usage:        8 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_convierte
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text3
   706  000926                     __ptext3:
   707                           	callstack 0
   708  000926                     ___awdiv:
   709                           	callstack 29
   710  000926  0E00               	movlw	0
   711  000928  6E0C               	movwf	___awdiv@sign^0,c
   712  00092A  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   713  00092C  EF9C  F004         	goto	u260
   714  000930  EF9A  F004         	goto	u261
   715  000934                     u261:
   716  000934  EFA2  F004         	goto	l1143
   717  000938                     u260:
   718  000938  6C09               	negf	___awdiv@divisor^0,c
   719  00093A  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
   720  00093C  B0D8               	btfsc	status,0,c
   721  00093E  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
   722  000940  0E01               	movlw	1
   723  000942  6E0C               	movwf	___awdiv@sign^0,c
   724  000944                     l1143:
   725  000944  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
   726  000946  EFA9  F004         	goto	u270
   727  00094A  EFA7  F004         	goto	u271
   728  00094E                     u271:
   729  00094E  EFAF  F004         	goto	l1149
   730  000952                     u270:
   731  000952  6C07               	negf	___awdiv@dividend^0,c
   732  000954  1E08               	comf	(___awdiv@dividend+1)^0,f,c
   733  000956  B0D8               	btfsc	status,0,c
   734  000958  2A08               	incf	(___awdiv@dividend+1)^0,f,c
   735  00095A  0E01               	movlw	1
   736  00095C  1A0C               	xorwf	___awdiv@sign^0,f,c
   737  00095E                     l1149:
   738  00095E  0E00               	movlw	0
   739  000960  6E0E               	movwf	(___awdiv@quotient+1)^0,c
   740  000962  0E00               	movlw	0
   741  000964  6E0D               	movwf	___awdiv@quotient^0,c
   742  000966  5009               	movf	___awdiv@divisor^0,w,c
   743  000968  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
   744  00096A  B4D8               	btfsc	status,2,c
   745  00096C  EFBA  F004         	goto	u281
   746  000970  EFBC  F004         	goto	u280
   747  000974                     u281:
   748  000974  EFE4  F004         	goto	l1171
   749  000978                     u280:
   750  000978  0E01               	movlw	1
   751  00097A  6E0B               	movwf	___awdiv@counter^0,c
   752  00097C  EFC4  F004         	goto	l1157
   753  000980                     l1155:
   754  000980  90D8               	bcf	status,0,c
   755  000982  3609               	rlcf	___awdiv@divisor^0,f,c
   756  000984  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
   757  000986  2A0B               	incf	___awdiv@counter^0,f,c
   758  000988                     l1157:
   759  000988  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
   760  00098A  EFC9  F004         	goto	u291
   761  00098E  EFCB  F004         	goto	u290
   762  000992                     u291:
   763  000992  EFC0  F004         	goto	l1155
   764  000996                     u290:
   765  000996                     l1159:
   766  000996  90D8               	bcf	status,0,c
   767  000998  360D               	rlcf	___awdiv@quotient^0,f,c
   768  00099A  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
   769  00099C  5009               	movf	___awdiv@divisor^0,w,c
   770  00099E  5C07               	subwf	___awdiv@dividend^0,w,c
   771  0009A0  500A               	movf	(___awdiv@divisor+1)^0,w,c
   772  0009A2  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
   773  0009A4  A0D8               	btfss	status,0,c
   774  0009A6  EFD7  F004         	goto	u301
   775  0009AA  EFD9  F004         	goto	u300
   776  0009AE                     u301:
   777  0009AE  EFDE  F004         	goto	l1167
   778  0009B2                     u300:
   779  0009B2  5009               	movf	___awdiv@divisor^0,w,c
   780  0009B4  5E07               	subwf	___awdiv@dividend^0,f,c
   781  0009B6  500A               	movf	(___awdiv@divisor+1)^0,w,c
   782  0009B8  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
   783  0009BA  800D               	bsf	___awdiv@quotient^0,0,c
   784  0009BC                     l1167:
   785  0009BC  90D8               	bcf	status,0,c
   786  0009BE  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
   787  0009C0  3209               	rrcf	___awdiv@divisor^0,f,c
   788  0009C2  2E0B               	decfsz	___awdiv@counter^0,f,c
   789  0009C4  EFCB  F004         	goto	l1159
   790  0009C8                     l1171:
   791  0009C8  500C               	movf	___awdiv@sign^0,w,c
   792  0009CA  B4D8               	btfsc	status,2,c
   793  0009CC  EFEA  F004         	goto	u311
   794  0009D0  EFEC  F004         	goto	u310
   795  0009D4                     u311:
   796  0009D4  EFF0  F004         	goto	l1175
   797  0009D8                     u310:
   798  0009D8  6C0D               	negf	___awdiv@quotient^0,c
   799  0009DA  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
   800  0009DC  B0D8               	btfsc	status,0,c
   801  0009DE  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
   802  0009E0                     l1175:
   803  0009E0  C00D  F007         	movff	___awdiv@quotient,?___awdiv
   804  0009E4  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
   805  0009E8  0012               	return		;funcret
   806  0009EA                     __end_of___awdiv:
   807                           	callstack 0
   808                           
   809 ;; *************** function _configuro *****************
   810 ;; Defined at:
   811 ;;		line 9 in file "maincode2.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         0       0       0       0       0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:         0       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text4
   839  000CFE                     __ptext4:
   840                           	callstack 0
   841  000CFE                     _configuro:
   842                           	callstack 30
   843  000CFE                     
   844                           ;maincode2.c: 10:     OSCCON = 0x52;
   845  000CFE  0E52               	movlw	82
   846  000D00  6ED3               	movwf	211,c	;volatile
   847  000D02                     
   848                           ;maincode2.c: 11:     TRISAbits.RA0 = 1;
   849  000D02  8092               	bsf	146,0,c	;volatile
   850  000D04                     
   851                           ;maincode2.c: 12:     ANSELAbits.ANSA0 = 1;
   852  000D04  010F               	movlb	15	; () banked
   853  000D06  815B               	bsf	91,0,b	;volatile
   854  000D08                     
   855                           ; BSR set to: 15
   856                           ;maincode2.c: 13:     TRISAbits.RA1 = 1;
   857  000D08  8292               	bsf	146,1,c	;volatile
   858  000D0A                     
   859                           ; BSR set to: 15
   860                           ;maincode2.c: 14:     ANSELAbits.ANSA1 = 1;
   861  000D0A  835B               	bsf	91,1,b	;volatile
   862                           
   863                           ;maincode2.c: 15:     ADCON2 = 0x24;
   864  000D0C  0E24               	movlw	36
   865  000D0E  6EC0               	movwf	192,c	;volatile
   866                           
   867                           ;maincode2.c: 16:     ADCON1 = 0x00;
   868  000D10  0E00               	movlw	0
   869  000D12  6EC1               	movwf	193,c	;volatile
   870                           
   871                           ;maincode2.c: 17:     ADCON0 = 0x01;
   872  000D14  0E01               	movlw	1
   873  000D16  6EC2               	movwf	194,c	;volatile
   874  000D18                     
   875                           ; BSR set to: 15
   876  000D18  0012               	return		;funcret
   877  000D1A                     __end_of_configuro:
   878                           	callstack 0
   879                           
   880 ;; *************** function _POS_CURSOR *****************
   881 ;; Defined at:
   882 ;;		line 6 in file "LCD.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  fila            1    wreg     unsigned char 
   885 ;;  columna         1    3[COMRAM] unsigned char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  fila            1    4[COMRAM] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   897 ;;      Params:         1       0       0       0       0       0       0       0       0
   898 ;;      Locals:         1       0       0       0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0
   900 ;;      Totals:         2       0       0       0       0       0       0       0       0
   901 ;;Total ram usage:        2 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; Hardware stack levels required when called: 2
   904 ;; This function calls:
   905 ;;		_ENVIA_LCD_CMD
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text5
   912  000C04                     __ptext5:
   913                           	callstack 0
   914  000C04                     _POS_CURSOR:
   915                           	callstack 28
   916                           
   917                           ; BSR set to: 15
   918                           ;incstack = 0
   919                           ;POS_CURSOR@fila stored from wreg
   920  000C04  6E05               	movwf	POS_CURSOR@fila^0,c
   921  000C06                     
   922                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   923  000C06  0405               	decf	POS_CURSOR@fila^0,w,c
   924  000C08  A4D8               	btfss	status,2,c
   925  000C0A  EF09  F006         	goto	u381
   926  000C0E  EF0B  F006         	goto	u380
   927  000C12                     u381:
   928  000C12  EF11  F006         	goto	l1219
   929  000C16                     u380:
   930  000C16                     
   931                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   932  000C16  5004               	movf	POS_CURSOR@columna^0,w,c
   933  000C18  0F80               	addlw	128
   934  000C1A  EC1F  F006         	call	_ENVIA_LCD_CMD
   935                           
   936                           ;LCD.c: 11:  }
   937  000C1E  EF1E  F006         	goto	l24
   938  000C22                     l1219:
   939  000C22  0E02               	movlw	2
   940  000C24  1805               	xorwf	POS_CURSOR@fila^0,w,c
   941  000C26  A4D8               	btfss	status,2,c
   942  000C28  EF18  F006         	goto	u391
   943  000C2C  EF1A  F006         	goto	u390
   944  000C30                     u391:
   945  000C30  EF1E  F006         	goto	l24
   946  000C34                     u390:
   947  000C34                     
   948                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   949  000C34  5004               	movf	POS_CURSOR@columna^0,w,c
   950  000C36  0FC0               	addlw	192
   951  000C38  EC1F  F006         	call	_ENVIA_LCD_CMD
   952  000C3C                     l24:
   953  000C3C  0012               	return		;funcret
   954  000C3E                     __end_of_POS_CURSOR:
   955                           	callstack 0
   956                           
   957 ;; *************** function _LCD_Init *****************
   958 ;; Defined at:
   959 ;;		line 20 in file "maincode2.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         0       0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0
   975 ;;      Temps:          1       0       0       0       0       0       0       0       0
   976 ;;      Totals:         1       0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        1 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 3
   980 ;; This function calls:
   981 ;;		_BORRAR_LCD
   982 ;;		_CURSOR_HOME
   983 ;;		_CURSOR_ONOFF
   984 ;;		_LCD_CONFIG
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text6
   991  000CD6                     __ptext6:
   992                           	callstack 0
   993  000CD6                     _LCD_Init:
   994                           	callstack 27
   995  000CD6                     
   996                           ;maincode2.c: 21:     TRISD = 0x00;
   997  000CD6  0E00               	movlw	0
   998  000CD8  6E95               	movwf	149,c	;volatile
   999  000CDA                     
  1000                           ;maincode2.c: 22:     _delay((unsigned long)((29)*(4000000UL/4000.0)));
  1001  000CDA  0E26               	movlw	38
  1002  000CDC  6E05               	movwf	??_LCD_Init^0,c
  1003  000CDE  0EA8               	movlw	168
  1004  000CE0                     u447:
  1005  000CE0  2EE8               	decfsz	wreg,f,c
  1006  000CE2  D7FE               	bra	u447
  1007  000CE4  2E05               	decfsz	??_LCD_Init^0,f,c
  1008  000CE6  D7FC               	bra	u447
  1009  000CE8  D000               	nop2	
  1010  000CEA                     
  1011                           ;maincode2.c: 23:     LCD_CONFIG();
  1012  000CEA  EC86  F005         	call	_LCD_CONFIG	;wreg free
  1013  000CEE                     
  1014                           ;maincode2.c: 24:     BORRAR_LCD();
  1015  000CEE  ECA9  F006         	call	_BORRAR_LCD	;wreg free
  1016  000CF2                     
  1017                           ;maincode2.c: 25:     CURSOR_HOME();
  1018  000CF2  ECA5  F006         	call	_CURSOR_HOME	;wreg free
  1019  000CF6                     
  1020                           ;maincode2.c: 26:     CURSOR_ONOFF(1);
  1021  000CF6  0E01               	movlw	1
  1022  000CF8  EC53  F006         	call	_CURSOR_ONOFF
  1023  000CFC  0012               	return		;funcret
  1024  000CFE                     __end_of_LCD_Init:
  1025                           	callstack 0
  1026                           
  1027 ;; *************** function _LCD_CONFIG *****************
  1028 ;; Defined at:
  1029 ;;		line 72 in file "LCD.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1045 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1046 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1047 ;;Total ram usage:        1 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 2
  1050 ;; This function calls:
  1051 ;;		_ENVIA_LCD_CMD
  1052 ;;		_ENVIA_NIBBLE
  1053 ;; This function is called by:
  1054 ;;		_LCD_Init
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text7
  1059  000B0C                     __ptext7:
  1060                           	callstack 0
  1061  000B0C                     _LCD_CONFIG:
  1062                           	callstack 27
  1063  000B0C                     
  1064                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1065  000B0C  908C               	bcf	140,0,c	;volatile
  1066                           
  1067                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1068  000B0E  928C               	bcf	140,1,c	;volatile
  1069  000B10                     
  1070                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1071  000B10  0E30               	movlw	48
  1072  000B12  EC8D  F006         	call	_ENVIA_NIBBLE
  1073  000B16                     
  1074                           ;LCD.c: 77:         _delay(24000);
  1075  000B16  0E20               	movlw	32
  1076  000B18  6E04               	movwf	??_LCD_CONFIG^0,c
  1077  000B1A  0E2A               	movlw	42
  1078  000B1C                     u457:
  1079  000B1C  2EE8               	decfsz	wreg,f,c
  1080  000B1E  D7FE               	bra	u457
  1081  000B20  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1082  000B22  D7FC               	bra	u457
  1083  000B24                     
  1084                           ;LCD.c: 78:         _delay(24000);
  1085  000B24  0E20               	movlw	32
  1086  000B26  6E04               	movwf	??_LCD_CONFIG^0,c
  1087  000B28  0E2A               	movlw	42
  1088  000B2A                     u467:
  1089  000B2A  2EE8               	decfsz	wreg,f,c
  1090  000B2C  D7FE               	bra	u467
  1091  000B2E  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1092  000B30  D7FC               	bra	u467
  1093                           
  1094                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1095  000B32  0E30               	movlw	48
  1096  000B34  EC8D  F006         	call	_ENVIA_NIBBLE
  1097  000B38                     
  1098                           ;LCD.c: 83:  _delay(1200);
  1099  000B38  0EF0               	movlw	240
  1100  000B3A                     u477:
  1101  000B3A  D000               	nop2	
  1102  000B3C  2EE8               	decfsz	wreg,f,c
  1103  000B3E  D7FD               	bra	u477
  1104  000B40                     
  1105                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1106  000B40  0E30               	movlw	48
  1107  000B42  EC8D  F006         	call	_ENVIA_NIBBLE
  1108  000B46                     
  1109                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1110  000B46  0E20               	movlw	32
  1111  000B48  EC8D  F006         	call	_ENVIA_NIBBLE
  1112  000B4C                     
  1113                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1114  000B4C  0E01               	movlw	1
  1115  000B4E  EC1F  F006         	call	_ENVIA_LCD_CMD
  1116  000B52                     
  1117                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1118  000B52  0E28               	movlw	40
  1119  000B54  EC1F  F006         	call	_ENVIA_LCD_CMD
  1120  000B58                     
  1121                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1122  000B58  0E0F               	movlw	15
  1123  000B5A  EC1F  F006         	call	_ENVIA_LCD_CMD
  1124  000B5E                     
  1125                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1126  000B5E  0E06               	movlw	6
  1127  000B60  EC1F  F006         	call	_ENVIA_LCD_CMD
  1128  000B64                     
  1129                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1130  000B64  0E01               	movlw	1
  1131  000B66  EC1F  F006         	call	_ENVIA_LCD_CMD
  1132  000B6A  0012               	return		;funcret
  1133  000B6C                     __end_of_LCD_CONFIG:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _CURSOR_ONOFF *****************
  1137 ;; Defined at:
  1138 ;;		line 35 in file "LCD.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  estado          1    wreg     unsigned char 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  estado          1    3[COMRAM] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0
  1153 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1155 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1156 ;;Total ram usage:        1 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 2
  1159 ;; This function calls:
  1160 ;;		_ENVIA_LCD_CMD
  1161 ;; This function is called by:
  1162 ;;		_LCD_Init
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text8
  1167  000CA6                     __ptext8:
  1168                           	callstack 0
  1169  000CA6                     _CURSOR_ONOFF:
  1170                           	callstack 27
  1171                           
  1172                           ;incstack = 0
  1173                           ;CURSOR_ONOFF@estado stored from wreg
  1174  000CA6  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  1175  000CA8                     
  1176                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1177  000CA8  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  1178  000CAA  A4D8               	btfss	status,2,c
  1179  000CAC  EF5A  F006         	goto	u21
  1180  000CB0  EF5C  F006         	goto	u20
  1181  000CB4                     u21:
  1182  000CB4  EF5F  F006         	goto	l887
  1183  000CB8                     u20:
  1184  000CB8  0E0E               	movlw	14
  1185  000CBA  EC1F  F006         	call	_ENVIA_LCD_CMD
  1186  000CBE                     l887:
  1187                           
  1188                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1189  000CBE  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  1190  000CC0  A4D8               	btfss	status,2,c
  1191  000CC2  EF65  F006         	goto	u31
  1192  000CC6  EF67  F006         	goto	u30
  1193  000CCA                     u31:
  1194  000CCA  EF6A  F006         	goto	l42
  1195  000CCE                     u30:
  1196  000CCE  0E0C               	movlw	12
  1197  000CD0  EC1F  F006         	call	_ENVIA_LCD_CMD
  1198  000CD4                     l42:
  1199  000CD4  0012               	return		;funcret
  1200  000CD6                     __end_of_CURSOR_ONOFF:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _CURSOR_HOME *****************
  1204 ;; Defined at:
  1205 ;;		line 30 in file "LCD.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 2
  1226 ;; This function calls:
  1227 ;;		_ENVIA_LCD_CMD
  1228 ;; This function is called by:
  1229 ;;		_LCD_Init
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text9
  1234  000D4A                     __ptext9:
  1235                           	callstack 0
  1236  000D4A                     _CURSOR_HOME:
  1237                           	callstack 27
  1238  000D4A                     
  1239                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1240  000D4A  0E02               	movlw	2
  1241  000D4C  EC1F  F006         	call	_ENVIA_LCD_CMD
  1242  000D50  0012               	return		;funcret
  1243  000D52                     __end_of_CURSOR_HOME:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function _BORRAR_LCD *****************
  1247 ;; Defined at:
  1248 ;;		line 67 in file "LCD.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1262 ;;      Params:         0       0       0       0       0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1265 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1266 ;;Total ram usage:        0 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 2
  1269 ;; This function calls:
  1270 ;;		_ENVIA_LCD_CMD
  1271 ;; This function is called by:
  1272 ;;		_LCD_Init
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text10
  1278  000D52                     __ptext10:
  1279                           	callstack 0
  1280  000D52                     _BORRAR_LCD:
  1281                           	callstack 27
  1282  000D52                     
  1283                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1284  000D52  0E01               	movlw	1
  1285  000D54  EC1F  F006         	call	_ENVIA_LCD_CMD
  1286  000D58  0012               	return		;funcret
  1287  000D5A                     __end_of_BORRAR_LCD:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _ENVIA_LCD_CMD *****************
  1291 ;; Defined at:
  1292 ;;		line 104 in file "LCD.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  dato            1    wreg     unsigned char 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  dato            1    1[COMRAM] unsigned char 
  1297 ;;  aux             1    2[COMRAM] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0
  1308 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1310 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1311 ;;Total ram usage:        2 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 1
  1314 ;; This function calls:
  1315 ;;		_ENVIA_NIBBLE
  1316 ;;		_LEER_LCD
  1317 ;; This function is called by:
  1318 ;;		_POS_CURSOR
  1319 ;;		_CURSOR_HOME
  1320 ;;		_CURSOR_ONOFF
  1321 ;;		_BORRAR_LCD
  1322 ;;		_LCD_CONFIG
  1323 ;;		_BLINK_CURSOR
  1324 ;;		_DISPLAY_ONOFF
  1325 ;;		_GENERACARACTER
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text11
  1330  000C3E                     __ptext11:
  1331                           	callstack 0
  1332  000C3E                     _ENVIA_LCD_CMD:
  1333                           	callstack 28
  1334                           
  1335                           ;incstack = 0
  1336                           ;ENVIA_LCD_CMD@dato stored from wreg
  1337  000C3E  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1338  000C40                     
  1339                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1340  000C40  908C               	bcf	140,0,c	;volatile
  1341  000C42                     
  1342                           ;LCD.c: 108:  LEER_LCD();
  1343  000C42  EC4D  F005         	call	_LEER_LCD	;wreg free
  1344  000C46                     
  1345                           ;LCD.c: 109:  TRISD = 0b00000000;
  1346  000C46  0E00               	movlw	0
  1347  000C48  6E95               	movwf	149,c	;volatile
  1348  000C4A                     
  1349                           ;LCD.c: 111:         _delay(1200);
  1350  000C4A  0EF0               	movlw	240
  1351  000C4C                     u487:
  1352  000C4C  D000               	nop2	
  1353  000C4E  2EE8               	decfsz	wreg,f,c
  1354  000C50  D7FD               	bra	u487
  1355  000C52                     
  1356                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1357  000C52  928C               	bcf	140,1,c	;volatile
  1358  000C54                     
  1359                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1360  000C54  948C               	bcf	140,2,c	;volatile
  1361  000C56                     
  1362                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1363  000C56  908C               	bcf	140,0,c	;volatile
  1364  000C58                     
  1365                           ;LCD.c: 115:  aux = dato & 0xF0;
  1366  000C58  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1367  000C5A  0BF0               	andlw	240
  1368  000C5C  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1369  000C5E                     
  1370                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1371  000C5E  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1372  000C60  EC8D  F006         	call	_ENVIA_NIBBLE
  1373  000C64                     
  1374                           ;LCD.c: 117:  aux = dato<<4;
  1375  000C64  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1376  000C66  0BF0               	andlw	240
  1377  000C68  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1378  000C6A                     
  1379                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1380  000C6A  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1381  000C6C  EC8D  F006         	call	_ENVIA_NIBBLE
  1382  000C70  0012               	return		;funcret
  1383  000C72                     __end_of_ENVIA_LCD_CMD:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function _ESCRIBE_MENSAJE *****************
  1387 ;; Defined at:
  1388 ;;		line 41 in file "LCD.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1391 ;;		 -> STR_4(9), STR_3(9), STR_2(16), STR_1(11), 
  1392 ;;  tam             1    5[COMRAM] unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  i               1    8[COMRAM] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1404 ;;      Params:         3       0       0       0       0       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1406 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1407 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1408 ;;Total ram usage:        6 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 2
  1411 ;; This function calls:
  1412 ;;		_ENVIA_CHAR
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text12
  1419  000BC6                     __ptext12:
  1420                           	callstack 0
  1421  000BC6                     _ESCRIBE_MENSAJE:
  1422                           	callstack 28
  1423  000BC6                     
  1424                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1425  000BC6  0E00               	movlw	0
  1426  000BC8  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1427                           
  1428                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1429  000BCA  0E00               	movlw	0
  1430  000BCC  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1431  000BCE  EFF8  F005         	goto	l1229
  1432  000BD2                     l1225:
  1433                           
  1434                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1435  000BD2  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1436  000BD4  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1437  000BD6  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1438  000BD8  0E00               	movlw	0
  1439  000BDA  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1440  000BDC  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1441  000BDE  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1442  000BE2  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1443  000BE6                     	if	0	;tblptru may be non-zero
  1444  000BE6                     	endif
  1445  000BE6                     	if	0	;tblptru may be non-zero
  1446  000BE6                     	endif
  1447  000BE6  0008               	tblrd		*
  1448  000BE8  50F5               	movf	tablat,w,c
  1449  000BEA  EC39  F006         	call	_ENVIA_CHAR
  1450  000BEE                     
  1451                           ;LCD.c: 47:  }
  1452  000BEE  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1453  000BF0                     l1229:
  1454  000BF0  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1455  000BF2  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1456  000BF4  A0D8               	btfss	status,0,c
  1457  000BF6  EFFF  F005         	goto	u401
  1458  000BFA  EF01  F006         	goto	u400
  1459  000BFE                     u401:
  1460  000BFE  EFE9  F005         	goto	l1225
  1461  000C02                     u400:
  1462  000C02  0012               	return		;funcret
  1463  000C04                     __end_of_ESCRIBE_MENSAJE:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _ENVIA_CHAR *****************
  1467 ;; Defined at:
  1468 ;;		line 50 in file "LCD.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  dato            1    wreg     unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  dato            1    1[COMRAM] unsigned char 
  1473 ;;  aux             1    2[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0
  1484 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1486 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 1
  1490 ;; This function calls:
  1491 ;;		_ENVIA_NIBBLE
  1492 ;;		_LEER_LCD
  1493 ;; This function is called by:
  1494 ;;		_ESCRIBE_MENSAJE
  1495 ;;		_main
  1496 ;;		_GENERACARACTER
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text13
  1501  000C72                     __ptext13:
  1502                           	callstack 0
  1503  000C72                     _ENVIA_CHAR:
  1504                           	callstack 28
  1505                           
  1506                           ;incstack = 0
  1507                           ;ENVIA_CHAR@dato stored from wreg
  1508  000C72  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1509  000C74                     
  1510                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1511  000C74  808C               	bsf	140,0,c	;volatile
  1512  000C76                     
  1513                           ;LCD.c: 54:  LEER_LCD();
  1514  000C76  EC4D  F005         	call	_LEER_LCD	;wreg free
  1515  000C7A                     
  1516                           ;LCD.c: 55:  TRISD = 0x00;
  1517  000C7A  0E00               	movlw	0
  1518  000C7C  6E95               	movwf	149,c	;volatile
  1519  000C7E                     
  1520                           ;LCD.c: 56:         _delay(1200);
  1521  000C7E  0EF0               	movlw	240
  1522  000C80                     u497:
  1523  000C80  D000               	nop2	
  1524  000C82  2EE8               	decfsz	wreg,f,c
  1525  000C84  D7FD               	bra	u497
  1526  000C86                     
  1527                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1528  000C86  928C               	bcf	140,1,c	;volatile
  1529  000C88                     
  1530                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1531  000C88  948C               	bcf	140,2,c	;volatile
  1532  000C8A                     
  1533                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1534  000C8A  808C               	bsf	140,0,c	;volatile
  1535  000C8C                     
  1536                           ;LCD.c: 61:  aux = dato & 0xF0;
  1537  000C8C  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1538  000C8E  0BF0               	andlw	240
  1539  000C90  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1540  000C92                     
  1541                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1542  000C92  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1543  000C94  EC8D  F006         	call	_ENVIA_NIBBLE
  1544  000C98                     
  1545                           ;LCD.c: 63:  aux = dato << 4;
  1546  000C98  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1547  000C9A  0BF0               	andlw	240
  1548  000C9C  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1549  000C9E                     
  1550                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1551  000C9E  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1552  000CA0  EC8D  F006         	call	_ENVIA_NIBBLE
  1553  000CA4  0012               	return		;funcret
  1554  000CA6                     __end_of_ENVIA_CHAR:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _LEER_LCD *****************
  1558 ;; Defined at:
  1559 ;;		line 121 in file "LCD.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  aux             1    0[COMRAM] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1573 ;;      Params:         0       0       0       0       0       0       0       0       0
  1574 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1576 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1577 ;;Total ram usage:        1 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_ENVIA_CHAR
  1583 ;;		_ENVIA_LCD_CMD
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text14
  1588  000A9A                     __ptext14:
  1589                           	callstack 0
  1590  000A9A                     _LEER_LCD:
  1591                           	callstack 28
  1592  000A9A                     
  1593                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1594  000A9A  0EF8               	movlw	248
  1595  000A9C  6E95               	movwf	149,c	;volatile
  1596  000A9E                     
  1597                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1598  000A9E  908C               	bcf	140,0,c	;volatile
  1599  000AA0                     
  1600                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1601  000AA0  828C               	bsf	140,1,c	;volatile
  1602  000AA2                     
  1603                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1604  000AA2  848C               	bsf	140,2,c	;volatile
  1605  000AA4                     
  1606                           ;LCD.c: 128:         _delay(1200);
  1607  000AA4  0EF0               	movlw	240
  1608  000AA6                     u507:
  1609  000AA6  D000               	nop2	
  1610  000AA8  2EE8               	decfsz	wreg,f,c
  1611  000AAA  D7FD               	bra	u507
  1612  000AAC                     
  1613                           ;LCD.c: 130:  aux = PORTD;
  1614  000AAC  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1615  000AB0                     
  1616                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1617  000AB0  948C               	bcf	140,2,c	;volatile
  1618  000AB2                     
  1619                           ;LCD.c: 132:         _delay(1200);
  1620  000AB2  0EF0               	movlw	240
  1621  000AB4                     u517:
  1622  000AB4  D000               	nop2	
  1623  000AB6  2EE8               	decfsz	wreg,f,c
  1624  000AB8  D7FD               	bra	u517
  1625  000ABA                     
  1626                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1627  000ABA  848C               	bsf	140,2,c	;volatile
  1628  000ABC                     
  1629                           ;LCD.c: 135:         _delay(1200);
  1630  000ABC  0EF0               	movlw	240
  1631  000ABE                     u527:
  1632  000ABE  D000               	nop2	
  1633  000AC0  2EE8               	decfsz	wreg,f,c
  1634  000AC2  D7FD               	bra	u527
  1635  000AC4                     
  1636                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1637  000AC4  948C               	bcf	140,2,c	;volatile
  1638  000AC6                     l835:
  1639                           
  1640                           ;LCD.c: 138:  aux = aux & 0x80;
  1641  000AC6  5001               	movf	LEER_LCD@aux^0,w,c
  1642  000AC8  0B80               	andlw	128
  1643  000ACA  6E01               	movwf	LEER_LCD@aux^0,c
  1644                           
  1645                           ;LCD.c: 139:  while(aux == 0x80)
  1646  000ACC  EF7C  F005         	goto	l849
  1647  000AD0                     l67:
  1648                           
  1649                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1650  000AD0  848C               	bsf	140,2,c	;volatile
  1651  000AD2                     
  1652                           ;LCD.c: 142:             _delay(1200);
  1653  000AD2  0EF0               	movlw	240
  1654  000AD4                     u537:
  1655  000AD4  D000               	nop2	
  1656  000AD6  2EE8               	decfsz	wreg,f,c
  1657  000AD8  D7FD               	bra	u537
  1658  000ADA                     
  1659                           ;LCD.c: 143:             aux = PORTD;
  1660  000ADA  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1661  000ADE                     
  1662                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1663  000ADE  948C               	bcf	140,2,c	;volatile
  1664                           
  1665                           ;LCD.c: 145:             _delay(1200);
  1666  000AE0  0EF0               	movlw	240
  1667  000AE2                     u547:
  1668  000AE2  D000               	nop2	
  1669  000AE4  2EE8               	decfsz	wreg,f,c
  1670  000AE6  D7FD               	bra	u547
  1671  000AE8                     
  1672                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1673  000AE8  848C               	bsf	140,2,c	;volatile
  1674                           
  1675                           ;LCD.c: 147:             _delay(1200);
  1676  000AEA  0EF0               	movlw	240
  1677  000AEC                     u557:
  1678  000AEC  D000               	nop2	
  1679  000AEE  2EE8               	decfsz	wreg,f,c
  1680  000AF0  D7FD               	bra	u557
  1681  000AF2                     
  1682                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1683  000AF2  948C               	bcf	140,2,c	;volatile
  1684  000AF4  EF63  F005         	goto	l835
  1685  000AF8                     l849:
  1686                           
  1687                           ;LCD.c: 139:  while(aux == 0x80)
  1688  000AF8  0E80               	movlw	128
  1689  000AFA  1801               	xorwf	LEER_LCD@aux^0,w,c
  1690  000AFC  B4D8               	btfsc	status,2,c
  1691  000AFE  EF83  F005         	goto	u11
  1692  000B02  EF85  F005         	goto	u10
  1693  000B06                     u11:
  1694  000B06  EF68  F005         	goto	l67
  1695  000B0A                     u10:
  1696  000B0A  0012               	return		;funcret
  1697  000B0C                     __end_of_LEER_LCD:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _ENVIA_NIBBLE *****************
  1701 ;; Defined at:
  1702 ;;		line 93 in file "LCD.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  dato            1    wreg     unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  dato            1    0[COMRAM] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0
  1717 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1719 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1720 ;;Total ram usage:        1 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_ENVIA_CHAR
  1726 ;;		_LCD_CONFIG
  1727 ;;		_ENVIA_LCD_CMD
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text15
  1732  000D1A                     __ptext15:
  1733                           	callstack 0
  1734  000D1A                     _ENVIA_NIBBLE:
  1735                           	callstack 28
  1736                           
  1737                           ;incstack = 0
  1738                           ;ENVIA_NIBBLE@dato stored from wreg
  1739  000D1A  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1740  000D1C                     
  1741                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1742  000D1C  0E0F               	movlw	15
  1743  000D1E  168C               	andwf	140,f,c	;volatile
  1744                           
  1745                           ;LCD.c: 96:  dato &= 0xF0;
  1746  000D20  0EF0               	movlw	240
  1747  000D22  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1748                           
  1749                           ;LCD.c: 97:  LATD|= dato;
  1750  000D24  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1751  000D26  128C               	iorwf	140,f,c	;volatile
  1752  000D28                     
  1753                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1754  000D28  848C               	bsf	140,2,c	;volatile
  1755  000D2A                     
  1756                           ;LCD.c: 100:         _delay(1200);
  1757  000D2A  0EF0               	movlw	240
  1758  000D2C                     u567:
  1759  000D2C  D000               	nop2	
  1760  000D2E  2EE8               	decfsz	wreg,f,c
  1761  000D30  D7FD               	bra	u567
  1762  000D32                     
  1763                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1764  000D32  948C               	bcf	140,2,c	;volatile
  1765  000D34  0012               	return		;funcret
  1766  000D36                     __end_of_ENVIA_NIBBLE:
  1767                           	callstack 0
  1768                           
  1769                           	psect	rparam
  1770  0000                     
  1771                           	psect	idloc
  1772                           
  1773                           ;Config register IDLOC0 @ 0x200000
  1774                           ;	unspecified, using default values
  1775  200000                     	org	2097152
  1776  200000  FF                 	db	255
  1777                           
  1778                           ;Config register IDLOC1 @ 0x200001
  1779                           ;	unspecified, using default values
  1780  200001                     	org	2097153
  1781  200001  FF                 	db	255
  1782                           
  1783                           ;Config register IDLOC2 @ 0x200002
  1784                           ;	unspecified, using default values
  1785  200002                     	org	2097154
  1786  200002  FF                 	db	255
  1787                           
  1788                           ;Config register IDLOC3 @ 0x200003
  1789                           ;	unspecified, using default values
  1790  200003                     	org	2097155
  1791  200003  FF                 	db	255
  1792                           
  1793                           ;Config register IDLOC4 @ 0x200004
  1794                           ;	unspecified, using default values
  1795  200004                     	org	2097156
  1796  200004  FF                 	db	255
  1797                           
  1798                           ;Config register IDLOC5 @ 0x200005
  1799                           ;	unspecified, using default values
  1800  200005                     	org	2097157
  1801  200005  FF                 	db	255
  1802                           
  1803                           ;Config register IDLOC6 @ 0x200006
  1804                           ;	unspecified, using default values
  1805  200006                     	org	2097158
  1806  200006  FF                 	db	255
  1807                           
  1808                           ;Config register IDLOC7 @ 0x200007
  1809                           ;	unspecified, using default values
  1810  200007                     	org	2097159
  1811  200007  FF                 	db	255
  1812                           
  1813                           	psect	config
  1814                           
  1815                           ;Config register CONFIG1L @ 0x300000
  1816                           ;	PLL Selection
  1817                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1818                           ;	PLL Enable Configuration bit
  1819                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1820                           ;	CPU System Clock Postscaler
  1821                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1822                           ;	Low Speed USB mode with 48 MHz system clock
  1823                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1824  300000                     	org	3145728
  1825  300000  00                 	db	0
  1826                           
  1827                           ;Config register CONFIG1H @ 0x300001
  1828                           ;	Oscillator Selection
  1829                           ;	FOSC = INTOSCIO, Internal oscillator
  1830                           ;	Primary Oscillator Shutdown
  1831                           ;	PCLKEN = ON, Primary oscillator enabled
  1832                           ;	Fail-Safe Clock Monitor
  1833                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1834                           ;	Internal/External Oscillator Switchover
  1835                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1836  300001                     	org	3145729
  1837  300001  28                 	db	40
  1838                           
  1839                           ;Config register CONFIG2L @ 0x300002
  1840                           ;	Power-up Timer Enable
  1841                           ;	nPWRTEN = ON, Power up timer enabled
  1842                           ;	Brown-out Reset Enable
  1843                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  1844                           ;	Brown-out Reset Voltage
  1845                           ;	BORV = 190, BOR set to 1.9V nominal
  1846                           ;	Low-Power Brown-out Reset
  1847                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1848  300002                     	org	3145730
  1849  300002  58                 	db	88
  1850                           
  1851                           ;Config register CONFIG2H @ 0x300003
  1852                           ;	Watchdog Timer Enable bits
  1853                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1854                           ;	Watchdog Timer Postscaler
  1855                           ;	WDTPS = 32768, 1:32768
  1856  300003                     	org	3145731
  1857  300003  3C                 	db	60
  1858                           
  1859                           ; Padding undefined space
  1860  300004                     	org	3145732
  1861  300004  FF                 	db	255
  1862                           
  1863                           ;Config register CONFIG3H @ 0x300005
  1864                           ;	CCP2 MUX bit
  1865                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1866                           ;	PORTB A/D Enable bit
  1867                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1868                           ;	Timer3 Clock Input MUX bit
  1869                           ;	T3CMX = RC0, T3CKI function is on RC0
  1870                           ;	SDO Output MUX bit
  1871                           ;	SDOMX = RB3, SDO function is on RB3
  1872                           ;	Master Clear Reset Pin Enable
  1873                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1874  300005                     	org	3145733
  1875  300005  D1                 	db	209
  1876                           
  1877                           ;Config register CONFIG4L @ 0x300006
  1878                           ;	Stack Full/Underflow Reset
  1879                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1880                           ;	Single-Supply ICSP Enable bit
  1881                           ;	LVP = OFF, Single-Supply ICSP disabled
  1882                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1883                           ;	ICPRT = OFF, ICPORT disabled
  1884                           ;	Extended Instruction Set Enable bit
  1885                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1886                           ;	Background Debugger Enable bit
  1887                           ;	DEBUG = 0x1, unprogrammed default
  1888  300006                     	org	3145734
  1889  300006  81                 	db	129
  1890                           
  1891                           ; Padding undefined space
  1892  300007                     	org	3145735
  1893  300007  FF                 	db	255
  1894                           
  1895                           ;Config register CONFIG5L @ 0x300008
  1896                           ;	Block 0 Code Protect
  1897                           ;	CP0 = OFF, Block 0 is not code-protected
  1898                           ;	Block 1 Code Protect
  1899                           ;	CP1 = OFF, Block 1 is not code-protected
  1900                           ;	Block 2 Code Protect
  1901                           ;	CP2 = OFF, Block 2 is not code-protected
  1902                           ;	Block 3 Code Protect
  1903                           ;	CP3 = OFF, Block 3 is not code-protected
  1904  300008                     	org	3145736
  1905  300008  0F                 	db	15
  1906                           
  1907                           ;Config register CONFIG5H @ 0x300009
  1908                           ;	Boot Block Code Protect
  1909                           ;	CPB = OFF, Boot block is not code-protected
  1910                           ;	Data EEPROM Code Protect
  1911                           ;	CPD = OFF, Data EEPROM is not code-protected
  1912  300009                     	org	3145737
  1913  300009  C0                 	db	192
  1914                           
  1915                           ;Config register CONFIG6L @ 0x30000A
  1916                           ;	Block 0 Write Protect
  1917                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1918                           ;	Block 1 Write Protect
  1919                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1920                           ;	Block 2 Write Protect
  1921                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1922                           ;	Block 3 Write Protect
  1923                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1924  30000A                     	org	3145738
  1925  30000A  0F                 	db	15
  1926                           
  1927                           ;Config register CONFIG6H @ 0x30000B
  1928                           ;	Configuration Registers Write Protect
  1929                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1930                           ;	Boot Block Write Protect
  1931                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1932                           ;	Data EEPROM Write Protect
  1933                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1934  30000B                     	org	3145739
  1935  30000B  E0                 	db	224
  1936                           
  1937                           ;Config register CONFIG7L @ 0x30000C
  1938                           ;	Block 0 Table Read Protect
  1939                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1940                           ;	Block 1 Table Read Protect
  1941                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1942                           ;	Block 2 Table Read Protect
  1943                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1944                           ;	Block 3 Table Read Protect
  1945                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1946  30000C                     	org	3145740
  1947  30000C  0F                 	db	15
  1948                           
  1949                           ;Config register CONFIG7H @ 0x30000D
  1950                           ;	Boot Block Table Read Protect
  1951                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1952  30000D                     	org	3145741
  1953  30000D  40                 	db	64
  1954                           tosu	equ	0xFFF
  1955                           tosh	equ	0xFFE
  1956                           tosl	equ	0xFFD
  1957                           stkptr	equ	0xFFC
  1958                           pclatu	equ	0xFFB
  1959                           pclath	equ	0xFFA
  1960                           pcl	equ	0xFF9
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           prodh	equ	0xFF4
  1966                           prodl	equ	0xFF3
  1967                           indf0	equ	0xFEF
  1968                           postinc0	equ	0xFEE
  1969                           postdec0	equ	0xFED
  1970                           preinc0	equ	0xFEC
  1971                           plusw0	equ	0xFEB
  1972                           fsr0h	equ	0xFEA
  1973                           fsr0l	equ	0xFE9
  1974                           wreg	equ	0xFE8
  1975                           indf1	equ	0xFE7
  1976                           postinc1	equ	0xFE6
  1977                           postdec1	equ	0xFE5
  1978                           preinc1	equ	0xFE4
  1979                           plusw1	equ	0xFE3
  1980                           fsr1h	equ	0xFE2
  1981                           fsr1l	equ	0xFE1
  1982                           bsr	equ	0xFE0
  1983                           indf2	equ	0xFDF
  1984                           postinc2	equ	0xFDE
  1985                           postdec2	equ	0xFDD
  1986                           preinc2	equ	0xFDC
  1987                           plusw2	equ	0xFDB
  1988                           fsr2h	equ	0xFDA
  1989                           fsr2l	equ	0xFD9
  1990                           status	equ	0xFD8

Data Sizes:
    Strings     45
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[16]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _convierte->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_Init->_CURSOR_ONOFF
    _LCD_Init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3366
                                             15 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                           _LCD_Init
                         _POS_CURSOR
                          _configuro
                          _convierte
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     819
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _LCD_Init
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      14       1       21.1%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhll       2A      0       0      23        0.0%
BITBIGSFRllh        27      0       0      27        0.0%
BITBIGSFRhhlhh       E      0       0      21        0.0%
BITBIGSFRlh          8      0       0      26        0.0%
BITBIGSFRlll         8      0       0      28        0.0%
BITBIGSFRhll         5      0       0      25        0.0%
BITBIGSFRhlh         2      0       0      24        0.0%
BITBIGSFRhhlhl       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      29        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Feb 01 15:04:58 2023

                     l24 0C3C                       l42 0CD4                       l51 0CA4  
                     l60 0D34                       l37 0D50                       l54 0D58  
                     l63 0C70                       l48 0C02                       l57 0B6A  
                     l67 0AD0                       l69 0B0A                       u10 0B0A  
                     u11 0B06                       u20 0CB8                       u21 0CB4  
                     u30 0CCE                       u31 0CCA             ___awdiv@sign 000C  
          ENVIA_CHAR@aux 0003                      l120 0CFC                      l123 0BC4  
                    l132 08D8                      l117 0D18                      l129 088C  
                    l371 09E8                      l384 0A98                      l821 0AA4  
                    l813 0A9A                      l901 0C88                      l831 0ABC  
                    l823 0AAC                      l815 0A9E                      l911 0C9E  
                    l903 0C8A                      l841 0ADE                      l833 0AC4  
                    l825 0AB0                      l817 0AA0                      l905 0C8C  
                    l913 0D52                      l921 0B24                      l851 0D1C  
                    l843 0AE8                      l835 0AC6                      l827 0AB2  
                    l819 0AA2                      l907 0C92                      l931 0B52  
                    l923 0B38                      l915 0B0C                      l853 0D28  
                    l845 0AF2                      l837 0AD2                      l829 0ABA  
                    l909 0C98                      l861 0C42                      l933 0B58  
                    l925 0B40                      l917 0B10                      l855 0D2A  
                    l839 0ADA                      l871 0C56                      l863 0C46  
                    l935 0B5E                      l927 0B46                      l919 0B16  
                    l857 0D32                      l849 0AF8                      l873 0C58  
                    l865 0C4A                      l881 0D4A                      l937 0B64  
                    l929 0B4C                      l891 0C74                      l875 0C5E  
                    l867 0C52                      l859 0C40                      l883 0CA8  
                    l893 0C76                      l877 0C64                      l869 0C54  
                    l885 0CB8                      l895 0C7A                      l879 0C6A  
                    l887 0CBE                      l897 0C7E                      l889 0CCE  
                    l899 0C86                      u300 09B2                      u301 09AE  
                    u310 09D8                      u311 09D4                      u400 0C02  
                    u320 09FC                      u401 0BFE                      u321 09F8  
                    u330 0A16                      u410 089A                      u331 0A12  
                    u411 0896                      u260 0938                      u340 0A30  
                    u420 08E6                      u261 0934                      u341 0A2C  
                    u421 08E2                      u270 0952                      u350 0A4E  
                    u271 094E                      u351 0A4A                      u280 0978  
                    u360 0A64                      u281 0974                      u361 0A60  
                    u290 0996                      u370 0A88                      u507 0AA6  
                    u291 0992                      u371 0A84                      u380 0C16  
                    u517 0AB4                      u381 0C12                      u437 0876  
                    u390 0C34                      u527 0ABE                      u447 0CE0  
                    u391 0C30                      u537 0AD4                      u457 0B1C  
                    u547 0AE2                      u467 0B2A                      u557 0AEC  
                    u477 0B3A                      u567 0D2C                      u487 0C4C  
                    u497 0C80             ___awmod@sign 0006              LEER_LCD@aux 0001  
                    wreg 000FE8             ?_CURSOR_HOME 0001           ??_ENVIA_NIBBLE 0001  
         ENVIA_CHAR@dato 0002                     l1041 0D08                     l1201 0A64  
                   l1051 0CEE                     l1043 0D0A                     l1035 0CFE  
                   l1211 0A90                     l1203 0A6C                     l1053 0CF2  
                   l1045 0CD6                     l1221 0C34                     l1037 0D02  
                   l1141 0940                     l1205 0A72                     l1223 0BC6  
                   l1055 0CF6                     l1047 0CDA                     l1215 0C06  
                   l1039 0D04                     l1151 0966                     l1143 0944  
                   l1135 0926                     l1207 0A78                     l1231 0B6E  
                   l1225 0BD2                     l1049 0CEA                     l1217 0C16  
                   l1161 099C                     l1153 0978                     l1145 0952  
                   l1137 092A                     l1209 0A88                     l1241 0852  
                   l1233 0830                     l1227 0BEE                     l1219 0C22  
                   l1163 09B2                     l1155 0980                     l1171 09C8  
                   l1147 095A                     l1139 0938                     l1251 088A  
                   l1243 085C                     l1235 0834                     l1229 0BF0  
                   l1173 09D8                     l1165 09BA                     l1157 0988  
                   l1149 095E                     l1181 09EE                     l1261 08CA  
                   l1253 089A                     l1245 086C                     l1237 0838  
                   l1175 09E0                     l1167 09BC                     l1159 0996  
                   l1191 0A1E                     l1183 09FC                     l1271 0906  
                   l1263 08D2                     l1255 08AA                     l1247 0882  
                   l1239 0842                     l1169 09C2                     l1193 0A30  
                   l1185 0A04                     l1273 090E                     l1265 08D6  
                   l1257 08BA                     l1249 0886                     l1195 0A38  
                   l1187 0A08                     l1179 09EA                     l1275 0916  
                   l1267 08E6                     l1259 08C2                     l1197 0A40  
                   l1189 0A16                     l1269 08F6                     l1199 0A4E  
                   STR_1 0811                     STR_2 0801                     STR_3 081C  
                   STR_4 0825                     _LATD 000F8C                     _main 0830  
                   start 0000            ?_CURSOR_ONOFF 0001             ___param_bank 000000  
        ??_ENVIA_LCD_CMD 0002         __end_of_LEER_LCD 0B0C         __end_of_LCD_Init 0CFE  
                  ?_main 0001          __end_of___awdiv 09EA          __end_of___awmod 0A9A  
        ___awdiv@divisor 0009          ___awdiv@counter 000B                    _PORTD 000F83  
                  _TRISD 000F95              ?_POS_CURSOR 0004                    tablat 000FF5  
                  status 000FD8           ??_CURSOR_ONOFF 0004          __initialization 0D36  
           __end_of_main 0926          _ESCRIBE_MENSAJE 0BC6                   ??_main 0010  
          __activetblptr 000001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4         ___awdiv@dividend 0007  
                 _OSCCON 000FD3                ??___awdiv 000B                ??___awmod 0005  
   __end_of_ENVIA_NIBBLE 0D36         ___awdiv@quotient 000D          ___awmod@divisor 0003  
                 isa$std 000001          ___awmod@counter 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ??_BORRAR_LCD 0004                ?_LEER_LCD 0001               __accesstop 0060  
__end_of__initialization 0D3C                ?_LCD_Init 0001             ??_LCD_CONFIG 0004  
          ___rparam_used 000001             ??_ENVIA_CHAR 0002  __end_of_ESCRIBE_MENSAJE 0C04  
         __pcstackCOMRAM 0001       __end_of_BORRAR_LCD 0D5A         ENVIA_LCD_CMD@aux 0003  
   __end_of_CURSOR_ONOFF 0CD6       __end_of_LCD_CONFIG 0B6C       __end_of_ENVIA_CHAR 0CA6  
             ??_LEER_LCD 0001         ENVIA_NIBBLE@dato 0001               ??_LCD_Init 0005  
           ??_POS_CURSOR 0005                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0004        __end_of_configuro 0D1A                  ___awdiv 0926  
                ___awmod 09EA             __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0C72  
      __end_of_convierte 0BC6                  _decenas 0013                  __pcinit 0D36  
     __end_of_POS_CURSOR 0C3E                  __ramtop 0800                  __ptext0 0830  
                __ptext1 0B6C                  __ptext2 09EA                  __ptext3 0926  
                __ptext4 0CFE                  __ptext5 0C04                  __ptext6 0CD6  
                __ptext7 0B0C                  __ptext8 0CA6                  __ptext9 0D4A  
       ___awmod@dividend 0001             _ENVIA_NIBBLE 0D1A     end_of_initialization 0D3C  
              _TRISAbits 000F92             _CURSOR_ONOFF 0CA6       CURSOR_ONOFF@estado 0004  
          ??_CURSOR_HOME 0004      start_initialization 0D36        ENVIA_LCD_CMD@dato 0002  
            __pbssCOMRAM 0012      __end_of_CURSOR_HOME 0D52                 ?___awdiv 0007  
               ?___awmod 0001                _configuro 0CFE              __smallconst 0800  
              _convierte 0B6C          convierte@numero 000F                 _LEER_LCD 0A9A  
               _LCD_Init 0CD6                 _LATDbits 000F8C         ESCRIBE_MENSAJE@i 0009  
         POS_CURSOR@fila 0005               ?_configuro 0001               _ADCON0bits 000FC2  
             ?_convierte 0001              _CURSOR_HOME 0D4A                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800               _ANSELAbits 000F5B  
               _centenas 0014                 __ptext10 0D52                 __ptext11 0C3E  
               __ptext12 0BC6                 __ptext13 0C72                 __ptext14 0A9A  
               __ptext15 0D1A               _BORRAR_LCD 0D52               _LCD_CONFIG 0B0C  
             _ENVIA_CHAR 0C72                 isa$xinst 000000                 _unidades 0012  
          _ENVIA_LCD_CMD 0C3E              ??_configuro 0001              ??_convierte 000F  
      ??_ESCRIBE_MENSAJE 0007    ESCRIBE_MENSAJE@cadena 0004           ?_ENVIA_LCD_CMD 0001  
            ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001               _POS_CURSOR 0C04  
            ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0006              ?_ENVIA_CHAR 0001  
      POS_CURSOR@columna 0004  
