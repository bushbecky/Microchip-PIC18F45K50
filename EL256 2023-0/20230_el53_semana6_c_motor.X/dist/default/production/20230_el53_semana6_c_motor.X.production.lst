

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Feb 14 16:20:40 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.35
    45                           ; Generated 05/05/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F45K50 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     _RCREG1	set	4014
    80  0000                     _TXREG	set	4013
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _LATD	set	3980
    83  0000                     _ANSELAbits	set	3931
    84  0000                     _ANSELB	set	3932
    85  0000                     _ANSELCbits	set	3933
    86  0000                     _PORTD	set	3971
    87  0000                     _LATDbits	set	3980
    88  0000                     _LATEbits	set	3981
    89  0000                     _TRISAbits	set	3986
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISEbits	set	3990
    93  0000                     _PIE1bits	set	3997
    94  0000                     _RCSTA1bits	set	4011
    95  0000                     _TXSTA1bits	set	4012
    96  0000                     _SPBRG1	set	4015
    97  0000                     _OSCCON	set	4051
    98  0000                     _INTCONbits	set	4082
    99  0000                     _T2CON	set	4026
   100  0000                     _PR2	set	4027
   101  0000                     _ANSELEbits	set	3935
   102  0000                     _PIR1bits	set	3998
   103  0000                     _CCP1CON	set	4029
   104  0000                     _ADCON2	set	4032
   105  0000                     _CCPR1L	set	4030
   106  0000                     _ADRESH	set	4036
   107  0000                     _ADCON0	set	4034
   108  0000                     _ADCON1	set	4033
   109                           
   110                           	psect	smallconst
   111  000800                     __psmallconst:
   112                           	callstack 0
   113  000800  00                 	db	0
   114  000801                     STR_7:
   115  000801  54                 	db	84	;'T'
   116  000802  65                 	db	101	;'e'
   117  000803  63                 	db	99	;'c'
   118  000804  6C                 	db	108	;'l'
   119  000805  61                 	db	97	;'a'
   120  000806  20                 	db	32
   121  000807  65                 	db	101	;'e'
   122  000808  72                 	db	114	;'r'
   123  000809  72                 	db	114	;'r'
   124  00080A  61                 	db	97	;'a'
   125  00080B  64                 	db	100	;'d'
   126  00080C  61                 	db	97	;'a'
   127  00080D  20                 	db	32
   128  00080E  6F                 	db	111	;'o'
   129  00080F  6E                 	db	110	;'n'
   130  000810  20                 	db	32
   131  000811  00                 	db	0
   132  000812                     STR_5:
   133  000812  53                 	db	83	;'S'
   134  000813  65                 	db	101	;'e'
   135  000814  6E                 	db	110	;'n'
   136  000815  74                 	db	116	;'t'
   137  000816  69                 	db	105	;'i'
   138  000817  64                 	db	100	;'d'
   139  000818  6F                 	db	111	;'o'
   140  000819  20                 	db	32
   141  00081A  68                 	db	104	;'h'
   142  00081B  6F                 	db	111	;'o'
   143  00081C  72                 	db	114	;'r'
   144  00081D  61                 	db	97	;'a'
   145  00081E  72                 	db	114	;'r'
   146  00081F  69                 	db	105	;'i'
   147  000820  6F                 	db	111	;'o'
   148  000821  20                 	db	32
   149  000822  00                 	db	0
   150  000823                     STR_2:
   151  000823  55                 	db	85	;'U'
   152  000824  50                 	db	80	;'P'
   153  000825  43                 	db	67	;'C'
   154  000826  20                 	db	32
   155  000827  53                 	db	83	;'S'
   156  000828  65                 	db	101	;'e'
   157  000829  6D                 	db	109	;'m'
   158  00082A  61                 	db	97	;'a'
   159  00082B  6E                 	db	110	;'n'
   160  00082C  61                 	db	97	;'a'
   161  00082D  36                 	db	54	;'6'
   162  00082E  20                 	db	32
   163  00082F  32                 	db	50	;'2'
   164  000830  30                 	db	48	;'0'
   165  000831  32                 	db	50	;'2'
   166  000832  33                 	db	51	;'3'
   167  000833  00                 	db	0
   168  000834                     STR_6:
   169  000834  53                 	db	83	;'S'
   170  000835  65                 	db	101	;'e'
   171  000836  6E                 	db	110	;'n'
   172  000837  74                 	db	116	;'t'
   173  000838  69                 	db	105	;'i'
   174  000839  64                 	db	100	;'d'
   175  00083A  6F                 	db	111	;'o'
   176  00083B  20                 	db	32
   177  00083C  61                 	db	97	;'a'
   178  00083D  6C                 	db	108	;'l'
   179  00083E  20                 	db	32
   180  00083F  72                 	db	114	;'r'
   181  000840  65                 	db	101	;'e'
   182  000841  76                 	db	118	;'v'
   183  000842  65                 	db	101	;'e'
   184  000843  73                 	db	115	;'s'
   185  000844  00                 	db	0
   186  000845                     STR_3:
   187  000845  55                 	db	85	;'U'
   188  000846  50                 	db	80	;'P'
   189  000847  43                 	db	67	;'C'
   190  000848  20                 	db	32
   191  000849  4D                 	db	77	;'M'
   192  00084A  65                 	db	101	;'e'
   193  00084B  63                 	db	99	;'c'
   194  00084C  61                 	db	97	;'a'
   195  00084D  74                 	db	116	;'t'
   196  00084E  72                 	db	114	;'r'
   197  00084F  6F                 	db	111	;'o'
   198  000850  6E                 	db	110	;'n'
   199  000851  69                 	db	105	;'i'
   200  000852  63                 	db	99	;'c'
   201  000853  61                 	db	97	;'a'
   202  000854  00                 	db	0
   203  000855                     STR_1:
   204  000855  48                 	db	72	;'H'
   205  000856  6F                 	db	111	;'o'
   206  000857  6C                 	db	108	;'l'
   207  000858  61                 	db	97	;'a'
   208  000859  20                 	db	32
   209  00085A  6D                 	db	109	;'m'
   210  00085B  75                 	db	117	;'u'
   211  00085C  6E                 	db	110	;'n'
   212  00085D  64                 	db	100	;'d'
   213  00085E  6F                 	db	111	;'o'
   214  00085F  00                 	db	0
   215  000860                     STR_4:
   216  000860  50                 	db	80	;'P'
   217  000861  57                 	db	87	;'W'
   218  000862  4D                 	db	77	;'M'
   219  000863  3A                 	db	58	;':'
   220  000864  00                 	db	0
   221  000865  00                 	db	0	; dummy byte at the end
   222  0000                     
   223                           ; #config settings
   224                           
   225                           	psect	cinit
   226  00168E                     __pcinit:
   227                           	callstack 0
   228  00168E                     start_initialization:
   229                           	callstack 0
   230  00168E                     __initialization:
   231                           	callstack 0
   232                           
   233                           ; Clear objects allocated to COMRAM (7 bytes)
   234  00168E  EE00  F037         	lfsr	0,__pbssCOMRAM
   235  001692  0E07               	movlw	7
   236  001694                     clear_0:
   237  001694  6AEE               	clrf	postinc0,c
   238  001696  06E8               	decf	wreg,f,c
   239  001698  E1FD               	bnz	clear_0
   240  00169A                     end_of_initialization:
   241                           	callstack 0
   242  00169A                     __end_of__initialization:
   243                           	callstack 0
   244  00169A  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   245  00169C  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   246  00169E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   247  0016A0  6EF8               	movwf	tblptru,c
   248  0016A2  0E08               	movlw	high __Lsmallconst
   249  0016A4  6EF7               	movwf	tblptrh,c
   250  0016A6  0100               	movlb	0
   251  0016A8  EF22  F007         	goto	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMRAM
   254  000037                     __pbssCOMRAM:
   255                           	callstack 0
   256  000037                     _calculo:
   257                           	callstack 0
   258  000037                     	ds	4
   259  00003B                     _unidades:
   260                           	callstack 0
   261  00003B                     	ds	1
   262  00003C                     _decenas:
   263                           	callstack 0
   264  00003C                     	ds	1
   265  00003D                     _centenas:
   266                           	callstack 0
   267  00003D                     	ds	1
   268                           
   269                           	psect	cstackCOMRAM
   270  000001                     __pcstackCOMRAM:
   271                           	callstack 0
   272  000001                     i2ENVIA_NIBBLE@dato:
   273                           	callstack 0
   274  000001                     i2LEER_LCD@aux:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x0
   278  000001                     	ds	1
   279  000002                     i2ENVIA_CHAR@dato:
   280                           	callstack 0
   281  000002                     i2ENVIA_LCD_CMD@dato:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x1
   285  000002                     	ds	1
   286  000003                     i2ENVIA_CHAR@aux:
   287                           	callstack 0
   288  000003                     i2ENVIA_LCD_CMD@aux:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x2
   292  000003                     	ds	1
   293  000004                     i2POS_CURSOR@columna:
   294                           	callstack 0
   295  000004                     i2ESCRIBE_MENSAJE@cadena:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x3
   299  000004                     	ds	1
   300  000005                     i2POS_CURSOR@fila:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x4
   304  000005                     	ds	1
   305  000006                     i2ESCRIBE_MENSAJE@tam:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x5
   309  000006                     	ds	1
   310  000007                     ??i2_ESCRIBE_MENSAJE:
   311                           
   312                           ; 1 bytes @ 0x6
   313  000007                     	ds	2
   314  000009                     i2ESCRIBE_MENSAJE@i:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x8
   318  000009                     	ds	1
   319  00000A                     ??_EUSART_RX_ISR:
   320                           
   321                           ; 1 bytes @ 0x9
   322  00000A                     	ds	4
   323  00000E                     ?_strlen:
   324                           	callstack 0
   325  00000E                     ?___awmod:
   326                           	callstack 0
   327  00000E                     ?___fltol:
   328                           	callstack 0
   329  00000E                     ?___xxtofl:
   330                           	callstack 0
   331  00000E                     ENVIA_NIBBLE@dato:
   332                           	callstack 0
   333  00000E                     LEER_LCD@aux:
   334                           	callstack 0
   335  00000E                     ___awmod@dividend:
   336                           	callstack 0
   337  00000E                     strlen@s:
   338                           	callstack 0
   339  00000E                     ___fltol@f1:
   340                           	callstack 0
   341  00000E                     ___xxtofl@val:
   342                           	callstack 0
   343                           
   344                           ; 4 bytes @ 0xD
   345  00000E                     	ds	1
   346  00000F                     ENVIA_CHAR@dato:
   347                           	callstack 0
   348  00000F                     ENVIA_LCD_CMD@dato:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0xE
   352  00000F                     	ds	1
   353  000010                     ENVIA_CHAR@aux:
   354                           	callstack 0
   355  000010                     ENVIA_LCD_CMD@aux:
   356                           	callstack 0
   357  000010                     ___awmod@divisor:
   358                           	callstack 0
   359  000010                     strlen@a:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0xF
   363  000010                     	ds	1
   364  000011                     ??_LCD_CONFIG:
   365  000011                     POS_CURSOR@columna:
   366                           	callstack 0
   367  000011                     CURSOR_ONOFF@estado:
   368                           	callstack 0
   369  000011                     ESCRIBE_MENSAJE@cadena:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x10
   373  000011                     	ds	1
   374  000012                     ??_LCD_Init:
   375  000012                     ??___fltol:
   376  000012                     ??___xxtofl:
   377  000012                     POS_CURSOR@fila:
   378                           	callstack 0
   379  000012                     ___awmod@counter:
   380                           	callstack 0
   381  000012                     SERIAL_ESCRIBE_MENSAJE@cadena:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x11
   385  000012                     	ds	1
   386  000013                     ESCRIBE_MENSAJE@tam:
   387                           	callstack 0
   388  000013                     ___awmod@sign:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x12
   392  000013                     	ds	1
   393  000014                     ??_ESCRIBE_MENSAJE:
   394  000014                     ??_SERIAL_ESCRIBE_MENSAJE:
   395  000014                     ?___awdiv:
   396                           	callstack 0
   397  000014                     ___awdiv@dividend:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x13
   401  000014                     	ds	2
   402  000016                     ESCRIBE_MENSAJE@i:
   403                           	callstack 0
   404  000016                     SERIAL_ESCRIBE_MENSAJE@tam:
   405                           	callstack 0
   406  000016                     ___fltol@sign1:
   407                           	callstack 0
   408  000016                     ___xxtofl@sign:
   409                           	callstack 0
   410  000016                     ___awdiv@divisor:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x15
   414  000016                     	ds	1
   415  000017                     SERIAL_ESCRIBE_MENSAJE@i:
   416                           	callstack 0
   417  000017                     ___fltol@exp1:
   418                           	callstack 0
   419  000017                     ___xxtofl@exp:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x16
   423  000017                     	ds	1
   424  000018                     ___awdiv@counter:
   425                           	callstack 0
   426  000018                     ___xxtofl@arg:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x17
   430  000018                     	ds	1
   431  000019                     ___awdiv@sign:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x18
   435  000019                     	ds	1
   436  00001A                     ___awdiv@quotient:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x19
   440  00001A                     	ds	2
   441  00001C                     ?___flmul:
   442                           	callstack 0
   443  00001C                     convierte@numero:
   444                           	callstack 0
   445  00001C                     ___flmul@b:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x1B
   449  00001C                     	ds	4
   450  000020                     ___flmul@a:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x1F
   454  000020                     	ds	4
   455  000024                     ??___flmul:
   456                           
   457                           ; 1 bytes @ 0x23
   458  000024                     	ds	4
   459  000028                     ___flmul@sign:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x27
   463  000028                     	ds	1
   464  000029                     ___flmul@grs:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0x28
   468  000029                     	ds	4
   469  00002D                     ___flmul@aexp:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x2C
   473  00002D                     	ds	1
   474  00002E                     ___flmul@bexp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x2D
   478  00002E                     	ds	1
   479  00002F                     ___flmul@prod:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x2E
   483  00002F                     	ds	4
   484  000033                     ___flmul@temp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x32
   488  000033                     	ds	2
   489  000035                     ??_main:
   490                           
   491                           ; 1 bytes @ 0x34
   492  000035                     	ds	2
   493                           
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 74 in file "maincode4.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   513 ;;      Params:         0       0       0       0       0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0       0       0       0       0
   515 ;;      Temps:          2       0       0       0       0       0       0       0       0
   516 ;;      Totals:         2       0       0       0       0       0       0       0       0
   517 ;;Total ram usage:        2 bytes
   518 ;; Hardware stack levels required when called: 8
   519 ;; This function calls:
   520 ;;		_BORRAR_LCD
   521 ;;		_CURSOR_HOME
   522 ;;		_ENVIA_CHAR
   523 ;;		_ESCRIBE_MENSAJE
   524 ;;		_LCD_Init
   525 ;;		_POS_CURSOR
   526 ;;		_SERIAL_ESCRIBE_MENSAJE
   527 ;;		_SERIAL_NEWLINE
   528 ;;		___flmul
   529 ;;		___fltol
   530 ;;		___xxtofl
   531 ;;		_configuro
   532 ;;		_convierte
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text0
   539  000E44                     __ptext0:
   540                           	callstack 0
   541  000E44                     _main:
   542                           	callstack 23
   543  000E44                     
   544                           ;maincode4.c: 75:     configuro();
   545  000E44  ECE4  F009         	call	_configuro	;wreg free
   546  000E48                     
   547                           ;maincode4.c: 76:     LCD_Init();
   548  000E48  EC20  F00B         	call	_LCD_Init	;wreg free
   549  000E4C                     
   550                           ;maincode4.c: 77:     POS_CURSOR(1,0);
   551  000E4C  0E00               	movlw	0
   552  000E4E  6E11               	movwf	POS_CURSOR@columna^0,c
   553  000E50  0E01               	movlw	1
   554  000E52  EC66  F00A         	call	_POS_CURSOR
   555  000E56                     
   556                           ;maincode4.c: 78:     ESCRIBE_MENSAJE("Hola mundo",10);
   557  000E56  0E55               	movlw	low STR_1
   558  000E58  6E11               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   559  000E5A  0E08               	movlw	high STR_1
   560  000E5C  6E12               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   561  000E5E  0E0A               	movlw	10
   562  000E60  6E13               	movwf	ESCRIBE_MENSAJE@tam^0,c
   563  000E62  EC0B  F00A         	call	_ESCRIBE_MENSAJE	;wreg free
   564  000E66                     
   565                           ;maincode4.c: 79:     POS_CURSOR(2,0);
   566  000E66  0E00               	movlw	0
   567  000E68  6E11               	movwf	POS_CURSOR@columna^0,c
   568  000E6A  0E02               	movlw	2
   569  000E6C  EC66  F00A         	call	_POS_CURSOR
   570  000E70                     
   571                           ;maincode4.c: 80:     ESCRIBE_MENSAJE("UPC Semana6 2023",16);
   572  000E70  0E23               	movlw	low STR_2
   573  000E72  6E11               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   574  000E74  0E08               	movlw	high STR_2
   575  000E76  6E12               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   576  000E78  0E10               	movlw	16
   577  000E7A  6E13               	movwf	ESCRIBE_MENSAJE@tam^0,c
   578  000E7C  EC0B  F00A         	call	_ESCRIBE_MENSAJE	;wreg free
   579  000E80                     
   580                           ;maincode4.c: 81:     SERIAL_ESCRIBE_MENSAJE("UPC Mecatronica");
   581  000E80  0E45               	movlw	low STR_3
   582  000E82  6E12               	movwf	SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   583  000E84  0E08               	movlw	high STR_3
   584  000E86  6E13               	movwf	(SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   585  000E88  ECB9  F009         	call	_SERIAL_ESCRIBE_MENSAJE	;wreg free
   586  000E8C                     
   587                           ;maincode4.c: 82:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
   588  000E8C  0E0B               	movlw	11
   589  000E8E  6E36               	movwf	(??_main+1)^0,c
   590  000E90  0E26               	movlw	38
   591  000E92  6E35               	movwf	??_main^0,c
   592  000E94  0E5E               	movlw	94
   593  000E96                     u1337:
   594  000E96  2EE8               	decfsz	wreg,f,c
   595  000E98  D7FE               	bra	u1337
   596  000E9A  2E35               	decfsz	??_main^0,f,c
   597  000E9C  D7FC               	bra	u1337
   598  000E9E  2E36               	decfsz	(??_main+1)^0,f,c
   599  000EA0  D7FA               	bra	u1337
   600  000EA2                     
   601                           ;maincode4.c: 83:     BORRAR_LCD();
   602  000EA2  EC76  F00B         	call	_BORRAR_LCD	;wreg free
   603  000EA6                     
   604                           ;maincode4.c: 84:     SERIAL_NEWLINE();
   605  000EA6  EC34  F00B         	call	_SERIAL_NEWLINE	;wreg free
   606  000EAA                     l2063:
   607                           
   608                           ;maincode4.c: 86:         CURSOR_HOME();
   609  000EAA  EC72  F00B         	call	_CURSOR_HOME	;wreg free
   610  000EAE                     
   611                           ;maincode4.c: 87:         ADCON0bits.GO_DONE = 1;
   612  000EAE  82C2               	bsf	194,1,c	;volatile
   613  000EB0                     l187:
   614  000EB0  B2C2               	btfsc	194,1,c	;volatile
   615  000EB2  EF5D  F007         	goto	u1301
   616  000EB6  EF5F  F007         	goto	u1300
   617  000EBA                     u1301:
   618  000EBA  EF58  F007         	goto	l187
   619  000EBE                     u1300:
   620  000EBE                     
   621                           ;maincode4.c: 89:         calculo = ADRESH * 0.243;
   622  000EBE  50C4               	movf	196,w,c	;volatile
   623  000EC0  6E0E               	movwf	___xxtofl@val^0,c
   624  000EC2  6A0F               	clrf	(___xxtofl@val+1)^0,c
   625  000EC4  6A10               	clrf	(___xxtofl@val+2)^0,c
   626  000EC6  6A11               	clrf	(___xxtofl@val+3)^0,c
   627  000EC8  0E01               	movlw	1
   628  000ECA  EC48  F006         	call	___xxtofl
   629  000ECE  C00E  F01C         	movff	?___xxtofl,___flmul@b
   630  000ED2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
   631  000ED6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
   632  000EDA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
   633  000EDE  0EFE               	movlw	254
   634  000EE0  6E20               	movwf	___flmul@a^0,c
   635  000EE2  0ED4               	movlw	212
   636  000EE4  6E21               	movwf	(___flmul@a+1)^0,c
   637  000EE6  0E78               	movlw	120
   638  000EE8  6E22               	movwf	(___flmul@a+2)^0,c
   639  000EEA  0E3E               	movlw	62
   640  000EEC  6E23               	movwf	(___flmul@a+3)^0,c
   641  000EEE  EC33  F004         	call	___flmul	;wreg free
   642  000EF2  C01C  F037         	movff	?___flmul,_calculo
   643  000EF6  C01D  F038         	movff	?___flmul+1,_calculo+1
   644  000EFA  C01E  F039         	movff	?___flmul+2,_calculo+2
   645  000EFE  C01F  F03A         	movff	?___flmul+3,_calculo+3
   646  000F02                     
   647                           ;maincode4.c: 90:         CCPR1L = calculo;
   648  000F02  C037  F00E         	movff	_calculo,___fltol@f1
   649  000F06  C038  F00F         	movff	_calculo+1,___fltol@f1+1
   650  000F0A  C039  F010         	movff	_calculo+2,___fltol@f1+2
   651  000F0E  C03A  F011         	movff	_calculo+3,___fltol@f1+3
   652  000F12  ECAD  F007         	call	___fltol	;wreg free
   653  000F16  500E               	movf	?___fltol^0,w,c
   654  000F18  6EBE               	movwf	190,c	;volatile
   655  000F1A                     
   656                           ;maincode4.c: 91:         POS_CURSOR(1,0);
   657  000F1A  0E00               	movlw	0
   658  000F1C  6E11               	movwf	POS_CURSOR@columna^0,c
   659  000F1E  0E01               	movlw	1
   660  000F20  EC66  F00A         	call	_POS_CURSOR
   661  000F24                     
   662                           ;maincode4.c: 92:         ESCRIBE_MENSAJE("PWM:",4);
   663  000F24  0E60               	movlw	low STR_4
   664  000F26  6E11               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   665  000F28  0E08               	movlw	high STR_4
   666  000F2A  6E12               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   667  000F2C  0E04               	movlw	4
   668  000F2E  6E13               	movwf	ESCRIBE_MENSAJE@tam^0,c
   669  000F30  EC0B  F00A         	call	_ESCRIBE_MENSAJE	;wreg free
   670  000F34                     
   671                           ;maincode4.c: 93:         convierte(CCPR1L);
   672  000F34  50BE               	movf	190,w,c	;volatile
   673  000F36  EC8C  F009         	call	_convierte
   674  000F3A                     
   675                           ;maincode4.c: 94:         ENVIA_CHAR(centenas+0x30);
   676  000F3A  503D               	movf	_centenas^0,w,c
   677  000F3C  0F30               	addlw	48
   678  000F3E  ECBA  F00A         	call	_ENVIA_CHAR
   679  000F42                     
   680                           ;maincode4.c: 95:         ENVIA_CHAR(decenas+0x30);
   681  000F42  503C               	movf	_decenas^0,w,c
   682  000F44  0F30               	addlw	48
   683  000F46  ECBA  F00A         	call	_ENVIA_CHAR
   684  000F4A                     
   685                           ;maincode4.c: 96:         ENVIA_CHAR(unidades+0x30);
   686  000F4A  503B               	movf	_unidades^0,w,c
   687  000F4C  0F30               	addlw	48
   688  000F4E  ECBA  F00A         	call	_ENVIA_CHAR
   689  000F52  EF55  F007         	goto	l2063
   690  000F56  EF57  F000         	goto	start
   691  000F5A                     __end_of_main:
   692                           	callstack 0
   693                           
   694 ;; *************** function _convierte *****************
   695 ;; Defined at:
   696 ;;		line 49 in file "maincode4.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  numero          1    wreg     unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  numero          1   27[COMRAM] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2  162[None  ] int 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   710 ;;      Params:         0       0       0       0       0       0       0       0       0
   711 ;;      Locals:         1       0       0       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0
   713 ;;      Totals:         1       0       0       0       0       0       0       0       0
   714 ;;Total ram usage:        1 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; Hardware stack levels required when called: 5
   717 ;; This function calls:
   718 ;;		___awdiv
   719 ;;		___awmod
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text1
   726  001318                     __ptext1:
   727                           	callstack 0
   728  001318                     _convierte:
   729                           	callstack 25
   730                           
   731                           ;incstack = 0
   732                           ;convierte@numero stored from wreg
   733  001318  6E1C               	movwf	convierte@numero^0,c
   734  00131A                     
   735                           ;maincode4.c: 50:     centenas = numero / 100;
   736  00131A  C01C  F014         	movff	convierte@numero,___awdiv@dividend
   737  00131E  6A15               	clrf	(___awdiv@dividend+1)^0,c
   738  001320  0E00               	movlw	0
   739  001322  6E17               	movwf	(___awdiv@divisor+1)^0,c
   740  001324  0E64               	movlw	100
   741  001326  6E16               	movwf	___awdiv@divisor^0,c
   742  001328  EC30  F008         	call	___awdiv	;wreg free
   743  00132C  5014               	movf	?___awdiv^0,w,c
   744  00132E  6E3D               	movwf	_centenas^0,c
   745                           
   746                           ;maincode4.c: 51:     decenas = (numero % 100) / 10;
   747  001330  0E00               	movlw	0
   748  001332  6E11               	movwf	(___awmod@divisor+1)^0,c
   749  001334  0E64               	movlw	100
   750  001336  6E10               	movwf	___awmod@divisor^0,c
   751  001338  C01C  F00E         	movff	convierte@numero,___awmod@dividend
   752  00133C  6A0F               	clrf	(___awmod@dividend+1)^0,c
   753  00133E  EC92  F008         	call	___awmod	;wreg free
   754  001342  C00E  F014         	movff	?___awmod,___awdiv@dividend
   755  001346  C00F  F015         	movff	?___awmod+1,___awdiv@dividend+1
   756  00134A  0E00               	movlw	0
   757  00134C  6E17               	movwf	(___awdiv@divisor+1)^0,c
   758  00134E  0E0A               	movlw	10
   759  001350  6E16               	movwf	___awdiv@divisor^0,c
   760  001352  EC30  F008         	call	___awdiv	;wreg free
   761  001356  5014               	movf	?___awdiv^0,w,c
   762  001358  6E3C               	movwf	_decenas^0,c
   763                           
   764                           ;maincode4.c: 52:     unidades = numero % 10;
   765  00135A  C01C  F00E         	movff	convierte@numero,___awmod@dividend
   766  00135E  6A0F               	clrf	(___awmod@dividend+1)^0,c
   767  001360  0E00               	movlw	0
   768  001362  6E11               	movwf	(___awmod@divisor+1)^0,c
   769  001364  0E0A               	movlw	10
   770  001366  6E10               	movwf	___awmod@divisor^0,c
   771  001368  EC92  F008         	call	___awmod	;wreg free
   772  00136C  500E               	movf	?___awmod^0,w,c
   773  00136E  6E3B               	movwf	_unidades^0,c
   774  001370  0012               	return		;funcret
   775  001372                     __end_of_convierte:
   776                           	callstack 0
   777                           
   778 ;; *************** function ___awmod *****************
   779 ;; Defined at:
   780 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  dividend        2   13[COMRAM] int 
   783 ;;  divisor         2   15[COMRAM] int 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  sign            1   18[COMRAM] unsigned char 
   786 ;;  counter         1   17[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2   13[COMRAM] int 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         4       0       0       0       0       0       0       0       0
   797 ;;      Locals:         2       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         6       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        6 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 4
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_convierte
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text2
   811  001124                     __ptext2:
   812                           	callstack 0
   813  001124                     ___awmod:
   814                           	callstack 25
   815  001124  0E00               	movlw	0
   816  001126  6E13               	movwf	___awmod@sign^0,c
   817  001128  BE0F               	btfsc	(___awmod@dividend+1)^0,7,c
   818  00112A  EF9B  F008         	goto	u800
   819  00112E  EF99  F008         	goto	u801
   820  001132                     u801:
   821  001132  EFA1  F008         	goto	l1705
   822  001136                     u800:
   823  001136  6C0E               	negf	___awmod@dividend^0,c
   824  001138  1E0F               	comf	(___awmod@dividend+1)^0,f,c
   825  00113A  B0D8               	btfsc	status,0,c
   826  00113C  2A0F               	incf	(___awmod@dividend+1)^0,f,c
   827  00113E  0E01               	movlw	1
   828  001140  6E13               	movwf	___awmod@sign^0,c
   829  001142                     l1705:
   830  001142  BE11               	btfsc	(___awmod@divisor+1)^0,7,c
   831  001144  EFA8  F008         	goto	u810
   832  001148  EFA6  F008         	goto	u811
   833  00114C                     u811:
   834  00114C  EFAC  F008         	goto	l1709
   835  001150                     u810:
   836  001150  6C10               	negf	___awmod@divisor^0,c
   837  001152  1E11               	comf	(___awmod@divisor+1)^0,f,c
   838  001154  B0D8               	btfsc	status,0,c
   839  001156  2A11               	incf	(___awmod@divisor+1)^0,f,c
   840  001158                     l1709:
   841  001158  5010               	movf	___awmod@divisor^0,w,c
   842  00115A  1011               	iorwf	(___awmod@divisor+1)^0,w,c
   843  00115C  B4D8               	btfsc	status,2,c
   844  00115E  EFB3  F008         	goto	u821
   845  001162  EFB5  F008         	goto	u820
   846  001166                     u821:
   847  001166  EFD9  F008         	goto	l1725
   848  00116A                     u820:
   849  00116A  0E01               	movlw	1
   850  00116C  6E12               	movwf	___awmod@counter^0,c
   851  00116E  EFBD  F008         	goto	l1715
   852  001172                     l1713:
   853  001172  90D8               	bcf	status,0,c
   854  001174  3610               	rlcf	___awmod@divisor^0,f,c
   855  001176  3611               	rlcf	(___awmod@divisor+1)^0,f,c
   856  001178  2A12               	incf	___awmod@counter^0,f,c
   857  00117A                     l1715:
   858  00117A  AE11               	btfss	(___awmod@divisor+1)^0,7,c
   859  00117C  EFC2  F008         	goto	u831
   860  001180  EFC4  F008         	goto	u830
   861  001184                     u831:
   862  001184  EFB9  F008         	goto	l1713
   863  001188                     u830:
   864  001188                     l1717:
   865  001188  5010               	movf	___awmod@divisor^0,w,c
   866  00118A  5C0E               	subwf	___awmod@dividend^0,w,c
   867  00118C  5011               	movf	(___awmod@divisor+1)^0,w,c
   868  00118E  580F               	subwfb	(___awmod@dividend+1)^0,w,c
   869  001190  A0D8               	btfss	status,0,c
   870  001192  EFCD  F008         	goto	u841
   871  001196  EFCF  F008         	goto	u840
   872  00119A                     u841:
   873  00119A  EFD3  F008         	goto	l1721
   874  00119E                     u840:
   875  00119E  5010               	movf	___awmod@divisor^0,w,c
   876  0011A0  5E0E               	subwf	___awmod@dividend^0,f,c
   877  0011A2  5011               	movf	(___awmod@divisor+1)^0,w,c
   878  0011A4  5A0F               	subwfb	(___awmod@dividend+1)^0,f,c
   879  0011A6                     l1721:
   880  0011A6  90D8               	bcf	status,0,c
   881  0011A8  3211               	rrcf	(___awmod@divisor+1)^0,f,c
   882  0011AA  3210               	rrcf	___awmod@divisor^0,f,c
   883  0011AC  2E12               	decfsz	___awmod@counter^0,f,c
   884  0011AE  EFC4  F008         	goto	l1717
   885  0011B2                     l1725:
   886  0011B2  5013               	movf	___awmod@sign^0,w,c
   887  0011B4  B4D8               	btfsc	status,2,c
   888  0011B6  EFDF  F008         	goto	u851
   889  0011BA  EFE1  F008         	goto	u850
   890  0011BE                     u851:
   891  0011BE  EFE5  F008         	goto	l1729
   892  0011C2                     u850:
   893  0011C2  6C0E               	negf	___awmod@dividend^0,c
   894  0011C4  1E0F               	comf	(___awmod@dividend+1)^0,f,c
   895  0011C6  B0D8               	btfsc	status,0,c
   896  0011C8  2A0F               	incf	(___awmod@dividend+1)^0,f,c
   897  0011CA                     l1729:
   898  0011CA  C00E  F00E         	movff	___awmod@dividend,?___awmod
   899  0011CE  C00F  F00F         	movff	___awmod@dividend+1,?___awmod+1
   900  0011D2  0012               	return		;funcret
   901  0011D4                     __end_of___awmod:
   902                           	callstack 0
   903                           
   904 ;; *************** function ___awdiv *****************
   905 ;; Defined at:
   906 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  dividend        2   19[COMRAM] int 
   909 ;;  divisor         2   21[COMRAM] int 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  quotient        2   25[COMRAM] int 
   912 ;;  sign            1   24[COMRAM] unsigned char 
   913 ;;  counter         1   23[COMRAM] unsigned char 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2   19[COMRAM] int 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         4       0       0       0       0       0       0       0       0
   924 ;;      Locals:         4       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         8       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        8 bytes
   928 ;; Hardware stack levels used: 1
   929 ;; Hardware stack levels required when called: 4
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_convierte
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text3
   938  001060                     __ptext3:
   939                           	callstack 0
   940  001060                     ___awdiv:
   941                           	callstack 25
   942  001060  0E00               	movlw	0
   943  001062  6E19               	movwf	___awdiv@sign^0,c
   944  001064  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
   945  001066  EF39  F008         	goto	u740
   946  00106A  EF37  F008         	goto	u741
   947  00106E                     u741:
   948  00106E  EF3F  F008         	goto	l1661
   949  001072                     u740:
   950  001072  6C16               	negf	___awdiv@divisor^0,c
   951  001074  1E17               	comf	(___awdiv@divisor+1)^0,f,c
   952  001076  B0D8               	btfsc	status,0,c
   953  001078  2A17               	incf	(___awdiv@divisor+1)^0,f,c
   954  00107A  0E01               	movlw	1
   955  00107C  6E19               	movwf	___awdiv@sign^0,c
   956  00107E                     l1661:
   957  00107E  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
   958  001080  EF46  F008         	goto	u750
   959  001084  EF44  F008         	goto	u751
   960  001088                     u751:
   961  001088  EF4C  F008         	goto	l1667
   962  00108C                     u750:
   963  00108C  6C14               	negf	___awdiv@dividend^0,c
   964  00108E  1E15               	comf	(___awdiv@dividend+1)^0,f,c
   965  001090  B0D8               	btfsc	status,0,c
   966  001092  2A15               	incf	(___awdiv@dividend+1)^0,f,c
   967  001094  0E01               	movlw	1
   968  001096  1A19               	xorwf	___awdiv@sign^0,f,c
   969  001098                     l1667:
   970  001098  0E00               	movlw	0
   971  00109A  6E1B               	movwf	(___awdiv@quotient+1)^0,c
   972  00109C  0E00               	movlw	0
   973  00109E  6E1A               	movwf	___awdiv@quotient^0,c
   974  0010A0  5016               	movf	___awdiv@divisor^0,w,c
   975  0010A2  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
   976  0010A4  B4D8               	btfsc	status,2,c
   977  0010A6  EF57  F008         	goto	u761
   978  0010AA  EF59  F008         	goto	u760
   979  0010AE                     u761:
   980  0010AE  EF81  F008         	goto	l1689
   981  0010B2                     u760:
   982  0010B2  0E01               	movlw	1
   983  0010B4  6E18               	movwf	___awdiv@counter^0,c
   984  0010B6  EF61  F008         	goto	l1675
   985  0010BA                     l1673:
   986  0010BA  90D8               	bcf	status,0,c
   987  0010BC  3616               	rlcf	___awdiv@divisor^0,f,c
   988  0010BE  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
   989  0010C0  2A18               	incf	___awdiv@counter^0,f,c
   990  0010C2                     l1675:
   991  0010C2  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
   992  0010C4  EF66  F008         	goto	u771
   993  0010C8  EF68  F008         	goto	u770
   994  0010CC                     u771:
   995  0010CC  EF5D  F008         	goto	l1673
   996  0010D0                     u770:
   997  0010D0                     l1677:
   998  0010D0  90D8               	bcf	status,0,c
   999  0010D2  361A               	rlcf	___awdiv@quotient^0,f,c
  1000  0010D4  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  1001  0010D6  5016               	movf	___awdiv@divisor^0,w,c
  1002  0010D8  5C14               	subwf	___awdiv@dividend^0,w,c
  1003  0010DA  5017               	movf	(___awdiv@divisor+1)^0,w,c
  1004  0010DC  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  1005  0010DE  A0D8               	btfss	status,0,c
  1006  0010E0  EF74  F008         	goto	u781
  1007  0010E4  EF76  F008         	goto	u780
  1008  0010E8                     u781:
  1009  0010E8  EF7B  F008         	goto	l1685
  1010  0010EC                     u780:
  1011  0010EC  5016               	movf	___awdiv@divisor^0,w,c
  1012  0010EE  5E14               	subwf	___awdiv@dividend^0,f,c
  1013  0010F0  5017               	movf	(___awdiv@divisor+1)^0,w,c
  1014  0010F2  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  1015  0010F4  801A               	bsf	___awdiv@quotient^0,0,c
  1016  0010F6                     l1685:
  1017  0010F6  90D8               	bcf	status,0,c
  1018  0010F8  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  1019  0010FA  3216               	rrcf	___awdiv@divisor^0,f,c
  1020  0010FC  2E18               	decfsz	___awdiv@counter^0,f,c
  1021  0010FE  EF68  F008         	goto	l1677
  1022  001102                     l1689:
  1023  001102  5019               	movf	___awdiv@sign^0,w,c
  1024  001104  B4D8               	btfsc	status,2,c
  1025  001106  EF87  F008         	goto	u791
  1026  00110A  EF89  F008         	goto	u790
  1027  00110E                     u791:
  1028  00110E  EF8D  F008         	goto	l1693
  1029  001112                     u790:
  1030  001112  6C1A               	negf	___awdiv@quotient^0,c
  1031  001114  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  1032  001116  B0D8               	btfsc	status,0,c
  1033  001118  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  1034  00111A                     l1693:
  1035  00111A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  1036  00111E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  1037  001122  0012               	return		;funcret
  1038  001124                     __end_of___awdiv:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _configuro *****************
  1042 ;; Defined at:
  1043 ;;		line 11 in file "maincode4.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 4
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text4
  1072  0013C8                     __ptext4:
  1073                           	callstack 0
  1074  0013C8                     _configuro:
  1075                           	callstack 26
  1076  0013C8                     
  1077                           ;maincode4.c: 12:     OSCCON = 0x52;
  1078  0013C8  0E52               	movlw	82
  1079  0013CA  6ED3               	movwf	211,c	;volatile
  1080                           
  1081                           ;maincode4.c: 13:     SPBRG1 = 25;
  1082  0013CC  0E19               	movlw	25
  1083  0013CE  6EAF               	movwf	175,c	;volatile
  1084  0013D0                     
  1085                           ;maincode4.c: 14:     TXSTA1bits.BRGH = 1;
  1086  0013D0  84AC               	bsf	172,2,c	;volatile
  1087  0013D2                     
  1088                           ;maincode4.c: 15:     RCSTA1bits.SPEN = 1;
  1089  0013D2  8EAB               	bsf	171,7,c	;volatile
  1090  0013D4                     
  1091                           ;maincode4.c: 16:     TXSTA1bits.TXEN = 1;
  1092  0013D4  8AAC               	bsf	172,5,c	;volatile
  1093  0013D6                     
  1094                           ;maincode4.c: 17:     RCSTA1bits.CREN = 1;
  1095  0013D6  88AB               	bsf	171,4,c	;volatile
  1096  0013D8                     
  1097                           ;maincode4.c: 18:     TRISCbits.RC7 = 1;
  1098  0013D8  8E94               	bsf	148,7,c	;volatile
  1099  0013DA                     
  1100                           ;maincode4.c: 19:     ANSELCbits.ANSC7 = 0;
  1101  0013DA  010F               	movlb	15	; () banked
  1102  0013DC  9F5D               	bcf	93,7,b	;volatile
  1103  0013DE                     
  1104                           ; BSR set to: 15
  1105                           ;maincode4.c: 20:     INTCONbits.GIE = 1;
  1106  0013DE  8EF2               	bsf	242,7,c	;volatile
  1107  0013E0                     
  1108                           ; BSR set to: 15
  1109                           ;maincode4.c: 21:     INTCONbits.PEIE = 1;
  1110  0013E0  8CF2               	bsf	242,6,c	;volatile
  1111  0013E2                     
  1112                           ; BSR set to: 15
  1113                           ;maincode4.c: 22:     PIE1bits.RC1IE = 1;
  1114  0013E2  8A9D               	bsf	157,5,c	;volatile
  1115                           
  1116                           ;maincode4.c: 23:     ANSELB = 0XFC;
  1117  0013E4  0EFC               	movlw	252
  1118  0013E6  6F5C               	movwf	92,b	;volatile
  1119  0013E8                     
  1120                           ; BSR set to: 15
  1121                           ;maincode4.c: 24:     TRISCbits.RC2 = 0;
  1122  0013E8  9494               	bcf	148,2,c	;volatile
  1123  0013EA                     
  1124                           ; BSR set to: 15
  1125                           ;maincode4.c: 25:     ANSELCbits.ANSC2 = 0;
  1126  0013EA  955D               	bcf	93,2,b	;volatile
  1127  0013EC                     
  1128                           ; BSR set to: 15
  1129                           ;maincode4.c: 26:     TRISEbits.RE0 = 0;
  1130  0013EC  9096               	bcf	150,0,c	;volatile
  1131  0013EE                     
  1132                           ; BSR set to: 15
  1133                           ;maincode4.c: 27:     ANSELEbits.ANSE0 = 0;
  1134  0013EE  915F               	bcf	95,0,b	;volatile
  1135                           
  1136                           ;maincode4.c: 28:     PR2 = 62;
  1137  0013F0  0E3E               	movlw	62
  1138  0013F2  6EBB               	movwf	187,c	;volatile
  1139                           
  1140                           ;maincode4.c: 29:     CCP1CON = 0x0C;
  1141  0013F4  0E0C               	movlw	12
  1142  0013F6  6EBD               	movwf	189,c	;volatile
  1143                           
  1144                           ;maincode4.c: 30:     CCPR1L = 31;
  1145  0013F8  0E1F               	movlw	31
  1146  0013FA  6EBE               	movwf	190,c	;volatile
  1147                           
  1148                           ;maincode4.c: 31:     T2CON = 0x06;
  1149  0013FC  0E06               	movlw	6
  1150  0013FE  6EBA               	movwf	186,c	;volatile
  1151  001400                     
  1152                           ; BSR set to: 15
  1153                           ;maincode4.c: 32:     TRISAbits.RA0 = 1;
  1154  001400  8092               	bsf	146,0,c	;volatile
  1155  001402                     
  1156                           ; BSR set to: 15
  1157                           ;maincode4.c: 33:     ANSELAbits.ANSA0 = 1;
  1158  001402  815B               	bsf	91,0,b	;volatile
  1159                           
  1160                           ;maincode4.c: 34:     TRISD = 0x00;
  1161  001404  0E00               	movlw	0
  1162  001406  6E95               	movwf	149,c	;volatile
  1163                           
  1164                           ;maincode4.c: 35:     ADCON2 = 0x24;
  1165  001408  0E24               	movlw	36
  1166  00140A  6EC0               	movwf	192,c	;volatile
  1167                           
  1168                           ;maincode4.c: 36:     ADCON1 = 0x00;
  1169  00140C  0E00               	movlw	0
  1170  00140E  6EC1               	movwf	193,c	;volatile
  1171                           
  1172                           ;maincode4.c: 37:     ADCON0 = 0x01;
  1173  001410  0E01               	movlw	1
  1174  001412  6EC2               	movwf	194,c	;volatile
  1175  001414                     
  1176                           ; BSR set to: 15
  1177  001414  0012               	return		;funcret
  1178  001416                     __end_of_configuro:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function ___xxtofl *****************
  1182 ;; Defined at:
  1183 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  sign            1    wreg     unsigned char 
  1186 ;;  val             4   13[COMRAM] long 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  sign            1   21[COMRAM] unsigned char 
  1189 ;;  arg             4   23[COMRAM] unsigned long 
  1190 ;;  exp             1   22[COMRAM] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  4   13[COMRAM] unsigned char 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1200 ;;      Params:         4       0       0       0       0       0       0       0       0
  1201 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1202 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1203 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1204 ;;Total ram usage:       14 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 4
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text5
  1215  000C90                     __ptext5:
  1216                           	callstack 0
  1217  000C90                     ___xxtofl:
  1218                           	callstack 26
  1219                           
  1220                           ; BSR set to: 15
  1221                           ;incstack = 0
  1222                           ;___xxtofl@sign stored from wreg
  1223  000C90  6E16               	movwf	___xxtofl@sign^0,c
  1224  000C92  5016               	movf	___xxtofl@sign^0,w,c
  1225  000C94  B4D8               	btfsc	status,2,c
  1226  000C96  EF4F  F006         	goto	u1171
  1227  000C9A  EF51  F006         	goto	u1170
  1228  000C9E                     u1171:
  1229  000C9E  EF73  F006         	goto	l859
  1230  000CA2                     u1170:
  1231  000CA2  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  1232  000CA4  EF58  F006         	goto	u1180
  1233  000CA8  EF56  F006         	goto	u1181
  1234  000CAC                     u1181:
  1235  000CAC  EF73  F006         	goto	l859
  1236  000CB0                     u1180:
  1237  000CB0  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  1238  000CB4  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  1239  000CB8  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  1240  000CBC  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  1241  000CC0  1E12               	comf	??___xxtofl^0,f,c
  1242  000CC2  1E13               	comf	(??___xxtofl+1)^0,f,c
  1243  000CC4  1E14               	comf	(??___xxtofl+2)^0,f,c
  1244  000CC6  1E15               	comf	(??___xxtofl+3)^0,f,c
  1245  000CC8  2A12               	incf	??___xxtofl^0,f,c
  1246  000CCA  0E00               	movlw	0
  1247  000CCC  2213               	addwfc	(??___xxtofl+1)^0,f,c
  1248  000CCE  2214               	addwfc	(??___xxtofl+2)^0,f,c
  1249  000CD0  2215               	addwfc	(??___xxtofl+3)^0,f,c
  1250  000CD2  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  1251  000CD6  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  1252  000CDA  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  1253  000CDE  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  1254  000CE2  EF7B  F006         	goto	l1987
  1255  000CE6                     l859:
  1256  000CE6  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  1257  000CEA  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1258  000CEE  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1259  000CF2  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1260  000CF6                     l1987:
  1261  000CF6  500E               	movf	___xxtofl@val^0,w,c
  1262  000CF8  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  1263  000CFA  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  1264  000CFC  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  1265  000CFE  A4D8               	btfss	status,2,c
  1266  000D00  EF84  F006         	goto	u1191
  1267  000D04  EF86  F006         	goto	u1190
  1268  000D08                     u1191:
  1269  000D08  EF90  F006         	goto	l1993
  1270  000D0C                     u1190:
  1271  000D0C  0E00               	movlw	0
  1272  000D0E  6E0E               	movwf	?___xxtofl^0,c
  1273  000D10  0E00               	movlw	0
  1274  000D12  6E0F               	movwf	(?___xxtofl+1)^0,c
  1275  000D14  0E00               	movlw	0
  1276  000D16  6E10               	movwf	(?___xxtofl+2)^0,c
  1277  000D18  0E00               	movlw	0
  1278  000D1A  6E11               	movwf	(?___xxtofl+3)^0,c
  1279  000D1C  EF21  F007         	goto	l862
  1280  000D20                     l1993:
  1281  000D20  0E96               	movlw	150
  1282  000D22  6E17               	movwf	___xxtofl@exp^0,c
  1283  000D24  EF9A  F006         	goto	l1997
  1284  000D28                     l1995:
  1285  000D28  2A17               	incf	___xxtofl@exp^0,f,c
  1286  000D2A  90D8               	bcf	status,0,c
  1287  000D2C  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  1288  000D2E  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  1289  000D30  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  1290  000D32  3218               	rrcf	___xxtofl@arg^0,f,c
  1291  000D34                     l1997:
  1292  000D34  0E00               	movlw	0
  1293  000D36  1418               	andwf	___xxtofl@arg^0,w,c
  1294  000D38  6E12               	movwf	??___xxtofl^0,c
  1295  000D3A  0E00               	movlw	0
  1296  000D3C  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  1297  000D3E  6E13               	movwf	(??___xxtofl+1)^0,c
  1298  000D40  0E00               	movlw	0
  1299  000D42  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  1300  000D44  6E14               	movwf	(??___xxtofl+2)^0,c
  1301  000D46  0EFE               	movlw	254
  1302  000D48  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  1303  000D4A  6E15               	movwf	(??___xxtofl+3)^0,c
  1304  000D4C  5012               	movf	??___xxtofl^0,w,c
  1305  000D4E  1013               	iorwf	(??___xxtofl+1)^0,w,c
  1306  000D50  1014               	iorwf	(??___xxtofl+2)^0,w,c
  1307  000D52  1015               	iorwf	(??___xxtofl+3)^0,w,c
  1308  000D54  A4D8               	btfss	status,2,c
  1309  000D56  EFAF  F006         	goto	u1201
  1310  000D5A  EFB1  F006         	goto	u1200
  1311  000D5E                     u1201:
  1312  000D5E  EF94  F006         	goto	l1995
  1313  000D62                     u1200:
  1314  000D62  EFBF  F006         	goto	l866
  1315  000D66                     l1999:
  1316  000D66  2A17               	incf	___xxtofl@exp^0,f,c
  1317  000D68  0E01               	movlw	1
  1318  000D6A  2618               	addwf	___xxtofl@arg^0,f,c
  1319  000D6C  0E00               	movlw	0
  1320  000D6E  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  1321  000D70  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  1322  000D72  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  1323  000D74  90D8               	bcf	status,0,c
  1324  000D76  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  1325  000D78  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  1326  000D7A  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  1327  000D7C  3218               	rrcf	___xxtofl@arg^0,f,c
  1328  000D7E                     l866:
  1329  000D7E  0E00               	movlw	0
  1330  000D80  1418               	andwf	___xxtofl@arg^0,w,c
  1331  000D82  6E12               	movwf	??___xxtofl^0,c
  1332  000D84  0E00               	movlw	0
  1333  000D86  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  1334  000D88  6E13               	movwf	(??___xxtofl+1)^0,c
  1335  000D8A  0E00               	movlw	0
  1336  000D8C  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  1337  000D8E  6E14               	movwf	(??___xxtofl+2)^0,c
  1338  000D90  0EFF               	movlw	255
  1339  000D92  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  1340  000D94  6E15               	movwf	(??___xxtofl+3)^0,c
  1341  000D96  5012               	movf	??___xxtofl^0,w,c
  1342  000D98  1013               	iorwf	(??___xxtofl+1)^0,w,c
  1343  000D9A  1014               	iorwf	(??___xxtofl+2)^0,w,c
  1344  000D9C  1015               	iorwf	(??___xxtofl+3)^0,w,c
  1345  000D9E  A4D8               	btfss	status,2,c
  1346  000DA0  EFD4  F006         	goto	u1211
  1347  000DA4  EFD6  F006         	goto	u1210
  1348  000DA8                     u1211:
  1349  000DA8  EFB3  F006         	goto	l1999
  1350  000DAC                     u1210:
  1351  000DAC  EFDE  F006         	goto	l2007
  1352  000DB0                     l2005:
  1353  000DB0  0617               	decf	___xxtofl@exp^0,f,c
  1354  000DB2  90D8               	bcf	status,0,c
  1355  000DB4  3618               	rlcf	___xxtofl@arg^0,f,c
  1356  000DB6  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  1357  000DB8  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  1358  000DBA  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  1359  000DBC                     l2007:
  1360  000DBC  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  1361  000DBE  EFE3  F006         	goto	u1221
  1362  000DC2  EFE5  F006         	goto	u1220
  1363  000DC6                     u1221:
  1364  000DC6  EFED  F006         	goto	l873
  1365  000DCA                     u1220:
  1366  000DCA  0E02               	movlw	2
  1367  000DCC  6017               	cpfslt	___xxtofl@exp^0,c
  1368  000DCE  EFEB  F006         	goto	u1231
  1369  000DD2  EFED  F006         	goto	u1230
  1370  000DD6                     u1231:
  1371  000DD6  EFD8  F006         	goto	l2005
  1372  000DDA                     u1230:
  1373  000DDA                     l873:
  1374  000DDA  B017               	btfsc	___xxtofl@exp^0,0,c
  1375  000DDC  EFF2  F006         	goto	u1241
  1376  000DE0  EFF4  F006         	goto	u1240
  1377  000DE4                     u1241:
  1378  000DE4  EFF5  F006         	goto	l2013
  1379  000DE8                     u1240:
  1380  000DE8  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  1381  000DEA                     l2013:
  1382  000DEA  90D8               	bcf	status,0,c
  1383  000DEC  3217               	rrcf	___xxtofl@exp^0,f,c
  1384  000DEE  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  1385  000DF2  6A13               	clrf	(??___xxtofl+1)^0,c
  1386  000DF4  6A14               	clrf	(??___xxtofl+2)^0,c
  1387  000DF6  6A15               	clrf	(??___xxtofl+3)^0,c
  1388  000DF8  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  1389  000DFC  6A14               	clrf	(??___xxtofl+2)^0,c
  1390  000DFE  6A13               	clrf	(??___xxtofl+1)^0,c
  1391  000E00  6A12               	clrf	??___xxtofl^0,c
  1392  000E02  5012               	movf	??___xxtofl^0,w,c
  1393  000E04  1218               	iorwf	___xxtofl@arg^0,f,c
  1394  000E06  5013               	movf	(??___xxtofl+1)^0,w,c
  1395  000E08  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  1396  000E0A  5014               	movf	(??___xxtofl+2)^0,w,c
  1397  000E0C  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  1398  000E0E  5015               	movf	(??___xxtofl+3)^0,w,c
  1399  000E10  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  1400  000E12  5016               	movf	___xxtofl@sign^0,w,c
  1401  000E14  B4D8               	btfsc	status,2,c
  1402  000E16  EF0F  F007         	goto	u1251
  1403  000E1A  EF11  F007         	goto	u1250
  1404  000E1E                     u1251:
  1405  000E1E  EF19  F007         	goto	l2023
  1406  000E22                     u1250:
  1407  000E22  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  1408  000E24  EF18  F007         	goto	u1260
  1409  000E28  EF16  F007         	goto	u1261
  1410  000E2C                     u1261:
  1411  000E2C  EF19  F007         	goto	l2023
  1412  000E30                     u1260:
  1413  000E30  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  1414  000E32                     l2023:
  1415  000E32  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  1416  000E36  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  1417  000E3A  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  1418  000E3E  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  1419  000E42                     l862:
  1420  000E42  0012               	return		;funcret
  1421  000E44                     __end_of___xxtofl:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function ___fltol *****************
  1425 ;; Defined at:
  1426 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  f1              4   13[COMRAM] unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  exp1            1   22[COMRAM] unsigned char 
  1431 ;;  sign1           1   21[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  4   13[COMRAM] long 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1441 ;;      Params:         4       0       0       0       0       0       0       0       0
  1442 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1443 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1444 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1445 ;;Total ram usage:       10 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 4
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text6
  1456  000F5A                     __ptext6:
  1457                           	callstack 0
  1458  000F5A                     ___fltol:
  1459                           	callstack 26
  1460  000F5A  3410               	rlcf	(___fltol@f1+2)^0,w,c
  1461  000F5C  3411               	rlcf	(___fltol@f1+3)^0,w,c
  1462  000F5E  6E17               	movwf	___fltol@exp1^0,c
  1463  000F60  5017               	movf	___fltol@exp1^0,w,c
  1464  000F62  A4D8               	btfss	status,2,c
  1465  000F64  EFB6  F007         	goto	u1101
  1466  000F68  EFB8  F007         	goto	u1100
  1467  000F6C                     u1101:
  1468  000F6C  EFC2  F007         	goto	l1943
  1469  000F70                     u1100:
  1470  000F70                     l1939:
  1471  000F70  0E00               	movlw	0
  1472  000F72  6E0E               	movwf	?___fltol^0,c
  1473  000F74  0E00               	movlw	0
  1474  000F76  6E0F               	movwf	(?___fltol+1)^0,c
  1475  000F78  0E00               	movlw	0
  1476  000F7A  6E10               	movwf	(?___fltol+2)^0,c
  1477  000F7C  0E00               	movlw	0
  1478  000F7E  6E11               	movwf	(?___fltol+3)^0,c
  1479  000F80  EF2F  F008         	goto	l501
  1480  000F84                     l1943:
  1481  000F84  C00E  F012         	movff	___fltol@f1,??___fltol
  1482  000F88  C00F  F013         	movff	___fltol@f1+1,??___fltol+1
  1483  000F8C  C010  F014         	movff	___fltol@f1+2,??___fltol+2
  1484  000F90  C011  F015         	movff	___fltol@f1+3,??___fltol+3
  1485  000F94  0E20               	movlw	32
  1486  000F96  EFD2  F007         	goto	u1110
  1487  000F9A                     u1115:
  1488  000F9A  90D8               	bcf	status,0,c
  1489  000F9C  3215               	rrcf	(??___fltol+3)^0,f,c
  1490  000F9E  3214               	rrcf	(??___fltol+2)^0,f,c
  1491  000FA0  3213               	rrcf	(??___fltol+1)^0,f,c
  1492  000FA2  3212               	rrcf	??___fltol^0,f,c
  1493  000FA4                     u1110:
  1494  000FA4  2EE8               	decfsz	wreg,f,c
  1495  000FA6  EFCD  F007         	goto	u1115
  1496  000FAA  5012               	movf	??___fltol^0,w,c
  1497  000FAC  6E16               	movwf	___fltol@sign1^0,c
  1498  000FAE  8E10               	bsf	(___fltol@f1+2)^0,7,c
  1499  000FB0  0EFF               	movlw	255
  1500  000FB2  160E               	andwf	___fltol@f1^0,f,c
  1501  000FB4  0EFF               	movlw	255
  1502  000FB6  160F               	andwf	(___fltol@f1+1)^0,f,c
  1503  000FB8  0EFF               	movlw	255
  1504  000FBA  1610               	andwf	(___fltol@f1+2)^0,f,c
  1505  000FBC  0E00               	movlw	0
  1506  000FBE  1611               	andwf	(___fltol@f1+3)^0,f,c
  1507  000FC0  0E96               	movlw	150
  1508  000FC2  5E17               	subwf	___fltol@exp1^0,f,c
  1509  000FC4  BE17               	btfsc	___fltol@exp1^0,7,c
  1510  000FC6  EFE9  F007         	goto	u1120
  1511  000FCA  EFE7  F007         	goto	u1121
  1512  000FCE                     u1121:
  1513  000FCE  EFFF  F007         	goto	l1963
  1514  000FD2                     u1120:
  1515  000FD2  5017               	movf	___fltol@exp1^0,w,c
  1516  000FD4  0A80               	xorlw	128
  1517  000FD6  0F97               	addlw	151
  1518  000FD8  B0D8               	btfsc	status,0,c
  1519  000FDA  EFF1  F007         	goto	u1131
  1520  000FDE  EFF3  F007         	goto	u1130
  1521  000FE2                     u1131:
  1522  000FE2  EFF5  F007         	goto	l1959
  1523  000FE6                     u1130:
  1524  000FE6  EFB8  F007         	goto	l1939
  1525  000FEA                     l1959:
  1526  000FEA  90D8               	bcf	status,0,c
  1527  000FEC  3211               	rrcf	(___fltol@f1+3)^0,f,c
  1528  000FEE  3210               	rrcf	(___fltol@f1+2)^0,f,c
  1529  000FF0  320F               	rrcf	(___fltol@f1+1)^0,f,c
  1530  000FF2  320E               	rrcf	___fltol@f1^0,f,c
  1531  000FF4  3E17               	incfsz	___fltol@exp1^0,f,c
  1532  000FF6  EFF5  F007         	goto	l1959
  1533  000FFA  EF17  F008         	goto	l1973
  1534  000FFE                     l1963:
  1535  000FFE  0E1F               	movlw	31
  1536  001000  6417               	cpfsgt	___fltol@exp1^0,c
  1537  001002  EF05  F008         	goto	u1141
  1538  001006  EF07  F008         	goto	u1140
  1539  00100A                     u1141:
  1540  00100A  EF0F  F008         	goto	l1971
  1541  00100E                     u1140:
  1542  00100E  EFB8  F007         	goto	l1939
  1543  001012                     l1969:
  1544  001012  90D8               	bcf	status,0,c
  1545  001014  360E               	rlcf	___fltol@f1^0,f,c
  1546  001016  360F               	rlcf	(___fltol@f1+1)^0,f,c
  1547  001018  3610               	rlcf	(___fltol@f1+2)^0,f,c
  1548  00101A  3611               	rlcf	(___fltol@f1+3)^0,f,c
  1549  00101C  0617               	decf	___fltol@exp1^0,f,c
  1550  00101E                     l1971:
  1551  00101E  5017               	movf	___fltol@exp1^0,w,c
  1552  001020  A4D8               	btfss	status,2,c
  1553  001022  EF15  F008         	goto	u1151
  1554  001026  EF17  F008         	goto	u1150
  1555  00102A                     u1151:
  1556  00102A  EF09  F008         	goto	l1969
  1557  00102E                     u1150:
  1558  00102E                     l1973:
  1559  00102E  5016               	movf	___fltol@sign1^0,w,c
  1560  001030  B4D8               	btfsc	status,2,c
  1561  001032  EF1D  F008         	goto	u1161
  1562  001036  EF1F  F008         	goto	u1160
  1563  00103A                     u1161:
  1564  00103A  EF27  F008         	goto	l1977
  1565  00103E                     u1160:
  1566  00103E  1E11               	comf	(___fltol@f1+3)^0,f,c
  1567  001040  1E10               	comf	(___fltol@f1+2)^0,f,c
  1568  001042  1E0F               	comf	(___fltol@f1+1)^0,f,c
  1569  001044  6C0E               	negf	___fltol@f1^0,c
  1570  001046  0E00               	movlw	0
  1571  001048  220F               	addwfc	(___fltol@f1+1)^0,f,c
  1572  00104A  2210               	addwfc	(___fltol@f1+2)^0,f,c
  1573  00104C  2211               	addwfc	(___fltol@f1+3)^0,f,c
  1574  00104E                     l1977:
  1575  00104E  C00E  F00E         	movff	___fltol@f1,?___fltol
  1576  001052  C00F  F00F         	movff	___fltol@f1+1,?___fltol+1
  1577  001056  C010  F010         	movff	___fltol@f1+2,?___fltol+2
  1578  00105A  C011  F011         	movff	___fltol@f1+3,?___fltol+3
  1579  00105E                     l501:
  1580  00105E  0012               	return		;funcret
  1581  001060                     __end_of___fltol:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function ___flmul *****************
  1585 ;; Defined at:
  1586 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  b               4   27[COMRAM] long 
  1589 ;;  a               4   31[COMRAM] long 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  prod            4   46[COMRAM] struct .
  1592 ;;  grs             4   40[COMRAM] unsigned long 
  1593 ;;  temp            2   50[COMRAM] struct .
  1594 ;;  bexp            1   45[COMRAM] unsigned char 
  1595 ;;  aexp            1   44[COMRAM] unsigned char 
  1596 ;;  sign            1   39[COMRAM] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  4   27[COMRAM] unsigned char 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, prodl, prodh
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1606 ;;      Params:         8       0       0       0       0       0       0       0       0
  1607 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1608 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1609 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1610 ;;Total ram usage:       25 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 4
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text7
  1621  000866                     __ptext7:
  1622                           	callstack 0
  1623  000866                     ___flmul:
  1624                           	callstack 26
  1625  000866  501F               	movf	(___flmul@b+3)^0,w,c
  1626  000868  0B80               	andlw	128
  1627  00086A  6E28               	movwf	___flmul@sign^0,c
  1628  00086C  501F               	movf	(___flmul@b+3)^0,w,c
  1629  00086E  241F               	addwf	(___flmul@b+3)^0,w,c
  1630  000870  6E2E               	movwf	___flmul@bexp^0,c
  1631  000872  AE1E               	btfss	(___flmul@b+2)^0,7,c
  1632  000874  EF3E  F004         	goto	u911
  1633  000878  EF40  F004         	goto	u910
  1634  00087C                     u911:
  1635  00087C  EF41  F004         	goto	l1813
  1636  000880                     u910:
  1637  000880  802E               	bsf	___flmul@bexp^0,0,c
  1638  000882                     l1813:
  1639  000882  502E               	movf	___flmul@bexp^0,w,c
  1640  000884  B4D8               	btfsc	status,2,c
  1641  000886  EF47  F004         	goto	u921
  1642  00088A  EF49  F004         	goto	u920
  1643  00088E                     u921:
  1644  00088E  EF5C  F004         	goto	l1821
  1645  000892                     u920:
  1646  000892  282E               	incf	___flmul@bexp^0,w,c
  1647  000894  A4D8               	btfss	status,2,c
  1648  000896  EF4F  F004         	goto	u931
  1649  00089A  EF51  F004         	goto	u930
  1650  00089E                     u931:
  1651  00089E  EF59  F004         	goto	l1819
  1652  0008A2                     u930:
  1653  0008A2  0E00               	movlw	0
  1654  0008A4  6E1C               	movwf	___flmul@b^0,c
  1655  0008A6  0E00               	movlw	0
  1656  0008A8  6E1D               	movwf	(___flmul@b+1)^0,c
  1657  0008AA  0E00               	movlw	0
  1658  0008AC  6E1E               	movwf	(___flmul@b+2)^0,c
  1659  0008AE  0E00               	movlw	0
  1660  0008B0  6E1F               	movwf	(___flmul@b+3)^0,c
  1661  0008B2                     l1819:
  1662  0008B2  8E1E               	bsf	(___flmul@b+2)^0,7,c
  1663  0008B4  EF64  F004         	goto	l1823
  1664  0008B8                     l1821:
  1665  0008B8  0E00               	movlw	0
  1666  0008BA  6E1C               	movwf	___flmul@b^0,c
  1667  0008BC  0E00               	movlw	0
  1668  0008BE  6E1D               	movwf	(___flmul@b+1)^0,c
  1669  0008C0  0E00               	movlw	0
  1670  0008C2  6E1E               	movwf	(___flmul@b+2)^0,c
  1671  0008C4  0E00               	movlw	0
  1672  0008C6  6E1F               	movwf	(___flmul@b+3)^0,c
  1673  0008C8                     l1823:
  1674  0008C8  5023               	movf	(___flmul@a+3)^0,w,c
  1675  0008CA  0B80               	andlw	128
  1676  0008CC  1A28               	xorwf	___flmul@sign^0,f,c
  1677  0008CE  5023               	movf	(___flmul@a+3)^0,w,c
  1678  0008D0  2423               	addwf	(___flmul@a+3)^0,w,c
  1679  0008D2  6E2D               	movwf	___flmul@aexp^0,c
  1680  0008D4  AE22               	btfss	(___flmul@a+2)^0,7,c
  1681  0008D6  EF6F  F004         	goto	u941
  1682  0008DA  EF71  F004         	goto	u940
  1683  0008DE                     u941:
  1684  0008DE  EF72  F004         	goto	l1831
  1685  0008E2                     u940:
  1686  0008E2  802D               	bsf	___flmul@aexp^0,0,c
  1687  0008E4                     l1831:
  1688  0008E4  502D               	movf	___flmul@aexp^0,w,c
  1689  0008E6  B4D8               	btfsc	status,2,c
  1690  0008E8  EF78  F004         	goto	u951
  1691  0008EC  EF7A  F004         	goto	u950
  1692  0008F0                     u951:
  1693  0008F0  EF8D  F004         	goto	l1839
  1694  0008F4                     u950:
  1695  0008F4  282D               	incf	___flmul@aexp^0,w,c
  1696  0008F6  A4D8               	btfss	status,2,c
  1697  0008F8  EF80  F004         	goto	u961
  1698  0008FC  EF82  F004         	goto	u960
  1699  000900                     u961:
  1700  000900  EF8A  F004         	goto	l1837
  1701  000904                     u960:
  1702  000904  0E00               	movlw	0
  1703  000906  6E20               	movwf	___flmul@a^0,c
  1704  000908  0E00               	movlw	0
  1705  00090A  6E21               	movwf	(___flmul@a+1)^0,c
  1706  00090C  0E00               	movlw	0
  1707  00090E  6E22               	movwf	(___flmul@a+2)^0,c
  1708  000910  0E00               	movlw	0
  1709  000912  6E23               	movwf	(___flmul@a+3)^0,c
  1710  000914                     l1837:
  1711  000914  8E22               	bsf	(___flmul@a+2)^0,7,c
  1712  000916  EF95  F004         	goto	l818
  1713  00091A                     l1839:
  1714  00091A  0E00               	movlw	0
  1715  00091C  6E20               	movwf	___flmul@a^0,c
  1716  00091E  0E00               	movlw	0
  1717  000920  6E21               	movwf	(___flmul@a+1)^0,c
  1718  000922  0E00               	movlw	0
  1719  000924  6E22               	movwf	(___flmul@a+2)^0,c
  1720  000926  0E00               	movlw	0
  1721  000928  6E23               	movwf	(___flmul@a+3)^0,c
  1722  00092A                     l818:
  1723  00092A  502D               	movf	___flmul@aexp^0,w,c
  1724  00092C  B4D8               	btfsc	status,2,c
  1725  00092E  EF9B  F004         	goto	u971
  1726  000932  EF9D  F004         	goto	u970
  1727  000936                     u971:
  1728  000936  EFA5  F004         	goto	l1843
  1729  00093A                     u970:
  1730  00093A  502E               	movf	___flmul@bexp^0,w,c
  1731  00093C  A4D8               	btfss	status,2,c
  1732  00093E  EFA3  F004         	goto	u981
  1733  000942  EFA5  F004         	goto	u980
  1734  000946                     u981:
  1735  000946  EFAF  F004         	goto	l1847
  1736  00094A                     u980:
  1737  00094A                     l1843:
  1738  00094A  0E00               	movlw	0
  1739  00094C  6E1C               	movwf	?___flmul^0,c
  1740  00094E  0E00               	movlw	0
  1741  000950  6E1D               	movwf	(?___flmul+1)^0,c
  1742  000952  0E00               	movlw	0
  1743  000954  6E1E               	movwf	(?___flmul+2)^0,c
  1744  000956  0E00               	movlw	0
  1745  000958  6E1F               	movwf	(?___flmul+3)^0,c
  1746  00095A  EF47  F006         	goto	l822
  1747  00095E                     l1847:
  1748  00095E  5022               	movf	(___flmul@a+2)^0,w,c
  1749  000960  021C               	mulwf	___flmul@b^0,c
  1750  000962  CFF3 F033          	movff	prodl,___flmul@temp
  1751  000966  CFF4 F034          	movff	prodh,___flmul@temp+1
  1752  00096A  5033               	movf	___flmul@temp^0,w,c
  1753  00096C  6E29               	movwf	___flmul@grs^0,c
  1754  00096E  6A2A               	clrf	(___flmul@grs+1)^0,c
  1755  000970  6A2B               	clrf	(___flmul@grs+2)^0,c
  1756  000972  6A2C               	clrf	(___flmul@grs+3)^0,c
  1757  000974  5034               	movf	(___flmul@temp+1)^0,w,c
  1758  000976  6E2F               	movwf	___flmul@prod^0,c
  1759  000978  6A30               	clrf	(___flmul@prod+1)^0,c
  1760  00097A  6A31               	clrf	(___flmul@prod+2)^0,c
  1761  00097C  6A32               	clrf	(___flmul@prod+3)^0,c
  1762  00097E  5021               	movf	(___flmul@a+1)^0,w,c
  1763  000980  021D               	mulwf	(___flmul@b+1)^0,c
  1764  000982  CFF3 F033          	movff	prodl,___flmul@temp
  1765  000986  CFF4 F034          	movff	prodh,___flmul@temp+1
  1766  00098A  5033               	movf	___flmul@temp^0,w,c
  1767  00098C  2629               	addwf	___flmul@grs^0,f,c
  1768  00098E  0E00               	movlw	0
  1769  000990  222A               	addwfc	(___flmul@grs+1)^0,f,c
  1770  000992  222B               	addwfc	(___flmul@grs+2)^0,f,c
  1771  000994  222C               	addwfc	(___flmul@grs+3)^0,f,c
  1772  000996  5034               	movf	(___flmul@temp+1)^0,w,c
  1773  000998  262F               	addwf	___flmul@prod^0,f,c
  1774  00099A  0E00               	movlw	0
  1775  00099C  2230               	addwfc	(___flmul@prod+1)^0,f,c
  1776  00099E  2231               	addwfc	(___flmul@prod+2)^0,f,c
  1777  0009A0  2232               	addwfc	(___flmul@prod+3)^0,f,c
  1778  0009A2  5020               	movf	___flmul@a^0,w,c
  1779  0009A4  021E               	mulwf	(___flmul@b+2)^0,c
  1780  0009A6  CFF3 F033          	movff	prodl,___flmul@temp
  1781  0009AA  CFF4 F034          	movff	prodh,___flmul@temp+1
  1782  0009AE  5033               	movf	___flmul@temp^0,w,c
  1783  0009B0  2629               	addwf	___flmul@grs^0,f,c
  1784  0009B2  0E00               	movlw	0
  1785  0009B4  222A               	addwfc	(___flmul@grs+1)^0,f,c
  1786  0009B6  222B               	addwfc	(___flmul@grs+2)^0,f,c
  1787  0009B8  222C               	addwfc	(___flmul@grs+3)^0,f,c
  1788  0009BA  5034               	movf	(___flmul@temp+1)^0,w,c
  1789  0009BC  262F               	addwf	___flmul@prod^0,f,c
  1790  0009BE  0E00               	movlw	0
  1791  0009C0  2230               	addwfc	(___flmul@prod+1)^0,f,c
  1792  0009C2  2231               	addwfc	(___flmul@prod+2)^0,f,c
  1793  0009C4  2232               	addwfc	(___flmul@prod+3)^0,f,c
  1794  0009C6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  1795  0009CA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  1796  0009CE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  1797  0009D2  6A29               	clrf	___flmul@grs^0,c
  1798  0009D4  5020               	movf	___flmul@a^0,w,c
  1799  0009D6  021D               	mulwf	(___flmul@b+1)^0,c
  1800  0009D8  CFF3 F033          	movff	prodl,___flmul@temp
  1801  0009DC  CFF4 F034          	movff	prodh,___flmul@temp+1
  1802  0009E0  5033               	movf	___flmul@temp^0,w,c
  1803  0009E2  2629               	addwf	___flmul@grs^0,f,c
  1804  0009E4  5034               	movf	(___flmul@temp+1)^0,w,c
  1805  0009E6  222A               	addwfc	(___flmul@grs+1)^0,f,c
  1806  0009E8  0E00               	movlw	0
  1807  0009EA  222B               	addwfc	(___flmul@grs+2)^0,f,c
  1808  0009EC  0E00               	movlw	0
  1809  0009EE  222C               	addwfc	(___flmul@grs+3)^0,f,c
  1810  0009F0  5021               	movf	(___flmul@a+1)^0,w,c
  1811  0009F2  021C               	mulwf	___flmul@b^0,c
  1812  0009F4  CFF3 F033          	movff	prodl,___flmul@temp
  1813  0009F8  CFF4 F034          	movff	prodh,___flmul@temp+1
  1814  0009FC  5033               	movf	___flmul@temp^0,w,c
  1815  0009FE  2629               	addwf	___flmul@grs^0,f,c
  1816  000A00  5034               	movf	(___flmul@temp+1)^0,w,c
  1817  000A02  222A               	addwfc	(___flmul@grs+1)^0,f,c
  1818  000A04  0E00               	movlw	0
  1819  000A06  222B               	addwfc	(___flmul@grs+2)^0,f,c
  1820  000A08  0E00               	movlw	0
  1821  000A0A  222C               	addwfc	(___flmul@grs+3)^0,f,c
  1822  000A0C  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  1823  000A10  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  1824  000A14  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  1825  000A18  6A29               	clrf	___flmul@grs^0,c
  1826  000A1A  5020               	movf	___flmul@a^0,w,c
  1827  000A1C  021C               	mulwf	___flmul@b^0,c
  1828  000A1E  CFF3 F033          	movff	prodl,___flmul@temp
  1829  000A22  CFF4 F034          	movff	prodh,___flmul@temp+1
  1830  000A26  5033               	movf	___flmul@temp^0,w,c
  1831  000A28  2629               	addwf	___flmul@grs^0,f,c
  1832  000A2A  5034               	movf	(___flmul@temp+1)^0,w,c
  1833  000A2C  222A               	addwfc	(___flmul@grs+1)^0,f,c
  1834  000A2E  0E00               	movlw	0
  1835  000A30  222B               	addwfc	(___flmul@grs+2)^0,f,c
  1836  000A32  0E00               	movlw	0
  1837  000A34  222C               	addwfc	(___flmul@grs+3)^0,f,c
  1838  000A36  5022               	movf	(___flmul@a+2)^0,w,c
  1839  000A38  021D               	mulwf	(___flmul@b+1)^0,c
  1840  000A3A  CFF3 F033          	movff	prodl,___flmul@temp
  1841  000A3E  CFF4 F034          	movff	prodh,___flmul@temp+1
  1842  000A42  5033               	movf	___flmul@temp^0,w,c
  1843  000A44  262F               	addwf	___flmul@prod^0,f,c
  1844  000A46  5034               	movf	(___flmul@temp+1)^0,w,c
  1845  000A48  2230               	addwfc	(___flmul@prod+1)^0,f,c
  1846  000A4A  0E00               	movlw	0
  1847  000A4C  2231               	addwfc	(___flmul@prod+2)^0,f,c
  1848  000A4E  0E00               	movlw	0
  1849  000A50  2232               	addwfc	(___flmul@prod+3)^0,f,c
  1850  000A52  5021               	movf	(___flmul@a+1)^0,w,c
  1851  000A54  021E               	mulwf	(___flmul@b+2)^0,c
  1852  000A56  CFF3 F033          	movff	prodl,___flmul@temp
  1853  000A5A  CFF4 F034          	movff	prodh,___flmul@temp+1
  1854  000A5E  5033               	movf	___flmul@temp^0,w,c
  1855  000A60  262F               	addwf	___flmul@prod^0,f,c
  1856  000A62  5034               	movf	(___flmul@temp+1)^0,w,c
  1857  000A64  2230               	addwfc	(___flmul@prod+1)^0,f,c
  1858  000A66  0E00               	movlw	0
  1859  000A68  2231               	addwfc	(___flmul@prod+2)^0,f,c
  1860  000A6A  0E00               	movlw	0
  1861  000A6C  2232               	addwfc	(___flmul@prod+3)^0,f,c
  1862  000A6E  5022               	movf	(___flmul@a+2)^0,w,c
  1863  000A70  021E               	mulwf	(___flmul@b+2)^0,c
  1864  000A72  CFF3 F033          	movff	prodl,___flmul@temp
  1865  000A76  CFF4 F034          	movff	prodh,___flmul@temp+1
  1866  000A7A  5033               	movf	___flmul@temp^0,w,c
  1867  000A7C  6E24               	movwf	??___flmul^0,c
  1868  000A7E  5034               	movf	(___flmul@temp+1)^0,w,c
  1869  000A80  6E25               	movwf	(??___flmul+1)^0,c
  1870  000A82  6A26               	clrf	(??___flmul+2)^0,c
  1871  000A84  6A27               	clrf	(??___flmul+3)^0,c
  1872  000A86  C026  F027         	movff	??___flmul+2,??___flmul+3
  1873  000A8A  C025  F026         	movff	??___flmul+1,??___flmul+2
  1874  000A8E  C024  F025         	movff	??___flmul,??___flmul+1
  1875  000A92  6A24               	clrf	??___flmul^0,c
  1876  000A94  5024               	movf	??___flmul^0,w,c
  1877  000A96  262F               	addwf	___flmul@prod^0,f,c
  1878  000A98  5025               	movf	(??___flmul+1)^0,w,c
  1879  000A9A  2230               	addwfc	(___flmul@prod+1)^0,f,c
  1880  000A9C  5026               	movf	(??___flmul+2)^0,w,c
  1881  000A9E  2231               	addwfc	(___flmul@prod+2)^0,f,c
  1882  000AA0  5027               	movf	(??___flmul+3)^0,w,c
  1883  000AA2  2232               	addwfc	(___flmul@prod+3)^0,f,c
  1884  000AA4  C029  F024         	movff	___flmul@grs,??___flmul
  1885  000AA8  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
  1886  000AAC  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
  1887  000AB0  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
  1888  000AB4  0E19               	movlw	25
  1889  000AB6  EF62  F005         	goto	u990
  1890  000ABA                     u995:
  1891  000ABA  90D8               	bcf	status,0,c
  1892  000ABC  3227               	rrcf	(??___flmul+3)^0,f,c
  1893  000ABE  3226               	rrcf	(??___flmul+2)^0,f,c
  1894  000AC0  3225               	rrcf	(??___flmul+1)^0,f,c
  1895  000AC2  3224               	rrcf	??___flmul^0,f,c
  1896  000AC4                     u990:
  1897  000AC4  2EE8               	decfsz	wreg,f,c
  1898  000AC6  EF5D  F005         	goto	u995
  1899  000ACA  5024               	movf	??___flmul^0,w,c
  1900  000ACC  262F               	addwf	___flmul@prod^0,f,c
  1901  000ACE  5025               	movf	(??___flmul+1)^0,w,c
  1902  000AD0  2230               	addwfc	(___flmul@prod+1)^0,f,c
  1903  000AD2  5026               	movf	(??___flmul+2)^0,w,c
  1904  000AD4  2231               	addwfc	(___flmul@prod+2)^0,f,c
  1905  000AD6  5027               	movf	(??___flmul+3)^0,w,c
  1906  000AD8  2232               	addwfc	(___flmul@prod+3)^0,f,c
  1907  000ADA  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  1908  000ADE  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  1909  000AE2  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  1910  000AE6  6A29               	clrf	___flmul@grs^0,c
  1911  000AE8  502D               	movf	___flmul@aexp^0,w,c
  1912  000AEA  C02E  F024         	movff	___flmul@bexp,??___flmul
  1913  000AEE  6A25               	clrf	(??___flmul+1)^0,c
  1914  000AF0  2624               	addwf	??___flmul^0,f,c
  1915  000AF2  0E00               	movlw	0
  1916  000AF4  2225               	addwfc	(??___flmul+1)^0,f,c
  1917  000AF6  0E82               	movlw	130
  1918  000AF8  2424               	addwf	??___flmul^0,w,c
  1919  000AFA  6E33               	movwf	___flmul@temp^0,c
  1920  000AFC  0EFF               	movlw	255
  1921  000AFE  2025               	addwfc	(??___flmul+1)^0,w,c
  1922  000B00  6E34               	movwf	(___flmul@temp+1)^0,c
  1923  000B02  EF98  F005         	goto	l1895
  1924  000B06                     l1889:
  1925  000B06  90D8               	bcf	status,0,c
  1926  000B08  362F               	rlcf	___flmul@prod^0,f,c
  1927  000B0A  3630               	rlcf	(___flmul@prod+1)^0,f,c
  1928  000B0C  3631               	rlcf	(___flmul@prod+2)^0,f,c
  1929  000B0E  3632               	rlcf	(___flmul@prod+3)^0,f,c
  1930  000B10  AE2C               	btfss	(___flmul@grs+3)^0,7,c
  1931  000B12  EF8D  F005         	goto	u1001
  1932  000B16  EF8F  F005         	goto	u1000
  1933  000B1A                     u1001:
  1934  000B1A  EF90  F005         	goto	l825
  1935  000B1E                     u1000:
  1936  000B1E  802F               	bsf	___flmul@prod^0,0,c
  1937  000B20                     l825:
  1938  000B20  90D8               	bcf	status,0,c
  1939  000B22  3629               	rlcf	___flmul@grs^0,f,c
  1940  000B24  362A               	rlcf	(___flmul@grs+1)^0,f,c
  1941  000B26  362B               	rlcf	(___flmul@grs+2)^0,f,c
  1942  000B28  362C               	rlcf	(___flmul@grs+3)^0,f,c
  1943  000B2A  0633               	decf	___flmul@temp^0,f,c
  1944  000B2C  A0D8               	btfss	status,0,c
  1945  000B2E  0634               	decf	(___flmul@temp+1)^0,f,c
  1946  000B30                     l1895:
  1947  000B30  AE31               	btfss	(___flmul@prod+2)^0,7,c
  1948  000B32  EF9D  F005         	goto	u1011
  1949  000B36  EF9F  F005         	goto	u1010
  1950  000B3A                     u1011:
  1951  000B3A  EF83  F005         	goto	l1889
  1952  000B3E                     u1010:
  1953  000B3E  0E00               	movlw	0
  1954  000B40  6E2D               	movwf	___flmul@aexp^0,c
  1955  000B42  AE2C               	btfss	(___flmul@grs+3)^0,7,c
  1956  000B44  EFA6  F005         	goto	u1021
  1957  000B48  EFA8  F005         	goto	u1020
  1958  000B4C                     u1021:
  1959  000B4C  EFCC  F005         	goto	l827
  1960  000B50                     u1020:
  1961  000B50  0EFF               	movlw	255
  1962  000B52  1429               	andwf	___flmul@grs^0,w,c
  1963  000B54  6E24               	movwf	??___flmul^0,c
  1964  000B56  0EFF               	movlw	255
  1965  000B58  142A               	andwf	(___flmul@grs+1)^0,w,c
  1966  000B5A  6E25               	movwf	(??___flmul+1)^0,c
  1967  000B5C  0EFF               	movlw	255
  1968  000B5E  142B               	andwf	(___flmul@grs+2)^0,w,c
  1969  000B60  6E26               	movwf	(??___flmul+2)^0,c
  1970  000B62  0E7F               	movlw	127
  1971  000B64  142C               	andwf	(___flmul@grs+3)^0,w,c
  1972  000B66  6E27               	movwf	(??___flmul+3)^0,c
  1973  000B68  5024               	movf	??___flmul^0,w,c
  1974  000B6A  1025               	iorwf	(??___flmul+1)^0,w,c
  1975  000B6C  1026               	iorwf	(??___flmul+2)^0,w,c
  1976  000B6E  1027               	iorwf	(??___flmul+3)^0,w,c
  1977  000B70  B4D8               	btfsc	status,2,c
  1978  000B72  EFBD  F005         	goto	u1031
  1979  000B76  EFBF  F005         	goto	u1030
  1980  000B7A                     u1031:
  1981  000B7A  EFC3  F005         	goto	l828
  1982  000B7E                     u1030:
  1983  000B7E                     l1903:
  1984  000B7E  0E01               	movlw	1
  1985  000B80  6E2D               	movwf	___flmul@aexp^0,c
  1986  000B82  EFCC  F005         	goto	l827
  1987  000B86                     l828:
  1988  000B86  A02F               	btfss	___flmul@prod^0,0,c
  1989  000B88  EFC8  F005         	goto	u1041
  1990  000B8C  EFCA  F005         	goto	u1040
  1991  000B90                     u1041:
  1992  000B90  EFCC  F005         	goto	l827
  1993  000B94                     u1040:
  1994  000B94  EFBF  F005         	goto	l1903
  1995  000B98                     l827:
  1996  000B98  502D               	movf	___flmul@aexp^0,w,c
  1997  000B9A  B4D8               	btfsc	status,2,c
  1998  000B9C  EFD2  F005         	goto	u1051
  1999  000BA0  EFD4  F005         	goto	u1050
  2000  000BA4                     u1051:
  2001  000BA4  EFF8  F005         	goto	l1915
  2002  000BA8                     u1050:
  2003  000BA8  0E01               	movlw	1
  2004  000BAA  262F               	addwf	___flmul@prod^0,f,c
  2005  000BAC  0E00               	movlw	0
  2006  000BAE  2230               	addwfc	(___flmul@prod+1)^0,f,c
  2007  000BB0  2231               	addwfc	(___flmul@prod+2)^0,f,c
  2008  000BB2  2232               	addwfc	(___flmul@prod+3)^0,f,c
  2009  000BB4  A032               	btfss	(___flmul@prod+3)^0,0,c
  2010  000BB6  EFDF  F005         	goto	u1061
  2011  000BBA  EFE1  F005         	goto	u1060
  2012  000BBE                     u1061:
  2013  000BBE  EFF8  F005         	goto	l1915
  2014  000BC2                     u1060:
  2015  000BC2  C02F  F024         	movff	___flmul@prod,??___flmul
  2016  000BC6  C030  F025         	movff	___flmul@prod+1,??___flmul+1
  2017  000BCA  C031  F026         	movff	___flmul@prod+2,??___flmul+2
  2018  000BCE  C032  F027         	movff	___flmul@prod+3,??___flmul+3
  2019  000BD2  3427               	rlcf	(??___flmul+3)^0,w,c
  2020  000BD4  3227               	rrcf	(??___flmul+3)^0,f,c
  2021  000BD6  3226               	rrcf	(??___flmul+2)^0,f,c
  2022  000BD8  3225               	rrcf	(??___flmul+1)^0,f,c
  2023  000BDA  3224               	rrcf	??___flmul^0,f,c
  2024  000BDC  C024  F02F         	movff	??___flmul,___flmul@prod
  2025  000BE0  C025  F030         	movff	??___flmul+1,___flmul@prod+1
  2026  000BE4  C026  F031         	movff	??___flmul+2,___flmul@prod+2
  2027  000BE8  C027  F032         	movff	??___flmul+3,___flmul@prod+3
  2028  000BEC  4A33               	infsnz	___flmul@temp^0,f,c
  2029  000BEE  2A34               	incf	(___flmul@temp+1)^0,f,c
  2030  000BF0                     l1915:
  2031  000BF0  BE34               	btfsc	(___flmul@temp+1)^0,7,c
  2032  000BF2  EF03  F006         	goto	u1071
  2033  000BF6  5034               	movf	(___flmul@temp+1)^0,w,c
  2034  000BF8  E108               	bnz	u1070
  2035  000BFA  2833               	incf	___flmul@temp^0,w,c
  2036  000BFC  A0D8               	btfss	status,0,c
  2037  000BFE  EF03  F006         	goto	u1071
  2038  000C02  EF05  F006         	goto	u1070
  2039  000C06                     u1071:
  2040  000C06  EF0F  F006         	goto	l1919
  2041  000C0A                     u1070:
  2042  000C0A  0E00               	movlw	0
  2043  000C0C  6E2F               	movwf	___flmul@prod^0,c
  2044  000C0E  0E00               	movlw	0
  2045  000C10  6E30               	movwf	(___flmul@prod+1)^0,c
  2046  000C12  0E80               	movlw	128
  2047  000C14  6E31               	movwf	(___flmul@prod+2)^0,c
  2048  000C16  0E7F               	movlw	127
  2049  000C18  6E32               	movwf	(___flmul@prod+3)^0,c
  2050  000C1A  EF3D  F006         	goto	l1931
  2051  000C1E                     l1919:
  2052  000C1E  BE34               	btfsc	(___flmul@temp+1)^0,7,c
  2053  000C20  EF1C  F006         	goto	u1080
  2054  000C24  5034               	movf	(___flmul@temp+1)^0,w,c
  2055  000C26  E106               	bnz	u1081
  2056  000C28  0433               	decf	___flmul@temp^0,w,c
  2057  000C2A  B0D8               	btfsc	status,0,c
  2058  000C2C  EF1A  F006         	goto	u1081
  2059  000C30  EF1C  F006         	goto	u1080
  2060  000C34                     u1081:
  2061  000C34  EF28  F006         	goto	l835
  2062  000C38                     u1080:
  2063  000C38  0E00               	movlw	0
  2064  000C3A  6E2F               	movwf	___flmul@prod^0,c
  2065  000C3C  0E00               	movlw	0
  2066  000C3E  6E30               	movwf	(___flmul@prod+1)^0,c
  2067  000C40  0E00               	movlw	0
  2068  000C42  6E31               	movwf	(___flmul@prod+2)^0,c
  2069  000C44  0E00               	movlw	0
  2070  000C46  6E32               	movwf	(___flmul@prod+3)^0,c
  2071  000C48  0E00               	movlw	0
  2072  000C4A  6E28               	movwf	___flmul@sign^0,c
  2073  000C4C  EF3D  F006         	goto	l1931
  2074  000C50                     l835:
  2075  000C50  C033  F02E         	movff	___flmul@temp,___flmul@bexp
  2076  000C54  0EFF               	movlw	255
  2077  000C56  162F               	andwf	___flmul@prod^0,f,c
  2078  000C58  0EFF               	movlw	255
  2079  000C5A  1630               	andwf	(___flmul@prod+1)^0,f,c
  2080  000C5C  0E7F               	movlw	127
  2081  000C5E  1631               	andwf	(___flmul@prod+2)^0,f,c
  2082  000C60  0E00               	movlw	0
  2083  000C62  1632               	andwf	(___flmul@prod+3)^0,f,c
  2084  000C64  A02E               	btfss	___flmul@bexp^0,0,c
  2085  000C66  EF37  F006         	goto	u1091
  2086  000C6A  EF39  F006         	goto	u1090
  2087  000C6E                     u1091:
  2088  000C6E  EF3A  F006         	goto	l1929
  2089  000C72                     u1090:
  2090  000C72  8E31               	bsf	(___flmul@prod+2)^0,7,c
  2091  000C74                     l1929:
  2092  000C74  90D8               	bcf	status,0,c
  2093  000C76  302E               	rrcf	___flmul@bexp^0,w,c
  2094  000C78  6E32               	movwf	(___flmul@prod+3)^0,c
  2095  000C7A                     l1931:
  2096  000C7A  5028               	movf	___flmul@sign^0,w,c
  2097  000C7C  1232               	iorwf	(___flmul@prod+3)^0,f,c
  2098  000C7E  C02F  F01C         	movff	___flmul@prod,?___flmul
  2099  000C82  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
  2100  000C86  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
  2101  000C8A  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
  2102  000C8E                     l822:
  2103  000C8E  0012               	return		;funcret
  2104  000C90                     __end_of___flmul:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _SERIAL_NEWLINE *****************
  2108 ;; Defined at:
  2109 ;;		line 67 in file "maincode4.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 4
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text8
  2138  001668                     __ptext8:
  2139                           	callstack 0
  2140  001668                     _SERIAL_NEWLINE:
  2141                           	callstack 26
  2142  001668                     
  2143                           ;maincode4.c: 68:     TXREG = 10;
  2144  001668  0E0A               	movlw	10
  2145  00166A  6EAD               	movwf	173,c	;volatile
  2146  00166C                     l175:
  2147  00166C  A2AC               	btfss	172,1,c	;volatile
  2148  00166E  EF3B  F00B         	goto	u231
  2149  001672  EF3D  F00B         	goto	u230
  2150  001676                     u231:
  2151  001676  EF36  F00B         	goto	l175
  2152  00167A                     u230:
  2153  00167A                     
  2154                           ;maincode4.c: 70:     TXREG = 13;
  2155  00167A  0E0D               	movlw	13
  2156  00167C  6EAD               	movwf	173,c	;volatile
  2157  00167E                     l178:
  2158  00167E  A2AC               	btfss	172,1,c	;volatile
  2159  001680  EF44  F00B         	goto	u241
  2160  001684  EF46  F00B         	goto	u240
  2161  001688                     u241:
  2162  001688  EF3F  F00B         	goto	l178
  2163  00168C                     u240:
  2164  00168C  0012               	return		;funcret
  2165  00168E                     __end_of_SERIAL_NEWLINE:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function _SERIAL_ESCRIBE_MENSAJE *****************
  2169 ;; Defined at:
  2170 ;;		line 55 in file "maincode4.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  cadena          2   17[COMRAM] PTR const unsigned char 
  2173 ;;		 -> STR_3(16), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  i               1   22[COMRAM] unsigned char 
  2176 ;;  tam             1   21[COMRAM] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2186 ;;      Params:         2       0       0       0       0       0       0       0       0
  2187 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2188 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2189 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2190 ;;Total ram usage:        6 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 5
  2193 ;; This function calls:
  2194 ;;		_strlen
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text9
  2201  001372                     __ptext9:
  2202                           	callstack 0
  2203  001372                     _SERIAL_ESCRIBE_MENSAJE:
  2204                           	callstack 25
  2205  001372                     
  2206                           ;maincode4.c: 59:     tam = strlen(cadena);
  2207  001372  C012  F00E         	movff	SERIAL_ESCRIBE_MENSAJE@cadena,strlen@s
  2208  001376  C013  F00F         	movff	SERIAL_ESCRIBE_MENSAJE@cadena+1,strlen@s+1
  2209  00137A  EC49  F00A         	call	_strlen	;wreg free
  2210  00137E  500E               	movf	?_strlen^0,w,c
  2211  001380  6E16               	movwf	SERIAL_ESCRIBE_MENSAJE@tam^0,c
  2212  001382                     
  2213                           ;maincode4.c: 60:  for(i = 0; i<tam; i++)
  2214  001382  0E00               	movlw	0
  2215  001384  6E17               	movwf	SERIAL_ESCRIBE_MENSAJE@i^0,c
  2216  001386  EFDA  F009         	goto	l1805
  2217  00138A                     l1801:
  2218                           
  2219                           ;maincode4.c: 61:  {;maincode4.c: 62:         TXREG = cadena[i];
  2220  00138A  5017               	movf	SERIAL_ESCRIBE_MENSAJE@i^0,w,c
  2221  00138C  2412               	addwf	SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
  2222  00138E  6E14               	movwf	??_SERIAL_ESCRIBE_MENSAJE^0,c
  2223  001390  0E00               	movlw	0
  2224  001392  2013               	addwfc	(SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2225  001394  6E15               	movwf	(??_SERIAL_ESCRIBE_MENSAJE+1)^0,c
  2226  001396  C014  FFF6         	movff	??_SERIAL_ESCRIBE_MENSAJE,tblptrl
  2227  00139A  C015  FFF7         	movff	??_SERIAL_ESCRIBE_MENSAJE+1,tblptrh
  2228  00139E                     	if	0	;tblptru may be non-zero
  2229  00139E                     	endif
  2230  00139E                     	if	0	;tblptru may be non-zero
  2231  00139E                     	endif
  2232  00139E  0008               	tblrd		*
  2233  0013A0  CFF5 FFAD          	movff	tablat,4013	;volatile
  2234  0013A4                     l168:
  2235  0013A4  A2AC               	btfss	172,1,c	;volatile
  2236  0013A6  EFD7  F009         	goto	u891
  2237  0013AA  EFD9  F009         	goto	u890
  2238  0013AE                     u891:
  2239  0013AE  EFD2  F009         	goto	l168
  2240  0013B2                     u890:
  2241  0013B2                     
  2242                           ;maincode4.c: 64:  }
  2243  0013B2  2A17               	incf	SERIAL_ESCRIBE_MENSAJE@i^0,f,c
  2244  0013B4                     l1805:
  2245  0013B4  5016               	movf	SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
  2246  0013B6  5C17               	subwf	SERIAL_ESCRIBE_MENSAJE@i^0,w,c
  2247  0013B8  A0D8               	btfss	status,0,c
  2248  0013BA  EFE1  F009         	goto	u901
  2249  0013BE  EFE3  F009         	goto	u900
  2250  0013C2                     u901:
  2251  0013C2  EFC5  F009         	goto	l1801
  2252  0013C6                     u900:
  2253  0013C6  0012               	return		;funcret
  2254  0013C8                     __end_of_SERIAL_ESCRIBE_MENSAJE:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _strlen *****************
  2258 ;; Defined at:
  2259 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  s               2   13[COMRAM] PTR const unsigned char 
  2262 ;;		 -> STR_3(16), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  a               2   15[COMRAM] PTR const unsigned char 
  2265 ;;		 -> STR_3(16), 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2   13[COMRAM] unsigned int 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2275 ;;      Params:         2       0       0       0       0       0       0       0       0
  2276 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2278 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2279 ;;Total ram usage:        4 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 4
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_SERIAL_ESCRIBE_MENSAJE
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text10
  2290  001492                     __ptext10:
  2291                           	callstack 0
  2292  001492                     _strlen:
  2293                           	callstack 25
  2294  001492  C00E  F010         	movff	strlen@s,strlen@a
  2295  001496  C00F  F011         	movff	strlen@s+1,strlen@a+1
  2296  00149A  EF51  F00A         	goto	l1647
  2297  00149E                     l1645:
  2298  00149E  4A0E               	infsnz	strlen@s^0,f,c
  2299  0014A0  2A0F               	incf	(strlen@s+1)^0,f,c
  2300  0014A2                     l1647:
  2301  0014A2  C00E  FFF6         	movff	strlen@s,tblptrl
  2302  0014A6  C00F  FFF7         	movff	strlen@s+1,tblptrh
  2303  0014AA                     	if	0	;tblptru may be non-zero
  2304  0014AA                     	endif
  2305  0014AA                     	if	0	;tblptru may be non-zero
  2306  0014AA                     	endif
  2307  0014AA  0008               	tblrd		*
  2308  0014AC  50F5               	movf	tablat,w,c
  2309  0014AE  0900               	iorlw	0
  2310  0014B0  A4D8               	btfss	status,2,c
  2311  0014B2  EF5D  F00A         	goto	u731
  2312  0014B6  EF5F  F00A         	goto	u730
  2313  0014BA                     u731:
  2314  0014BA  EF4F  F00A         	goto	l1645
  2315  0014BE                     u730:
  2316  0014BE  5010               	movf	strlen@a^0,w,c
  2317  0014C0  5C0E               	subwf	strlen@s^0,w,c
  2318  0014C2  6E0E               	movwf	?_strlen^0,c
  2319  0014C4  5011               	movf	(strlen@a+1)^0,w,c
  2320  0014C6  580F               	subwfb	(strlen@s+1)^0,w,c
  2321  0014C8  6E0F               	movwf	(?_strlen+1)^0,c
  2322  0014CA  0012               	return		;funcret
  2323  0014CC                     __end_of_strlen:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _POS_CURSOR *****************
  2327 ;; Defined at:
  2328 ;;		line 6 in file "LCD.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  fila            1    wreg     unsigned char 
  2331 ;;  columna         1   16[COMRAM] unsigned char 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  fila            1   17[COMRAM] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2343 ;;      Params:         1       0       0       0       0       0       0       0       0
  2344 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2346 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2347 ;;Total ram usage:        2 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 6
  2350 ;; This function calls:
  2351 ;;		_ENVIA_LCD_CMD
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text11
  2358  0014CC                     __ptext11:
  2359                           	callstack 0
  2360  0014CC                     _POS_CURSOR:
  2361                           	callstack 24
  2362                           
  2363                           ;incstack = 0
  2364                           ;POS_CURSOR@fila stored from wreg
  2365  0014CC  6E12               	movwf	POS_CURSOR@fila^0,c
  2366  0014CE                     
  2367                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2368  0014CE  0412               	decf	POS_CURSOR@fila^0,w,c
  2369  0014D0  A4D8               	btfss	status,2,c
  2370  0014D2  EF6D  F00A         	goto	u861
  2371  0014D6  EF6F  F00A         	goto	u860
  2372  0014DA                     u861:
  2373  0014DA  EF75  F00A         	goto	l1781
  2374  0014DE                     u860:
  2375  0014DE                     
  2376                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2377  0014DE  5011               	movf	POS_CURSOR@columna^0,w,c
  2378  0014E0  0F80               	addlw	128
  2379  0014E2  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2380                           
  2381                           ;LCD.c: 11:  }
  2382  0014E6  EF82  F00A         	goto	l24
  2383  0014EA                     l1781:
  2384  0014EA  0E02               	movlw	2
  2385  0014EC  1812               	xorwf	POS_CURSOR@fila^0,w,c
  2386  0014EE  A4D8               	btfss	status,2,c
  2387  0014F0  EF7C  F00A         	goto	u871
  2388  0014F4  EF7E  F00A         	goto	u870
  2389  0014F8                     u871:
  2390  0014F8  EF82  F00A         	goto	l24
  2391  0014FC                     u870:
  2392  0014FC                     
  2393                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2394  0014FC  5011               	movf	POS_CURSOR@columna^0,w,c
  2395  0014FE  0FC0               	addlw	192
  2396  001500  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2397  001504                     l24:
  2398  001504  0012               	return		;funcret
  2399  001506                     __end_of_POS_CURSOR:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _LCD_Init *****************
  2403 ;; Defined at:
  2404 ;;		line 40 in file "maincode4.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2420 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2421 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2422 ;;Total ram usage:        1 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 7
  2425 ;; This function calls:
  2426 ;;		_BORRAR_LCD
  2427 ;;		_CURSOR_HOME
  2428 ;;		_CURSOR_ONOFF
  2429 ;;		_LCD_CONFIG
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text12
  2436  001640                     __ptext12:
  2437                           	callstack 0
  2438  001640                     _LCD_Init:
  2439                           	callstack 23
  2440  001640                     
  2441                           ;maincode4.c: 41:     TRISD = 0x00;
  2442  001640  0E00               	movlw	0
  2443  001642  6E95               	movwf	149,c	;volatile
  2444  001644                     
  2445                           ;maincode4.c: 42:     _delay((unsigned long)((29)*(4000000UL/4000.0)));
  2446  001644  0E26               	movlw	38
  2447  001646  6E12               	movwf	??_LCD_Init^0,c
  2448  001648  0EA8               	movlw	168
  2449  00164A                     u1347:
  2450  00164A  2EE8               	decfsz	wreg,f,c
  2451  00164C  D7FE               	bra	u1347
  2452  00164E  2E12               	decfsz	??_LCD_Init^0,f,c
  2453  001650  D7FC               	bra	u1347
  2454  001652  D000               	nop2	
  2455  001654                     
  2456                           ;maincode4.c: 43:     LCD_CONFIG();
  2457  001654  EC5C  F009         	call	_LCD_CONFIG	;wreg free
  2458  001658                     
  2459                           ;maincode4.c: 44:     BORRAR_LCD();
  2460  001658  EC76  F00B         	call	_BORRAR_LCD	;wreg free
  2461  00165C                     
  2462                           ;maincode4.c: 45:     CURSOR_HOME();
  2463  00165C  EC72  F00B         	call	_CURSOR_HOME	;wreg free
  2464  001660                     
  2465                           ;maincode4.c: 46:     CURSOR_ONOFF(1);
  2466  001660  0E01               	movlw	1
  2467  001662  EC08  F00B         	call	_CURSOR_ONOFF
  2468  001666  0012               	return		;funcret
  2469  001668                     __end_of_LCD_Init:
  2470                           	callstack 0
  2471                           
  2472 ;; *************** function _LCD_CONFIG *****************
  2473 ;; Defined at:
  2474 ;;		line 72 in file "LCD.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2490 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2491 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2492 ;;Total ram usage:        1 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 6
  2495 ;; This function calls:
  2496 ;;		_ENVIA_LCD_CMD
  2497 ;;		_ENVIA_NIBBLE
  2498 ;; This function is called by:
  2499 ;;		_LCD_Init
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text13
  2504  0012B8                     __ptext13:
  2505                           	callstack 0
  2506  0012B8                     _LCD_CONFIG:
  2507                           	callstack 23
  2508  0012B8                     
  2509                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2510  0012B8  908C               	bcf	140,0,c	;volatile
  2511                           
  2512                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2513  0012BA  928C               	bcf	140,1,c	;volatile
  2514  0012BC                     
  2515                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2516  0012BC  0E30               	movlw	48
  2517  0012BE  EC56  F00B         	call	_ENVIA_NIBBLE
  2518  0012C2                     
  2519                           ;LCD.c: 77:         _delay(24000);
  2520  0012C2  0E20               	movlw	32
  2521  0012C4  6E11               	movwf	??_LCD_CONFIG^0,c
  2522  0012C6  0E2A               	movlw	42
  2523  0012C8                     u1357:
  2524  0012C8  2EE8               	decfsz	wreg,f,c
  2525  0012CA  D7FE               	bra	u1357
  2526  0012CC  2E11               	decfsz	??_LCD_CONFIG^0,f,c
  2527  0012CE  D7FC               	bra	u1357
  2528  0012D0                     
  2529                           ;LCD.c: 78:         _delay(24000);
  2530  0012D0  0E20               	movlw	32
  2531  0012D2  6E11               	movwf	??_LCD_CONFIG^0,c
  2532  0012D4  0E2A               	movlw	42
  2533  0012D6                     u1367:
  2534  0012D6  2EE8               	decfsz	wreg,f,c
  2535  0012D8  D7FE               	bra	u1367
  2536  0012DA  2E11               	decfsz	??_LCD_CONFIG^0,f,c
  2537  0012DC  D7FC               	bra	u1367
  2538                           
  2539                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2540  0012DE  0E30               	movlw	48
  2541  0012E0  EC56  F00B         	call	_ENVIA_NIBBLE
  2542  0012E4                     
  2543                           ;LCD.c: 83:  _delay(1200);
  2544  0012E4  0EF0               	movlw	240
  2545  0012E6                     u1377:
  2546  0012E6  D000               	nop2	
  2547  0012E8  2EE8               	decfsz	wreg,f,c
  2548  0012EA  D7FD               	bra	u1377
  2549  0012EC                     
  2550                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2551  0012EC  0E30               	movlw	48
  2552  0012EE  EC56  F00B         	call	_ENVIA_NIBBLE
  2553  0012F2                     
  2554                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2555  0012F2  0E20               	movlw	32
  2556  0012F4  EC56  F00B         	call	_ENVIA_NIBBLE
  2557  0012F8                     
  2558                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2559  0012F8  0E01               	movlw	1
  2560  0012FA  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2561  0012FE                     
  2562                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2563  0012FE  0E28               	movlw	40
  2564  001300  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2565  001304                     
  2566                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2567  001304  0E0F               	movlw	15
  2568  001306  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2569  00130A                     
  2570                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2571  00130A  0E06               	movlw	6
  2572  00130C  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2573  001310                     
  2574                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2575  001310  0E01               	movlw	1
  2576  001312  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2577  001316  0012               	return		;funcret
  2578  001318                     __end_of_LCD_CONFIG:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _CURSOR_ONOFF *****************
  2582 ;; Defined at:
  2583 ;;		line 35 in file "LCD.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  estado          1    wreg     unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  estado          1   16[COMRAM] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0
  2598 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2600 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2601 ;;Total ram usage:        1 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 6
  2604 ;; This function calls:
  2605 ;;		_ENVIA_LCD_CMD
  2606 ;; This function is called by:
  2607 ;;		_LCD_Init
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text14
  2612  001610                     __ptext14:
  2613                           	callstack 0
  2614  001610                     _CURSOR_ONOFF:
  2615                           	callstack 23
  2616                           
  2617                           ;incstack = 0
  2618                           ;CURSOR_ONOFF@estado stored from wreg
  2619  001610  6E11               	movwf	CURSOR_ONOFF@estado^0,c
  2620  001612                     
  2621                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2622  001612  5011               	movf	CURSOR_ONOFF@estado^0,w,c
  2623  001614  A4D8               	btfss	status,2,c
  2624  001616  EF0F  F00B         	goto	u31
  2625  00161A  EF11  F00B         	goto	u30
  2626  00161E                     u31:
  2627  00161E  EF14  F00B         	goto	l1003
  2628  001622                     u30:
  2629  001622  0E0E               	movlw	14
  2630  001624  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2631  001628                     l1003:
  2632                           
  2633                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2634  001628  0411               	decf	CURSOR_ONOFF@estado^0,w,c
  2635  00162A  A4D8               	btfss	status,2,c
  2636  00162C  EF1A  F00B         	goto	u41
  2637  001630  EF1C  F00B         	goto	u40
  2638  001634                     u41:
  2639  001634  EF1F  F00B         	goto	l42
  2640  001638                     u40:
  2641  001638  0E0C               	movlw	12
  2642  00163A  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2643  00163E                     l42:
  2644  00163E  0012               	return		;funcret
  2645  001640                     __end_of_CURSOR_ONOFF:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _CURSOR_HOME *****************
  2649 ;; Defined at:
  2650 ;;		line 30 in file "LCD.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 6
  2671 ;; This function calls:
  2672 ;;		_ENVIA_LCD_CMD
  2673 ;; This function is called by:
  2674 ;;		_LCD_Init
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text15
  2680  0016E4                     __ptext15:
  2681                           	callstack 0
  2682  0016E4                     _CURSOR_HOME:
  2683                           	callstack 23
  2684  0016E4                     
  2685                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2686  0016E4  0E02               	movlw	2
  2687  0016E6  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2688  0016EA  0012               	return		;funcret
  2689  0016EC                     __end_of_CURSOR_HOME:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _BORRAR_LCD *****************
  2693 ;; Defined at:
  2694 ;;		line 67 in file "LCD.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2711 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 6
  2715 ;; This function calls:
  2716 ;;		_ENVIA_LCD_CMD
  2717 ;; This function is called by:
  2718 ;;		_LCD_Init
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text16
  2724  0016EC                     __ptext16:
  2725                           	callstack 0
  2726  0016EC                     _BORRAR_LCD:
  2727                           	callstack 23
  2728  0016EC                     
  2729                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2730  0016EC  0E01               	movlw	1
  2731  0016EE  ECA0  F00A         	call	_ENVIA_LCD_CMD
  2732  0016F2  0012               	return		;funcret
  2733  0016F4                     __end_of_BORRAR_LCD:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _ENVIA_LCD_CMD *****************
  2737 ;; Defined at:
  2738 ;;		line 104 in file "LCD.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  dato            1    wreg     unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  dato            1   14[COMRAM] unsigned char 
  2743 ;;  aux             1   15[COMRAM] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0
  2754 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2756 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2757 ;;Total ram usage:        2 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 5
  2760 ;; This function calls:
  2761 ;;		_ENVIA_NIBBLE
  2762 ;;		_LEER_LCD
  2763 ;; This function is called by:
  2764 ;;		_POS_CURSOR
  2765 ;;		_CURSOR_HOME
  2766 ;;		_CURSOR_ONOFF
  2767 ;;		_BORRAR_LCD
  2768 ;;		_LCD_CONFIG
  2769 ;;		_BLINK_CURSOR
  2770 ;;		_DISPLAY_ONOFF
  2771 ;;		_GENERACARACTER
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text17
  2776  001540                     __ptext17:
  2777                           	callstack 0
  2778  001540                     _ENVIA_LCD_CMD:
  2779                           	callstack 24
  2780                           
  2781                           ;incstack = 0
  2782                           ;ENVIA_LCD_CMD@dato stored from wreg
  2783  001540  6E0F               	movwf	ENVIA_LCD_CMD@dato^0,c
  2784  001542                     
  2785                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2786  001542  908C               	bcf	140,0,c	;volatile
  2787  001544                     
  2788                           ;LCD.c: 108:  LEER_LCD();
  2789  001544  ECEA  F008         	call	_LEER_LCD	;wreg free
  2790  001548                     
  2791                           ;LCD.c: 109:  TRISD = 0b00000000;
  2792  001548  0E00               	movlw	0
  2793  00154A  6E95               	movwf	149,c	;volatile
  2794  00154C                     
  2795                           ;LCD.c: 111:         _delay(1200);
  2796  00154C  0EF0               	movlw	240
  2797  00154E                     u1387:
  2798  00154E  D000               	nop2	
  2799  001550  2EE8               	decfsz	wreg,f,c
  2800  001552  D7FD               	bra	u1387
  2801  001554                     
  2802                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2803  001554  928C               	bcf	140,1,c	;volatile
  2804  001556                     
  2805                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2806  001556  948C               	bcf	140,2,c	;volatile
  2807  001558                     
  2808                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2809  001558  908C               	bcf	140,0,c	;volatile
  2810  00155A                     
  2811                           ;LCD.c: 115:  aux = dato & 0xF0;
  2812  00155A  500F               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2813  00155C  0BF0               	andlw	240
  2814  00155E  6E10               	movwf	ENVIA_LCD_CMD@aux^0,c
  2815  001560                     
  2816                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2817  001560  5010               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2818  001562  EC56  F00B         	call	_ENVIA_NIBBLE
  2819  001566                     
  2820                           ;LCD.c: 117:  aux = dato<<4;
  2821  001566  380F               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2822  001568  0BF0               	andlw	240
  2823  00156A  6E10               	movwf	ENVIA_LCD_CMD@aux^0,c
  2824  00156C                     
  2825                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2826  00156C  5010               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2827  00156E  EC56  F00B         	call	_ENVIA_NIBBLE
  2828  001572  0012               	return		;funcret
  2829  001574                     __end_of_ENVIA_LCD_CMD:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _ESCRIBE_MENSAJE *****************
  2833 ;; Defined at:
  2834 ;;		line 41 in file "LCD.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  cadena          2   16[COMRAM] PTR const unsigned char 
  2837 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(5), 
  2838 ;;		 -> STR_2(17), STR_1(11), 
  2839 ;;  tam             1   18[COMRAM] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  i               1   21[COMRAM] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2851 ;;      Params:         3       0       0       0       0       0       0       0       0
  2852 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2853 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2854 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2855 ;;Total ram usage:        6 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 6
  2858 ;; This function calls:
  2859 ;;		_ENVIA_CHAR
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text18
  2866  001416                     __ptext18:
  2867                           	callstack 0
  2868  001416                     _ESCRIBE_MENSAJE:
  2869                           	callstack 24
  2870  001416                     
  2871                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2872  001416  0E00               	movlw	0
  2873  001418  6E16               	movwf	ESCRIBE_MENSAJE@i^0,c
  2874                           
  2875                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2876  00141A  0E00               	movlw	0
  2877  00141C  6E16               	movwf	ESCRIBE_MENSAJE@i^0,c
  2878  00141E  EF20  F00A         	goto	l1791
  2879  001422                     l1787:
  2880                           
  2881                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2882  001422  5016               	movf	ESCRIBE_MENSAJE@i^0,w,c
  2883  001424  2411               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  2884  001426  6E14               	movwf	??_ESCRIBE_MENSAJE^0,c
  2885  001428  0E00               	movlw	0
  2886  00142A  2012               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2887  00142C  6E15               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  2888  00142E  C014  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2889  001432  C015  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  2890  001436                     	if	0	;tblptru may be non-zero
  2891  001436                     	endif
  2892  001436                     	if	0	;tblptru may be non-zero
  2893  001436                     	endif
  2894  001436  0008               	tblrd		*
  2895  001438  50F5               	movf	tablat,w,c
  2896  00143A  ECBA  F00A         	call	_ENVIA_CHAR
  2897  00143E                     
  2898                           ;LCD.c: 47:  }
  2899  00143E  2A16               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2900  001440                     l1791:
  2901  001440  5013               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2902  001442  5C16               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2903  001444  A0D8               	btfss	status,0,c
  2904  001446  EF27  F00A         	goto	u881
  2905  00144A  EF29  F00A         	goto	u880
  2906  00144E                     u881:
  2907  00144E  EF11  F00A         	goto	l1787
  2908  001452                     u880:
  2909  001452  0012               	return		;funcret
  2910  001454                     __end_of_ESCRIBE_MENSAJE:
  2911                           	callstack 0
  2912                           
  2913 ;; *************** function _ENVIA_CHAR *****************
  2914 ;; Defined at:
  2915 ;;		line 50 in file "LCD.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  dato            1    wreg     unsigned char 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  dato            1   14[COMRAM] unsigned char 
  2920 ;;  aux             1   15[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0
  2931 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2933 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2934 ;;Total ram usage:        2 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 5
  2937 ;; This function calls:
  2938 ;;		_ENVIA_NIBBLE
  2939 ;;		_LEER_LCD
  2940 ;; This function is called by:
  2941 ;;		_ESCRIBE_MENSAJE
  2942 ;;		_main
  2943 ;;		_GENERACARACTER
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text19
  2948  001574                     __ptext19:
  2949                           	callstack 0
  2950  001574                     _ENVIA_CHAR:
  2951                           	callstack 24
  2952                           
  2953                           ;incstack = 0
  2954                           ;ENVIA_CHAR@dato stored from wreg
  2955  001574  6E0F               	movwf	ENVIA_CHAR@dato^0,c
  2956  001576                     
  2957                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2958  001576  808C               	bsf	140,0,c	;volatile
  2959  001578                     
  2960                           ;LCD.c: 54:  LEER_LCD();
  2961  001578  ECEA  F008         	call	_LEER_LCD	;wreg free
  2962  00157C                     
  2963                           ;LCD.c: 55:  TRISD = 0x00;
  2964  00157C  0E00               	movlw	0
  2965  00157E  6E95               	movwf	149,c	;volatile
  2966  001580                     
  2967                           ;LCD.c: 56:         _delay(1200);
  2968  001580  0EF0               	movlw	240
  2969  001582                     u1397:
  2970  001582  D000               	nop2	
  2971  001584  2EE8               	decfsz	wreg,f,c
  2972  001586  D7FD               	bra	u1397
  2973  001588                     
  2974                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2975  001588  928C               	bcf	140,1,c	;volatile
  2976  00158A                     
  2977                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2978  00158A  948C               	bcf	140,2,c	;volatile
  2979  00158C                     
  2980                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2981  00158C  808C               	bsf	140,0,c	;volatile
  2982  00158E                     
  2983                           ;LCD.c: 61:  aux = dato & 0xF0;
  2984  00158E  500F               	movf	ENVIA_CHAR@dato^0,w,c
  2985  001590  0BF0               	andlw	240
  2986  001592  6E10               	movwf	ENVIA_CHAR@aux^0,c
  2987  001594                     
  2988                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2989  001594  5010               	movf	ENVIA_CHAR@aux^0,w,c
  2990  001596  EC56  F00B         	call	_ENVIA_NIBBLE
  2991  00159A                     
  2992                           ;LCD.c: 63:  aux = dato << 4;
  2993  00159A  380F               	swapf	ENVIA_CHAR@dato^0,w,c
  2994  00159C  0BF0               	andlw	240
  2995  00159E  6E10               	movwf	ENVIA_CHAR@aux^0,c
  2996  0015A0                     
  2997                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2998  0015A0  5010               	movf	ENVIA_CHAR@aux^0,w,c
  2999  0015A2  EC56  F00B         	call	_ENVIA_NIBBLE
  3000  0015A6  0012               	return		;funcret
  3001  0015A8                     __end_of_ENVIA_CHAR:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _LEER_LCD *****************
  3005 ;; Defined at:
  3006 ;;		line 121 in file "LCD.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  aux             1   13[COMRAM] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0
  3021 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3023 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3024 ;;Total ram usage:        1 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 4
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_ENVIA_CHAR
  3031 ;;		_ENVIA_LCD_CMD
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text20
  3036  0011D4                     __ptext20:
  3037                           	callstack 0
  3038  0011D4                     _LEER_LCD:
  3039                           	callstack 24
  3040  0011D4                     
  3041                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3042  0011D4  0EF8               	movlw	248
  3043  0011D6  6E95               	movwf	149,c	;volatile
  3044  0011D8                     
  3045                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3046  0011D8  908C               	bcf	140,0,c	;volatile
  3047  0011DA                     
  3048                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3049  0011DA  828C               	bsf	140,1,c	;volatile
  3050  0011DC                     
  3051                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3052  0011DC  848C               	bsf	140,2,c	;volatile
  3053  0011DE                     
  3054                           ;LCD.c: 128:         _delay(1200);
  3055  0011DE  0EF0               	movlw	240
  3056  0011E0                     u1407:
  3057  0011E0  D000               	nop2	
  3058  0011E2  2EE8               	decfsz	wreg,f,c
  3059  0011E4  D7FD               	bra	u1407
  3060  0011E6                     
  3061                           ;LCD.c: 130:  aux = PORTD;
  3062  0011E6  CF83 F00E          	movff	3971,LEER_LCD@aux	;volatile
  3063  0011EA                     
  3064                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3065  0011EA  948C               	bcf	140,2,c	;volatile
  3066  0011EC                     
  3067                           ;LCD.c: 132:         _delay(1200);
  3068  0011EC  0EF0               	movlw	240
  3069  0011EE                     u1417:
  3070  0011EE  D000               	nop2	
  3071  0011F0  2EE8               	decfsz	wreg,f,c
  3072  0011F2  D7FD               	bra	u1417
  3073  0011F4                     
  3074                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3075  0011F4  848C               	bsf	140,2,c	;volatile
  3076  0011F6                     
  3077                           ;LCD.c: 135:         _delay(1200);
  3078  0011F6  0EF0               	movlw	240
  3079  0011F8                     u1427:
  3080  0011F8  D000               	nop2	
  3081  0011FA  2EE8               	decfsz	wreg,f,c
  3082  0011FC  D7FD               	bra	u1427
  3083  0011FE                     
  3084                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3085  0011FE  948C               	bcf	140,2,c	;volatile
  3086  001200                     l905:
  3087                           
  3088                           ;LCD.c: 138:  aux = aux & 0x80;
  3089  001200  500E               	movf	LEER_LCD@aux^0,w,c
  3090  001202  0B80               	andlw	128
  3091  001204  6E0E               	movwf	LEER_LCD@aux^0,c
  3092                           
  3093                           ;LCD.c: 139:  while(aux == 0x80)
  3094  001206  EF19  F009         	goto	l919
  3095  00120A                     l67:
  3096                           
  3097                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3098  00120A  848C               	bsf	140,2,c	;volatile
  3099  00120C                     
  3100                           ;LCD.c: 142:             _delay(1200);
  3101  00120C  0EF0               	movlw	240
  3102  00120E                     u1437:
  3103  00120E  D000               	nop2	
  3104  001210  2EE8               	decfsz	wreg,f,c
  3105  001212  D7FD               	bra	u1437
  3106  001214                     
  3107                           ;LCD.c: 143:             aux = PORTD;
  3108  001214  CF83 F00E          	movff	3971,LEER_LCD@aux	;volatile
  3109  001218                     
  3110                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3111  001218  948C               	bcf	140,2,c	;volatile
  3112                           
  3113                           ;LCD.c: 145:             _delay(1200);
  3114  00121A  0EF0               	movlw	240
  3115  00121C                     u1447:
  3116  00121C  D000               	nop2	
  3117  00121E  2EE8               	decfsz	wreg,f,c
  3118  001220  D7FD               	bra	u1447
  3119  001222                     
  3120                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3121  001222  848C               	bsf	140,2,c	;volatile
  3122                           
  3123                           ;LCD.c: 147:             _delay(1200);
  3124  001224  0EF0               	movlw	240
  3125  001226                     u1457:
  3126  001226  D000               	nop2	
  3127  001228  2EE8               	decfsz	wreg,f,c
  3128  00122A  D7FD               	bra	u1457
  3129  00122C                     
  3130                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  3131  00122C  948C               	bcf	140,2,c	;volatile
  3132  00122E  EF00  F009         	goto	l905
  3133  001232                     l919:
  3134                           
  3135                           ;LCD.c: 139:  while(aux == 0x80)
  3136  001232  0E80               	movlw	128
  3137  001234  180E               	xorwf	LEER_LCD@aux^0,w,c
  3138  001236  B4D8               	btfsc	status,2,c
  3139  001238  EF20  F009         	goto	u11
  3140  00123C  EF22  F009         	goto	u10
  3141  001240                     u11:
  3142  001240  EF05  F009         	goto	l67
  3143  001244                     u10:
  3144  001244  0012               	return		;funcret
  3145  001246                     __end_of_LEER_LCD:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _ENVIA_NIBBLE *****************
  3149 ;; Defined at:
  3150 ;;		line 93 in file "LCD.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  dato            1    wreg     unsigned char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  dato            1   13[COMRAM] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0
  3165 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3167 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        1 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 4
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_ENVIA_CHAR
  3175 ;;		_LCD_CONFIG
  3176 ;;		_ENVIA_LCD_CMD
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text21
  3181  0016AC                     __ptext21:
  3182                           	callstack 0
  3183  0016AC                     _ENVIA_NIBBLE:
  3184                           	callstack 24
  3185                           
  3186                           ;incstack = 0
  3187                           ;ENVIA_NIBBLE@dato stored from wreg
  3188  0016AC  6E0E               	movwf	ENVIA_NIBBLE@dato^0,c
  3189  0016AE                     
  3190                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3191  0016AE  0E0F               	movlw	15
  3192  0016B0  168C               	andwf	140,f,c	;volatile
  3193                           
  3194                           ;LCD.c: 96:  dato &= 0xF0;
  3195  0016B2  0EF0               	movlw	240
  3196  0016B4  160E               	andwf	ENVIA_NIBBLE@dato^0,f,c
  3197                           
  3198                           ;LCD.c: 97:  LATD|= dato;
  3199  0016B6  500E               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  3200  0016B8  128C               	iorwf	140,f,c	;volatile
  3201  0016BA                     
  3202                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3203  0016BA  848C               	bsf	140,2,c	;volatile
  3204  0016BC                     
  3205                           ;LCD.c: 100:         _delay(1200);
  3206  0016BC  0EF0               	movlw	240
  3207  0016BE                     u1467:
  3208  0016BE  D000               	nop2	
  3209  0016C0  2EE8               	decfsz	wreg,f,c
  3210  0016C2  D7FD               	bra	u1467
  3211  0016C4                     
  3212                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3213  0016C4  948C               	bcf	140,2,c	;volatile
  3214  0016C6  0012               	return		;funcret
  3215  0016C8                     __end_of_ENVIA_NIBBLE:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _EUSART_RX_ISR *****************
  3219 ;; Defined at:
  3220 ;;		line 101 in file "maincode4.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3236 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3237 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3238 ;;Total ram usage:        4 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 3
  3241 ;; This function calls:
  3242 ;;		i2_ESCRIBE_MENSAJE
  3243 ;;		i2_POS_CURSOR
  3244 ;; This function is called by:
  3245 ;;		Interrupt level 2
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	intcode
  3250  000008                     __pintcode:
  3251                           	callstack 0
  3252  000008                     _EUSART_RX_ISR:
  3253                           	callstack 23
  3254                           
  3255                           ;incstack = 0
  3256  000008  823E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3257  00000A  CFF6 F00A          	movff	tblptrl,??_EUSART_RX_ISR
  3258  00000E  CFF7 F00B          	movff	tblptrh,??_EUSART_RX_ISR+1
  3259  000012  CFF8 F00C          	movff	tblptru,??_EUSART_RX_ISR+2
  3260  000016  CFF5 F00D          	movff	tablat,??_EUSART_RX_ISR+3
  3261  00001A                     
  3262                           ;maincode4.c: 102:     PIR1bits.RC1IF = 0;
  3263  00001A  9A9E               	bcf	158,5,c	;volatile
  3264  00001C                     
  3265                           ;maincode4.c: 103:     if(RCREG1 == 0x41){
  3266  00001C  0E41               	movlw	65
  3267  00001E  18AE               	xorwf	174,w,c	;volatile
  3268  000020  A4D8               	btfss	status,2,c
  3269  000022  EF15  F000         	goto	i2u131_41
  3270  000026  EF17  F000         	goto	i2u131_40
  3271  00002A                     i2u131_41:
  3272  00002A  EF27  F000         	goto	i2l2093
  3273  00002E                     i2u131_40:
  3274  00002E                     
  3275                           ;maincode4.c: 104:             LATEbits.LE0 = 1;
  3276  00002E  808D               	bsf	141,0,c	;volatile
  3277  000030                     
  3278                           ;maincode4.c: 105:             POS_CURSOR(2,0);
  3279  000030  0E00               	movlw	0
  3280  000032  6E04               	movwf	i2POS_CURSOR@columna^0,c
  3281  000034  0E02               	movlw	2
  3282  000036  EC83  F00A         	call	i2_POS_CURSOR
  3283  00003A                     
  3284                           ;maincode4.c: 106:             ESCRIBE_MENSAJE("Sentido horario ",16);
  3285  00003A  0E12               	movlw	low STR_5
  3286  00003C  6E04               	movwf	i2ESCRIBE_MENSAJE@cadena^0,c
  3287  00003E  0E08               	movlw	high STR_5
  3288  000040  6E05               	movwf	(i2ESCRIBE_MENSAJE@cadena+1)^0,c
  3289  000042  0E10               	movlw	16
  3290  000044  6E06               	movwf	i2ESCRIBE_MENSAJE@tam^0,c
  3291  000046  EC2A  F00A         	call	i2_ESCRIBE_MENSAJE	;wreg free
  3292                           
  3293                           ;maincode4.c: 107:     }
  3294  00004A  EF4D  F000         	goto	i2l201
  3295  00004E                     i2l2093:
  3296  00004E  0E52               	movlw	82
  3297  000050  18AE               	xorwf	174,w,c	;volatile
  3298  000052  A4D8               	btfss	status,2,c
  3299  000054  EF2E  F000         	goto	i2u132_41
  3300  000058  EF30  F000         	goto	i2u132_40
  3301  00005C                     i2u132_41:
  3302  00005C  EF40  F000         	goto	i2l2101
  3303  000060                     i2u132_40:
  3304  000060                     
  3305                           ;maincode4.c: 109:             LATEbits.LE0 = 0;
  3306  000060  908D               	bcf	141,0,c	;volatile
  3307  000062                     
  3308                           ;maincode4.c: 110:             POS_CURSOR(2,0);
  3309  000062  0E00               	movlw	0
  3310  000064  6E04               	movwf	i2POS_CURSOR@columna^0,c
  3311  000066  0E02               	movlw	2
  3312  000068  EC83  F00A         	call	i2_POS_CURSOR
  3313  00006C                     
  3314                           ;maincode4.c: 111:             ESCRIBE_MENSAJE("Sentido al reves",16);
  3315  00006C  0E34               	movlw	low STR_6
  3316  00006E  6E04               	movwf	i2ESCRIBE_MENSAJE@cadena^0,c
  3317  000070  0E08               	movlw	high STR_6
  3318  000072  6E05               	movwf	(i2ESCRIBE_MENSAJE@cadena+1)^0,c
  3319  000074  0E10               	movlw	16
  3320  000076  6E06               	movwf	i2ESCRIBE_MENSAJE@tam^0,c
  3321  000078  EC2A  F00A         	call	i2_ESCRIBE_MENSAJE	;wreg free
  3322                           
  3323                           ;maincode4.c: 112:     }
  3324  00007C  EF4D  F000         	goto	i2l201
  3325  000080                     i2l2101:
  3326                           
  3327                           ;maincode4.c: 114:             POS_CURSOR(2,0);
  3328  000080  0E00               	movlw	0
  3329  000082  6E04               	movwf	i2POS_CURSOR@columna^0,c
  3330  000084  0E02               	movlw	2
  3331  000086  EC83  F00A         	call	i2_POS_CURSOR
  3332  00008A                     
  3333                           ;maincode4.c: 115:             ESCRIBE_MENSAJE("Tecla errada on ",16);
  3334  00008A  0E01               	movlw	low STR_7
  3335  00008C  6E04               	movwf	i2ESCRIBE_MENSAJE@cadena^0,c
  3336  00008E  0E08               	movlw	high STR_7
  3337  000090  6E05               	movwf	(i2ESCRIBE_MENSAJE@cadena+1)^0,c
  3338  000092  0E10               	movlw	16
  3339  000094  6E06               	movwf	i2ESCRIBE_MENSAJE@tam^0,c
  3340  000096  EC2A  F00A         	call	i2_ESCRIBE_MENSAJE	;wreg free
  3341  00009A                     i2l201:
  3342  00009A  C00D  FFF5         	movff	??_EUSART_RX_ISR+3,tablat
  3343  00009E  C00C  FFF8         	movff	??_EUSART_RX_ISR+2,tblptru
  3344  0000A2  C00B  FFF7         	movff	??_EUSART_RX_ISR+1,tblptrh
  3345  0000A6  C00A  FFF6         	movff	??_EUSART_RX_ISR,tblptrl
  3346  0000AA  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3347  0000AC  0011               	retfie		f
  3348  0000AE                     __end_of_EUSART_RX_ISR:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function i2_POS_CURSOR *****************
  3352 ;; Defined at:
  3353 ;;		line 6 in file "LCD.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  fila            1    wreg     unsigned char 
  3356 ;;  columna         1    3[COMRAM] unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  fila            1    4[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         1       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3371 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        2 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 2
  3375 ;; This function calls:
  3376 ;;		i2_ENVIA_LCD_CMD
  3377 ;; This function is called by:
  3378 ;;		_EUSART_RX_ISR
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text23
  3383  001506                     __ptext23:
  3384                           	callstack 0
  3385  001506                     i2_POS_CURSOR:
  3386                           	callstack 23
  3387                           
  3388                           ;incstack = 0
  3389                           ;i2POS_CURSOR@fila stored from wreg
  3390  001506  6E05               	movwf	i2POS_CURSOR@fila^0,c
  3391  001508                     
  3392                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  3393  001508  0405               	decf	i2POS_CURSOR@fila^0,w,c
  3394  00150A  A4D8               	btfss	status,2,c
  3395  00150C  EF8A  F00A         	goto	i2u127_41
  3396  001510  EF8C  F00A         	goto	i2u127_40
  3397  001514                     i2u127_41:
  3398  001514  EF92  F00A         	goto	i2l2031
  3399  001518                     i2u127_40:
  3400  001518                     
  3401                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  3402  001518  5004               	movf	i2POS_CURSOR@columna^0,w,c
  3403  00151A  0F80               	addlw	128
  3404  00151C  ECD4  F00A         	call	i2_ENVIA_LCD_CMD
  3405                           
  3406                           ;LCD.c: 11:  }
  3407  001520  EF9F  F00A         	goto	i2l24
  3408  001524                     i2l2031:
  3409  001524  0E02               	movlw	2
  3410  001526  1805               	xorwf	i2POS_CURSOR@fila^0,w,c
  3411  001528  A4D8               	btfss	status,2,c
  3412  00152A  EF99  F00A         	goto	i2u128_41
  3413  00152E  EF9B  F00A         	goto	i2u128_40
  3414  001532                     i2u128_41:
  3415  001532  EF9F  F00A         	goto	i2l24
  3416  001536                     i2u128_40:
  3417  001536                     
  3418                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  3419  001536  5004               	movf	i2POS_CURSOR@columna^0,w,c
  3420  001538  0FC0               	addlw	192
  3421  00153A  ECD4  F00A         	call	i2_ENVIA_LCD_CMD
  3422  00153E                     i2l24:
  3423  00153E  0012               	return		;funcret
  3424  001540                     __end_ofi2_POS_CURSOR:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function i2_ENVIA_LCD_CMD *****************
  3428 ;; Defined at:
  3429 ;;		line 104 in file "LCD.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  dato            1    wreg     unsigned char 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  dato            1    1[COMRAM] unsigned char 
  3434 ;;  aux             1    2[COMRAM] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3447 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        2 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 1
  3451 ;; This function calls:
  3452 ;;		i2_ENVIA_NIBBLE
  3453 ;;		i2_LEER_LCD
  3454 ;; This function is called by:
  3455 ;;		i2_POS_CURSOR
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text24
  3460  0015A8                     __ptext24:
  3461                           	callstack 0
  3462  0015A8                     i2_ENVIA_LCD_CMD:
  3463                           	callstack 23
  3464                           
  3465                           ;incstack = 0
  3466                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  3467  0015A8  6E02               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  3468  0015AA                     
  3469                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3470  0015AA  908C               	bcf	140,0,c	;volatile
  3471  0015AC                     
  3472                           ;LCD.c: 108:  LEER_LCD();
  3473  0015AC  EC23  F009         	call	i2_LEER_LCD	;wreg free
  3474  0015B0                     
  3475                           ;LCD.c: 109:  TRISD = 0b00000000;
  3476  0015B0  0E00               	movlw	0
  3477  0015B2  6E95               	movwf	149,c	;volatile
  3478  0015B4                     
  3479                           ;LCD.c: 111:         _delay(1200);
  3480  0015B4  0EF0               	movlw	240
  3481  0015B6                     i2u147_47:
  3482  0015B6  D000               	nop2	
  3483  0015B8  2EE8               	decfsz	wreg,f,c
  3484  0015BA  D7FD               	bra	i2u147_47
  3485  0015BC                     
  3486                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3487  0015BC  928C               	bcf	140,1,c	;volatile
  3488  0015BE                     
  3489                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3490  0015BE  948C               	bcf	140,2,c	;volatile
  3491  0015C0                     
  3492                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3493  0015C0  908C               	bcf	140,0,c	;volatile
  3494  0015C2                     
  3495                           ;LCD.c: 115:  aux = dato & 0xF0;
  3496  0015C2  5002               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  3497  0015C4  0BF0               	andlw	240
  3498  0015C6  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3499  0015C8                     
  3500                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3501  0015C8  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3502  0015CA  EC64  F00B         	call	i2_ENVIA_NIBBLE
  3503  0015CE                     
  3504                           ;LCD.c: 117:  aux = dato<<4;
  3505  0015CE  3802               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  3506  0015D0  0BF0               	andlw	240
  3507  0015D2  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  3508  0015D4                     
  3509                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3510  0015D4  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  3511  0015D6  EC64  F00B         	call	i2_ENVIA_NIBBLE
  3512  0015DA  0012               	return		;funcret
  3513  0015DC                     __end_ofi2_ENVIA_LCD_CMD:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function i2_ESCRIBE_MENSAJE *****************
  3517 ;; Defined at:
  3518 ;;		line 41 in file "LCD.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  3521 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(5), 
  3522 ;;		 -> STR_2(17), STR_1(11), 
  3523 ;;  tam             1    5[COMRAM] unsigned char 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  i               1    8[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3535 ;;      Params:         3       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3538 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:        6 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 2
  3542 ;; This function calls:
  3543 ;;		i2_ENVIA_CHAR
  3544 ;; This function is called by:
  3545 ;;		_EUSART_RX_ISR
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text25
  3550  001454                     __ptext25:
  3551                           	callstack 0
  3552  001454                     i2_ESCRIBE_MENSAJE:
  3553                           	callstack 23
  3554  001454                     
  3555                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  3556  001454  0E00               	movlw	0
  3557  001456  6E09               	movwf	i2ESCRIBE_MENSAJE@i^0,c
  3558                           
  3559                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  3560  001458  0E00               	movlw	0
  3561  00145A  6E09               	movwf	i2ESCRIBE_MENSAJE@i^0,c
  3562  00145C  EF3F  F00A         	goto	i2l2041
  3563  001460                     i2l2037:
  3564                           
  3565                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  3566  001460  5009               	movf	i2ESCRIBE_MENSAJE@i^0,w,c
  3567  001462  2404               	addwf	i2ESCRIBE_MENSAJE@cadena^0,w,c
  3568  001464  6E07               	movwf	??i2_ESCRIBE_MENSAJE^0,c
  3569  001466  0E00               	movlw	0
  3570  001468  2005               	addwfc	(i2ESCRIBE_MENSAJE@cadena+1)^0,w,c
  3571  00146A  6E08               	movwf	(??i2_ESCRIBE_MENSAJE+1)^0,c
  3572  00146C  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE,tblptrl
  3573  001470  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE+1,tblptrh
  3574  001474                     	if	0	;tblptru may be non-zero
  3575  001474                     	endif
  3576  001474                     	if	0	;tblptru may be non-zero
  3577  001474                     	endif
  3578  001474  0008               	tblrd		*
  3579  001476  50F5               	movf	tablat,w,c
  3580  001478  ECEE  F00A         	call	i2_ENVIA_CHAR
  3581  00147C                     
  3582                           ;LCD.c: 47:  }
  3583  00147C  2A09               	incf	i2ESCRIBE_MENSAJE@i^0,f,c
  3584  00147E                     i2l2041:
  3585  00147E  5006               	movf	i2ESCRIBE_MENSAJE@tam^0,w,c
  3586  001480  5C09               	subwf	i2ESCRIBE_MENSAJE@i^0,w,c
  3587  001482  A0D8               	btfss	status,0,c
  3588  001484  EF46  F00A         	goto	i2u129_41
  3589  001488  EF48  F00A         	goto	i2u129_40
  3590  00148C                     i2u129_41:
  3591  00148C  EF30  F00A         	goto	i2l2037
  3592  001490                     i2u129_40:
  3593  001490  0012               	return		;funcret
  3594  001492                     __end_ofi2_ESCRIBE_MENSAJE:
  3595                           	callstack 0
  3596                           
  3597 ;; *************** function i2_ENVIA_CHAR *****************
  3598 ;; Defined at:
  3599 ;;		line 50 in file "LCD.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  dato            1    wreg     unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  dato            1    1[COMRAM] unsigned char 
  3604 ;;  aux             1    2[COMRAM] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0
  3615 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3617 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3618 ;;Total ram usage:        2 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; Hardware stack levels required when called: 1
  3621 ;; This function calls:
  3622 ;;		i2_ENVIA_NIBBLE
  3623 ;;		i2_LEER_LCD
  3624 ;; This function is called by:
  3625 ;;		i2_ESCRIBE_MENSAJE
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text26
  3630  0015DC                     __ptext26:
  3631                           	callstack 0
  3632  0015DC                     i2_ENVIA_CHAR:
  3633                           	callstack 23
  3634                           
  3635                           ;incstack = 0
  3636                           ;i2ENVIA_CHAR@dato stored from wreg
  3637  0015DC  6E02               	movwf	i2ENVIA_CHAR@dato^0,c
  3638  0015DE                     
  3639                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  3640  0015DE  808C               	bsf	140,0,c	;volatile
  3641  0015E0                     
  3642                           ;LCD.c: 54:  LEER_LCD();
  3643  0015E0  EC23  F009         	call	i2_LEER_LCD	;wreg free
  3644  0015E4                     
  3645                           ;LCD.c: 55:  TRISD = 0x00;
  3646  0015E4  0E00               	movlw	0
  3647  0015E6  6E95               	movwf	149,c	;volatile
  3648  0015E8                     
  3649                           ;LCD.c: 56:         _delay(1200);
  3650  0015E8  0EF0               	movlw	240
  3651  0015EA                     i2u148_47:
  3652  0015EA  D000               	nop2	
  3653  0015EC  2EE8               	decfsz	wreg,f,c
  3654  0015EE  D7FD               	bra	i2u148_47
  3655  0015F0                     
  3656                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  3657  0015F0  928C               	bcf	140,1,c	;volatile
  3658  0015F2                     
  3659                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  3660  0015F2  948C               	bcf	140,2,c	;volatile
  3661  0015F4                     
  3662                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  3663  0015F4  808C               	bsf	140,0,c	;volatile
  3664  0015F6                     
  3665                           ;LCD.c: 61:  aux = dato & 0xF0;
  3666  0015F6  5002               	movf	i2ENVIA_CHAR@dato^0,w,c
  3667  0015F8  0BF0               	andlw	240
  3668  0015FA  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  3669  0015FC                     
  3670                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  3671  0015FC  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  3672  0015FE  EC64  F00B         	call	i2_ENVIA_NIBBLE
  3673  001602                     
  3674                           ;LCD.c: 63:  aux = dato << 4;
  3675  001602  3802               	swapf	i2ENVIA_CHAR@dato^0,w,c
  3676  001604  0BF0               	andlw	240
  3677  001606  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  3678  001608                     
  3679                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  3680  001608  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  3681  00160A  EC64  F00B         	call	i2_ENVIA_NIBBLE
  3682  00160E  0012               	return		;funcret
  3683  001610                     __end_ofi2_ENVIA_CHAR:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function i2_LEER_LCD *****************
  3687 ;; Defined at:
  3688 ;;		line 121 in file "LCD.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  aux             1    0[COMRAM] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3702 ;;      Params:         0       0       0       0       0       0       0       0       0
  3703 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3705 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3706 ;;Total ram usage:        1 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; This function calls:
  3709 ;;		Nothing
  3710 ;; This function is called by:
  3711 ;;		i2_ENVIA_CHAR
  3712 ;;		i2_ENVIA_LCD_CMD
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text27
  3717  001246                     __ptext27:
  3718                           	callstack 0
  3719  001246                     i2_LEER_LCD:
  3720                           	callstack 23
  3721  001246                     
  3722                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3723  001246  0EF8               	movlw	248
  3724  001248  6E95               	movwf	149,c	;volatile
  3725  00124A                     
  3726                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3727  00124A  908C               	bcf	140,0,c	;volatile
  3728  00124C                     
  3729                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3730  00124C  828C               	bsf	140,1,c	;volatile
  3731  00124E                     
  3732                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3733  00124E  848C               	bsf	140,2,c	;volatile
  3734  001250                     
  3735                           ;LCD.c: 128:         _delay(1200);
  3736  001250  0EF0               	movlw	240
  3737  001252                     i2u149_47:
  3738  001252  D000               	nop2	
  3739  001254  2EE8               	decfsz	wreg,f,c
  3740  001256  D7FD               	bra	i2u149_47
  3741  001258                     
  3742                           ;LCD.c: 130:  aux = PORTD;
  3743  001258  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3744  00125C                     
  3745                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3746  00125C  948C               	bcf	140,2,c	;volatile
  3747  00125E                     
  3748                           ;LCD.c: 132:         _delay(1200);
  3749  00125E  0EF0               	movlw	240
  3750  001260                     i2u150_47:
  3751  001260  D000               	nop2	
  3752  001262  2EE8               	decfsz	wreg,f,c
  3753  001264  D7FD               	bra	i2u150_47
  3754  001266                     
  3755                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3756  001266  848C               	bsf	140,2,c	;volatile
  3757  001268                     
  3758                           ;LCD.c: 135:         _delay(1200);
  3759  001268  0EF0               	movlw	240
  3760  00126A                     i2u151_47:
  3761  00126A  D000               	nop2	
  3762  00126C  2EE8               	decfsz	wreg,f,c
  3763  00126E  D7FD               	bra	i2u151_47
  3764  001270                     
  3765                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3766  001270  948C               	bcf	140,2,c	;volatile
  3767  001272                     i2l1627:
  3768                           
  3769                           ;LCD.c: 138:  aux = aux & 0x80;
  3770  001272  5001               	movf	i2LEER_LCD@aux^0,w,c
  3771  001274  0B80               	andlw	128
  3772  001276  6E01               	movwf	i2LEER_LCD@aux^0,c
  3773                           
  3774                           ;LCD.c: 139:  while(aux == 0x80)
  3775  001278  EF52  F009         	goto	i2l1641
  3776  00127C                     i2l67:
  3777                           
  3778                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3779  00127C  848C               	bsf	140,2,c	;volatile
  3780  00127E                     
  3781                           ;LCD.c: 142:             _delay(1200);
  3782  00127E  0EF0               	movlw	240
  3783  001280                     i2u152_47:
  3784  001280  D000               	nop2	
  3785  001282  2EE8               	decfsz	wreg,f,c
  3786  001284  D7FD               	bra	i2u152_47
  3787  001286                     
  3788                           ;LCD.c: 143:             aux = PORTD;
  3789  001286  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  3790  00128A                     
  3791                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3792  00128A  948C               	bcf	140,2,c	;volatile
  3793                           
  3794                           ;LCD.c: 145:             _delay(1200);
  3795  00128C  0EF0               	movlw	240
  3796  00128E                     i2u153_47:
  3797  00128E  D000               	nop2	
  3798  001290  2EE8               	decfsz	wreg,f,c
  3799  001292  D7FD               	bra	i2u153_47
  3800  001294                     
  3801                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3802  001294  848C               	bsf	140,2,c	;volatile
  3803                           
  3804                           ;LCD.c: 147:             _delay(1200);
  3805  001296  0EF0               	movlw	240
  3806  001298                     i2u154_47:
  3807  001298  D000               	nop2	
  3808  00129A  2EE8               	decfsz	wreg,f,c
  3809  00129C  D7FD               	bra	i2u154_47
  3810  00129E                     
  3811                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  3812  00129E  948C               	bcf	140,2,c	;volatile
  3813  0012A0  EF39  F009         	goto	i2l1627
  3814  0012A4                     i2l1641:
  3815                           
  3816                           ;LCD.c: 139:  while(aux == 0x80)
  3817  0012A4  0E80               	movlw	128
  3818  0012A6  1801               	xorwf	i2LEER_LCD@aux^0,w,c
  3819  0012A8  B4D8               	btfsc	status,2,c
  3820  0012AA  EF59  F009         	goto	i2u72_41
  3821  0012AE  EF5B  F009         	goto	i2u72_40
  3822  0012B2                     i2u72_41:
  3823  0012B2  EF3E  F009         	goto	i2l67
  3824  0012B6                     i2u72_40:
  3825  0012B6  0012               	return		;funcret
  3826  0012B8                     __end_ofi2_LEER_LCD:
  3827                           	callstack 0
  3828                           
  3829 ;; *************** function i2_ENVIA_NIBBLE *****************
  3830 ;; Defined at:
  3831 ;;		line 93 in file "LCD.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  dato            1    wreg     unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  dato            1    0[COMRAM] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0
  3846 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3848 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		i2_ENVIA_CHAR
  3855 ;;		i2_ENVIA_LCD_CMD
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text28
  3860  0016C8                     __ptext28:
  3861                           	callstack 0
  3862  0016C8                     i2_ENVIA_NIBBLE:
  3863                           	callstack 23
  3864                           
  3865                           ;incstack = 0
  3866                           ;i2ENVIA_NIBBLE@dato stored from wreg
  3867  0016C8  6E01               	movwf	i2ENVIA_NIBBLE@dato^0,c
  3868  0016CA                     
  3869                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3870  0016CA  0E0F               	movlw	15
  3871  0016CC  168C               	andwf	140,f,c	;volatile
  3872                           
  3873                           ;LCD.c: 96:  dato &= 0xF0;
  3874  0016CE  0EF0               	movlw	240
  3875  0016D0  1601               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  3876                           
  3877                           ;LCD.c: 97:  LATD|= dato;
  3878  0016D2  5001               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  3879  0016D4  128C               	iorwf	140,f,c	;volatile
  3880  0016D6                     
  3881                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3882  0016D6  848C               	bsf	140,2,c	;volatile
  3883  0016D8                     
  3884                           ;LCD.c: 100:         _delay(1200);
  3885  0016D8  0EF0               	movlw	240
  3886  0016DA                     i2u155_47:
  3887  0016DA  D000               	nop2	
  3888  0016DC  2EE8               	decfsz	wreg,f,c
  3889  0016DE  D7FD               	bra	i2u155_47
  3890  0016E0                     
  3891                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3892  0016E0  948C               	bcf	140,2,c	;volatile
  3893  0016E2  0012               	return		;funcret
  3894  0016E4                     __end_ofi2_ENVIA_NIBBLE:
  3895                           	callstack 0
  3896                           
  3897                           	psect	rparam
  3898  0000                     
  3899                           	psect	temp
  3900  00003E                     btemp:
  3901                           	callstack 0
  3902  00003E                     	ds	1
  3903  0000                     int$flags	set	btemp
  3904  0000                     wtemp8	set	btemp+1
  3905  0000                     ttemp5	set	btemp+1
  3906  0000                     ttemp6	set	btemp+4
  3907  0000                     ttemp7	set	btemp+8
  3908                           
  3909                           	psect	idloc
  3910                           
  3911                           ;Config register IDLOC0 @ 0x200000
  3912                           ;	unspecified, using default values
  3913  200000                     	org	2097152
  3914  200000  FF                 	db	255
  3915                           
  3916                           ;Config register IDLOC1 @ 0x200001
  3917                           ;	unspecified, using default values
  3918  200001                     	org	2097153
  3919  200001  FF                 	db	255
  3920                           
  3921                           ;Config register IDLOC2 @ 0x200002
  3922                           ;	unspecified, using default values
  3923  200002                     	org	2097154
  3924  200002  FF                 	db	255
  3925                           
  3926                           ;Config register IDLOC3 @ 0x200003
  3927                           ;	unspecified, using default values
  3928  200003                     	org	2097155
  3929  200003  FF                 	db	255
  3930                           
  3931                           ;Config register IDLOC4 @ 0x200004
  3932                           ;	unspecified, using default values
  3933  200004                     	org	2097156
  3934  200004  FF                 	db	255
  3935                           
  3936                           ;Config register IDLOC5 @ 0x200005
  3937                           ;	unspecified, using default values
  3938  200005                     	org	2097157
  3939  200005  FF                 	db	255
  3940                           
  3941                           ;Config register IDLOC6 @ 0x200006
  3942                           ;	unspecified, using default values
  3943  200006                     	org	2097158
  3944  200006  FF                 	db	255
  3945                           
  3946                           ;Config register IDLOC7 @ 0x200007
  3947                           ;	unspecified, using default values
  3948  200007                     	org	2097159
  3949  200007  FF                 	db	255
  3950                           
  3951                           	psect	config
  3952                           
  3953                           ;Config register CONFIG1L @ 0x300000
  3954                           ;	PLL Selection
  3955                           ;	PLLSEL = PLL4X, 4x clock multiplier
  3956                           ;	PLL Enable Configuration bit
  3957                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  3958                           ;	CPU System Clock Postscaler
  3959                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  3960                           ;	Low Speed USB mode with 48 MHz system clock
  3961                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  3962  300000                     	org	3145728
  3963  300000  00                 	db	0
  3964                           
  3965                           ;Config register CONFIG1H @ 0x300001
  3966                           ;	Oscillator Selection
  3967                           ;	FOSC = INTOSCIO, Internal oscillator
  3968                           ;	Primary Oscillator Shutdown
  3969                           ;	PCLKEN = ON, Primary oscillator enabled
  3970                           ;	Fail-Safe Clock Monitor
  3971                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3972                           ;	Internal/External Oscillator Switchover
  3973                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3974  300001                     	org	3145729
  3975  300001  28                 	db	40
  3976                           
  3977                           ;Config register CONFIG2L @ 0x300002
  3978                           ;	Power-up Timer Enable
  3979                           ;	nPWRTEN = ON, Power up timer enabled
  3980                           ;	Brown-out Reset Enable
  3981                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  3982                           ;	Brown-out Reset Voltage
  3983                           ;	BORV = 190, BOR set to 1.9V nominal
  3984                           ;	Low-Power Brown-out Reset
  3985                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  3986  300002                     	org	3145730
  3987  300002  58                 	db	88
  3988                           
  3989                           ;Config register CONFIG2H @ 0x300003
  3990                           ;	Watchdog Timer Enable bits
  3991                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  3992                           ;	Watchdog Timer Postscaler
  3993                           ;	WDTPS = 32768, 1:32768
  3994  300003                     	org	3145731
  3995  300003  3C                 	db	60
  3996                           
  3997                           ; Padding undefined space
  3998  300004                     	org	3145732
  3999  300004  FF                 	db	255
  4000                           
  4001                           ;Config register CONFIG3H @ 0x300005
  4002                           ;	CCP2 MUX bit
  4003                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4004                           ;	PORTB A/D Enable bit
  4005                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4006                           ;	Timer3 Clock Input MUX bit
  4007                           ;	T3CMX = RC0, T3CKI function is on RC0
  4008                           ;	SDO Output MUX bit
  4009                           ;	SDOMX = RB3, SDO function is on RB3
  4010                           ;	Master Clear Reset Pin Enable
  4011                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4012  300005                     	org	3145733
  4013  300005  D1                 	db	209
  4014                           
  4015                           ;Config register CONFIG4L @ 0x300006
  4016                           ;	Stack Full/Underflow Reset
  4017                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4018                           ;	Single-Supply ICSP Enable bit
  4019                           ;	LVP = OFF, Single-Supply ICSP disabled
  4020                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4021                           ;	ICPRT = OFF, ICPORT disabled
  4022                           ;	Extended Instruction Set Enable bit
  4023                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4024                           ;	Background Debugger Enable bit
  4025                           ;	DEBUG = 0x1, unprogrammed default
  4026  300006                     	org	3145734
  4027  300006  81                 	db	129
  4028                           
  4029                           ; Padding undefined space
  4030  300007                     	org	3145735
  4031  300007  FF                 	db	255
  4032                           
  4033                           ;Config register CONFIG5L @ 0x300008
  4034                           ;	Block 0 Code Protect
  4035                           ;	CP0 = OFF, Block 0 is not code-protected
  4036                           ;	Block 1 Code Protect
  4037                           ;	CP1 = OFF, Block 1 is not code-protected
  4038                           ;	Block 2 Code Protect
  4039                           ;	CP2 = OFF, Block 2 is not code-protected
  4040                           ;	Block 3 Code Protect
  4041                           ;	CP3 = OFF, Block 3 is not code-protected
  4042  300008                     	org	3145736
  4043  300008  0F                 	db	15
  4044                           
  4045                           ;Config register CONFIG5H @ 0x300009
  4046                           ;	Boot Block Code Protect
  4047                           ;	CPB = OFF, Boot block is not code-protected
  4048                           ;	Data EEPROM Code Protect
  4049                           ;	CPD = OFF, Data EEPROM is not code-protected
  4050  300009                     	org	3145737
  4051  300009  C0                 	db	192
  4052                           
  4053                           ;Config register CONFIG6L @ 0x30000A
  4054                           ;	Block 0 Write Protect
  4055                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4056                           ;	Block 1 Write Protect
  4057                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4058                           ;	Block 2 Write Protect
  4059                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4060                           ;	Block 3 Write Protect
  4061                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4062  30000A                     	org	3145738
  4063  30000A  0F                 	db	15
  4064                           
  4065                           ;Config register CONFIG6H @ 0x30000B
  4066                           ;	Configuration Registers Write Protect
  4067                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4068                           ;	Boot Block Write Protect
  4069                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4070                           ;	Data EEPROM Write Protect
  4071                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4072  30000B                     	org	3145739
  4073  30000B  E0                 	db	224
  4074                           
  4075                           ;Config register CONFIG7L @ 0x30000C
  4076                           ;	Block 0 Table Read Protect
  4077                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4078                           ;	Block 1 Table Read Protect
  4079                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4080                           ;	Block 2 Table Read Protect
  4081                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4082                           ;	Block 3 Table Read Protect
  4083                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4084  30000C                     	org	3145740
  4085  30000C  0F                 	db	15
  4086                           
  4087                           ;Config register CONFIG7H @ 0x30000D
  4088                           ;	Boot Block Table Read Protect
  4089                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4090  30000D                     	org	3145741
  4091  30000D  40                 	db	64
  4092                           tosu	equ	0xFFF
  4093                           tosh	equ	0xFFE
  4094                           tosl	equ	0xFFD
  4095                           stkptr	equ	0xFFC
  4096                           pclatu	equ	0xFFB
  4097                           pclath	equ	0xFFA
  4098                           pcl	equ	0xFF9
  4099                           tblptru	equ	0xFF8
  4100                           tblptrh	equ	0xFF7
  4101                           tblptrl	equ	0xFF6
  4102                           tablat	equ	0xFF5
  4103                           prodh	equ	0xFF4
  4104                           prodl	equ	0xFF3
  4105                           indf0	equ	0xFEF
  4106                           postinc0	equ	0xFEE
  4107                           postdec0	equ	0xFED
  4108                           preinc0	equ	0xFEC
  4109                           plusw0	equ	0xFEB
  4110                           fsr0h	equ	0xFEA
  4111                           fsr0l	equ	0xFE9
  4112                           wreg	equ	0xFE8
  4113                           indf1	equ	0xFE7
  4114                           postinc1	equ	0xFE6
  4115                           postdec1	equ	0xFE5
  4116                           preinc1	equ	0xFE4
  4117                           plusw1	equ	0xFE3
  4118                           fsr1h	equ	0xFE2
  4119                           fsr1l	equ	0xFE1
  4120                           bsr	equ	0xFE0
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           preinc2	equ	0xFDC
  4125                           plusw2	equ	0xFDB
  4126                           fsr2h	equ	0xFDA
  4127                           fsr2l	equ	0xFD9
  4128                           status	equ	0xFD8

Data Sizes:
    Strings     100
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), 

    SERIAL_ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[5]), 
		 -> STR_2(CODE[17]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _convierte->___awdiv
    ___awdiv->___awmod
    ___flmul->___xxtofl
    _SERIAL_ESCRIBE_MENSAJE->_strlen
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_Init->_CURSOR_ONOFF
    _LCD_Init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _EUSART_RX_ISR in COMRAM

    _EUSART_RX_ISR->i2_ESCRIBE_MENSAJE
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD
    i2_ESCRIBE_MENSAJE->i2_ENVIA_CHAR
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_RX_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_RX_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_RX_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_RX_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_RX_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_RX_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_RX_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_RX_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6511
                                             52 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                           _LCD_Init
                         _POS_CURSOR
             _SERIAL_ESCRIBE_MENSAJE
                     _SERIAL_NEWLINE
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _configuro
                          _convierte
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             27 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             13 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SERIAL_NEWLINE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SERIAL_ESCRIBE_MENSAJE                               6     4      2     356
                                             17 COMRAM     6     4      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     586
                                             16 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     525
                                             17 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                             16 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                             16 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                             14 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     967
                                             16 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                             14 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _EUSART_RX_ISR                                        4     4      0     779
                                              9 COMRAM     4     4      0
                  i2_ESCRIBE_MENSAJE
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (6) i2_POS_CURSOR                                         2     1      1     349
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (6) i2_ESCRIBE_MENSAJE                                    6     3      3     430
                                              3 COMRAM     6     3      3
                       i2_ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (7) i2_ENVIA_CHAR                                         2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (8) i2_LEER_LCD                                           1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_NIBBLE                                       1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_HOME
     _ENVIA_LCD_CMD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _LCD_Init
     _BORRAR_LCD
     _CURSOR_HOME
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _SERIAL_ESCRIBE_MENSAJE
     _strlen
   _SERIAL_NEWLINE
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod

 _EUSART_RX_ISR (ROOT)
   i2_ESCRIBE_MENSAJE
     i2_ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      3D       1       64.9%
BITBIGSFRllhh       23      0       0      32        0.0%
BITBIGSFRhhhl       1E      0       0      21        0.0%
BITBIGSFRhhlhhh      E      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhlllh      C      0       0      27        0.0%
BITBIGSFRhhlhl       A      0       0      26        0.0%
BITBIGSFRlh          8      0       0      31        0.0%
BITBIGSFRlll         8      0       0      34        0.0%
BITBIGSFRhhllll      6      0       0      28        0.0%
BITBIGSFRhll         4      0       0      30        0.0%
BITBIGSFRhhlhhh      1      0       0      23        0.0%
BITBIGSFRhlh         1      0       0      29        0.0%
BITBIGSFRhhlhhh      1      0       0      24        0.0%
BITBIGSFRhhlhhl      1      0       0      25        0.0%
BITBIGSFRllhl        1      0       0      33        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      35        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Feb 14 16:20:40 2023

                            l24 1504                              l42 163E                              l51 15A6  
                            l60 16C6                              l37 16EA                              l54 16F2  
                            l63 1572                              l48 1452                              l57 1316  
                            l67 120A                              l69 1244                              u10 1244  
                            u11 1240                              u30 1622                              u31 161E  
                            u40 1638                              u41 1634                    ___awdiv@sign 0019  
  SERIAL_ESCRIBE_MENSAJE@cadena 0012                 ?_SERIAL_NEWLINE 0001                   ENVIA_CHAR@aux 0010  
                           l160 1666                             l163 1370                             l172 13C6  
                           l181 168C                             l501 105E                             l157 1414  
                           l175 166C                             l168 13A4                             l178 167E  
                           l435 1122                             l187 0EB0                             l448 11D2  
                           l901 11F6                             l822 0C8E                             l911 1218  
                           l903 11FE                             l921 16AE                             l913 1222  
                           l905 1200                             l825 0B20                             l818 092A  
                           l923 16BA                             l915 122C                             l907 120C  
                           l931 1544                             l835 0C50                             l827 0B98  
                           l828 0B86                             l925 16BC                             l909 1214  
                           l941 1558                             l933 1548                             l862 0E42  
                           l927 16C4                             l919 1232                             l943 155A  
                           l935 154C                             l945 1560                             l937 1554  
                           l929 1542                             l881 14CA                             l873 0DDA  
                           l866 0D7E                             l891 11DE                             l883 11D4  
                           l947 1566                             l939 1556                             l859 0CE6  
                           l893 11E6                             l885 11D8                             l949 156C  
                           l895 11EA                             l887 11DA                             l897 11EC  
                           l889 11DC                             l899 11F4                             l997 16E4  
                           l999 1612                             u230 167A                             u231 1676  
                           u240 168C                             u241 1688                             _PR2 000FBB  
                           u800 1136                             u801 1132                             u730 14BE  
                           u810 1150                             u731 14BA                             u811 114C  
                           u900 13C6                             u740 1072                             u820 116A  
                           u901 13C2                             u741 106E                             u821 1166  
                           u910 0880                             u750 108C                             u830 1188  
                           u911 087C                             u751 1088                             u831 1184  
                           u920 0892                             u760 10B2                             u840 119E  
                           u921 088E                             u761 10AE                             u841 119A  
                           u930 08A2                             u770 10D0                             u850 11C2  
                           u931 089E                             u771 10CC                             u851 11BE  
                           u860 14DE                             u940 08E2                             u780 10EC  
                           u861 14DA                             u941 08DE                             u781 10E8  
                           u870 14FC                             u950 08F4                             u790 1112  
                           u871 14F8                             u951 08F0                             u791 110E  
                           u880 1452                             u960 0904                             u881 144E  
                           u961 0900                             u890 13B2                             u970 093A  
                           u891 13AE                             u971 0936                             u980 094A  
                           u981 0946                             u990 0AC4                             u995 0ABA  
                  ___awmod@sign 0013                     LEER_LCD@aux 000E                             wreg 000FE8  
              ??i2_ENVIA_NIBBLE 0001                    ?_CURSOR_HOME 0001                      _TXSTA1bits 000FAC  
                  ___flmul@aexp 002D                    ___flmul@bexp 002E                    ___flmul@sign 0028  
                  ___flmul@temp 0033                    ___flmul@prod 002F                  ??_ENVIA_NIBBLE 000E  
                  ___fltol@exp1 0017                  ENVIA_CHAR@dato 000F                            l1001 1622  
                          l1011 157C                            l1003 1628                            l1021 158E  
                          l1013 1580                            l1005 1638                            l1023 1594  
                          l1015 1588                            l1007 1576                            l1031 12B8  
                          l1025 159A                            l1017 158A                            l1009 1578  
                          l1041 12EC                            l1033 12BC                            l2001 0D68  
                          l1027 15A0                            l1019 158C                            l1051 130A  
                          l1043 12F2                            l1035 12C2                            l2011 0DE8  
                          l2003 0D74                            l1211 13D4                            l1029 16EC  
                          l1053 1310                            l1045 12F8                            l1037 12D0  
                          l2021 0E30                            l2013 0DEA                            l2005 0DB0  
                          l1221 13E0                            l1213 13D6                            l1205 13C8  
                          l1047 12FE                            l1039 12E4                            l2023 0E32  
                          l2015 0DEE                            l2007 0DBC                            l1231 13EE  
                          l1223 13E2                            l1215 13D8                            l1207 13D0  
                          l1049 1304                            l1241 1654                            l2017 0E12  
                          l2009 0DCA                            l1233 1400                            l1225 13E8  
                          l1217 13DA                            l1209 13D2                            l1243 1658  
                          l2019 0E22                            l1235 1402                            l1227 13EA  
                          l1219 13DE                            l2051 0E66                            l2043 0E44  
                          l1245 165C                            l1237 1640                            l1229 13EC  
                          l2061 0EA6                            l2053 0E70                            l2045 0E48  
                          l1247 1660                            l1239 1644                            l1263 1668  
                          l2071 0F1A                            l2063 0EAA                            l2055 0E80  
                          l2047 0E4C                            l1265 167A                            l2081 0F4A  
                          l2073 0F24                            l2065 0EAE                            l2057 0E8C  
                          l2049 0E56                            l2075 0F34                            l2067 0EBE  
                          l2059 0EA2                            l1701 1136                            l2077 0F3A  
                          l2069 0F02                            l1711 116A                            l1703 113E  
                          l2079 0F42                            l1801 138A                            l1721 11A6  
                          l1713 1172                            l1705 1142                            l1643 1492  
                          l1803 13B2                            l1811 0880                            l1723 11AC  
                          l1715 117A                            l1707 1150                            l1645 149E  
                          l1805 13B4                            l1901 0B50                            l1821 08B8  
                          l1813 0882                            l1661 107E                            l1653 1060  
                          l1717 1188                            l1725 11B2                            l1709 1158  
                          l1647 14A2                            l1911 0BC2                            l1903 0B7E  
                          l1831 08E4                            l1823 08C8                            l1815 0892  
                          l1807 0866                            l1671 10B2                            l1663 108C  
                          l1655 1064                            l1727 11C2                            l1719 119E  
                          l1649 14BE                            l1921 0C38                            l1913 0BEC  
                          l1841 093A                            l1833 08F4                            l1825 08CE  
                          l1817 08A2                            l1809 0872                            l1681 10EC  
                          l1673 10BA                            l1665 1094                            l1657 1072  
                          l1729 11CA                            l1923 0C54                            l1931 0C7A  
                          l1907 0BA8                            l1915 0BF0                            l1851 0974  
                          l1843 094A                            l1835 0904                            l1827 08D4  
                          l1819 08B2                            l1691 1112                            l1683 10F4  
                          l1675 10C2                            l1667 1098                            l1659 107A  
                          l1781 14EA                            l1933 0C7E                            l1925 0C64  
                          l1917 0C0A                            l1909 0BB4                            l1861 09C6  
                          l1853 098A                            l1837 0914                            l1829 08E2  
                          l1693 111A                            l1685 10F6                            l1677 10D0  
                          l1669 10A0                            l1791 1440                            l1783 14FC  
                          l1927 0C72                            l1919 0C1E                            l1871 0A0C  
                          l1863 09D4                            l1855 0996                            l1847 095E  
                          l1839 091A                            l1951 0FC4                            l1943 0F84  
                          l1687 10FC                            l1679 10D6                            l1785 1416  
                          l1777 14CE                            l1929 0C74                            l1881 0A7A  
                          l1873 0A26                            l1865 09E0                            l1857 09AE  
                          l1849 096A                            l1961 0FF4                            l1953 0FD2  
                          l1945 0FAE                            l1937 0F5A                            l1689 1102  
                          l1697 1124                            l1793 131A                            l1787 1422  
                          l1779 14DE                            l1795 1372                            l1891 0B10  
                          l1883 0AA4                            l1875 0A36                            l1867 09F0  
                          l1859 09BA                            l1971 101E                            l1963 0FFE  
                          l1947 0FB0                            l1939 0F70                            l1699 1128  
                          l1789 143E                            l1797 1372                            l1893 0B1E  
                          l1885 0ADA                            l1877 0A52                            l1869 09FC  
                          l1973 102E                            l1949 0FC0                            l1981 0C92  
                          l1799 1382                            l1895 0B30                            l1887 0AE8  
                          l1879 0A5E                            l1975 103E                            l1959 0FEA  
                          l1983 0CA2                            l1897 0B3E                            l1889 0B06  
                          l1977 104E                            l1969 1012                            l1993 0D20  
                          l1985 0CB0                            l1899 0B42                            l1995 0D28  
                          l1987 0CF6                            l1997 0D34                            l1989 0D0C  
                          l1999 0D66                            STR_1 0855                            STR_2 0823  
                          STR_3 0845                            STR_4 0860                            STR_5 0812  
                          STR_6 0834                            STR_7 0801                            u1000 0B1E  
                          u1001 0B1A                            u1010 0B3E                            u1011 0B3A  
                          u1020 0B50                            u1100 0F70                            u1021 0B4C  
                          u1101 0F6C                            u1030 0B7E                            u1110 0FA4  
                          u1031 0B7A                            u1040 0B94                            u1120 0FD2  
                          u1200 0D62                            u1041 0B90                            u1121 0FCE  
                          u1201 0D5E                            u1050 0BA8                            u1130 0FE6  
                          u1210 0DAC                            u1051 0BA4                            u1131 0FE2  
                          u1115 0F9A                            u1211 0DA8                            u1060 0BC2  
                          u1140 100E                            u1220 0DCA                            u1300 0EBE  
                          u1061 0BBE                            u1141 100A                            u1221 0DC6  
                          u1301 0EBA                            u1070 0C0A                            u1150 102E  
                          u1230 0DDA                            u1071 0C06                            u1151 102A  
                          u1231 0DD6                            u1080 0C38                            u1160 103E  
                          u1240 0DE8                            u1081 0C34                            u1161 103A  
                          u1241 0DE4                            u1090 0C72                            u1250 0E22  
                          u1170 0CA2                            u1091 0C6E                            u1251 0E1E  
                          u1171 0C9E                            u1260 0E30                            u1180 0CB0  
                          u1261 0E2C                            u1181 0CAC                            u1190 0D0C  
                          u1407 11E0                            u1191 0D08                            _LATD 000F8C  
                          u1417 11EE                            u1337 0E96                            u1427 11F8  
                          u1347 164A                            u1437 120E                            u1357 12C8  
                          u1447 121C                            u1367 12D6                            u1457 1226  
                          u1377 12E6                            u1467 16BE                            u1387 154E  
                          u1397 1582                            i2l24 153E                            i2l51 160E  
                          i2l60 16E2                            i2l63 15DA                            i2l48 1490  
                          i2l67 127C                            i2l69 12B6                     ?i2_LEER_LCD 0001  
                          _main 0E44                            btemp 003E               ??i2_ENVIA_LCD_CMD 0002  
                          prodh 000FF4                            prodl 000FF3                            start 00AE  
                 ?_CURSOR_ONOFF 0001                    ___param_bank 000000                 ??_ENVIA_LCD_CMD 000F  
              __end_of_LEER_LCD 1246                __end_of_LCD_Init 1668                   _EUSART_RX_ISR 0008  
                 ___fltol@sign1 0016                           ?_main 0001                 __end_of___awdiv 1124  
               __end_of___awmod 11D4                 __end_of___flmul 0C90                 __end_of___fltol 1060  
               ___awdiv@divisor 0016                           _T2CON 000FBA                           i2l201 009A  
               ___awdiv@counter 0018                           _PORTD 000F83                           _TRISD 000F95  
                         _TXREG 000FAD              i2ESCRIBE_MENSAJE@i 0009         i2ESCRIBE_MENSAJE@cadena 0004  
                   ?_POS_CURSOR 0011                           tablat 000FF5                           ttemp5 003F  
                         ttemp6 0042                           ttemp7 0046                           status 000FD8  
                         wtemp8 003F                  ??_CURSOR_ONOFF 0011                 __initialization 168E  
                  __end_of_main 0F5A                 _ESCRIBE_MENSAJE 1416                  ?_EUSART_RX_ISR 0001  
                        ??_main 0035                   __activetblptr 000001                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                          _ADRESH 000FC4  
                        _CCPR1L 000FBE                ___awdiv@dividend 0014                          _ANSELB 000F5C  
                        i2l2101 0080                          i2l2031 1524                          i2l2103 008A  
                        i2l2041 147E                          i2l2033 1536                          i2l2035 1454  
                        i2l2027 1508                          i2l2037 1460                          i2l2029 1518  
                        i2l2039 147C                          i2l1601 16D8                          i2l1603 16E0  
                        i2l1611 124E                          i2l2091 003A                          i2l2083 001A  
                        i2l1621 1266                          i2l1613 1250                          i2l1605 1246  
                        i2l2093 004E                          i2l2085 001C                          i2l1631 1286  
                        i2l1623 1268                          i2l1615 1258                          i2l1607 124A  
                        i2l2095 0060                          i2l2087 002E                          i2l1633 128A  
                        i2l1641 12A4                          i2l1625 1270                          i2l1617 125C  
                        i2l1609 124C                          i2l2097 0062                          i2l2089 0030  
                        i2l1635 1294                          i2l1627 1272                          i2l1619 125E  
                        i2l2099 006C                          i2l1637 129E                          i2l1629 127E  
                        i2l1741 15F0                          i2l1733 15DE                          i2l1751 1602  
                        i2l1743 15F2                          i2l1735 15E0                          i2l1753 1608  
                        i2l1745 15F4                          i2l1737 15E4                          i2l1761 15B4  
                        i2l1747 15F6                          i2l1739 15E8                          i2l1771 15C8  
                        i2l1763 15BC                          i2l1755 15AA                          i2l1597 16CA  
                        i2l1749 15FC                          i2l1773 15CE                          i2l1765 15BE  
                        i2l1757 15AC                          i2l1599 16D6                          i2l1775 15D4  
                        i2l1767 15C0                          i2l1759 15B0                          i2l1769 15C2  
                        _RCREG1 000FAE                          _OSCCON 000FD3                          _SPBRG1 000FAF  
              __end_of___xxtofl 0E44                   ?i2_ENVIA_CHAR 0001                       ??___awdiv 0018  
                     ??___awmod 0012            __end_of_ENVIA_NIBBLE 16C8                       ??___flmul 0024  
                     ??___fltol 0012         SERIAL_ESCRIBE_MENSAJE@i 0017                          clear_0 1694  
              ___awdiv@quotient 001A                 ___awmod@divisor 0010                          isa$std 000001  
               ___awmod@counter 0012                          _strlen 1492                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                  ??_BORRAR_LCD 0011                    ___xxtofl@arg 0018                    ___xxtofl@exp 0017  
                  ___xxtofl@val 000E                       ?_LEER_LCD 0001                      __accesstop 0060  
       __end_of__initialization 169A                       ?_LCD_Init 0001                    ??_LCD_CONFIG 0011  
                ??i2_ENVIA_CHAR 0002                   ___rparam_used 000001                    ??_ENVIA_CHAR 000F  
                    ___fltol@f1 000E         __end_of_ESCRIBE_MENSAJE 1454                ??_SERIAL_NEWLINE 000E  
                __pcstackCOMRAM 0001                 ??_EUSART_RX_ISR 000A              __end_of_BORRAR_LCD 16F4  
           i2ENVIA_LCD_CMD@dato 0002                ENVIA_LCD_CMD@aux 0010            __end_of_CURSOR_ONOFF 1640  
            __end_of_LCD_CONFIG 1318              __end_of_ENVIA_CHAR 15A8                 i2_ENVIA_LCD_CMD 15A8  
                 ?i2_POS_CURSOR 0004                    ??i2_LEER_LCD 0001                      ??_LEER_LCD 000E  
              ENVIA_NIBBLE@dato 000E                      ??_LCD_Init 0012                         _CCP1CON 000FBD  
                       ?_strlen 000E              __end_ofi2_LEER_LCD 12B8                       ?___xxtofl 000E  
                       i2u72_40 12B6                         i2u72_41 12B2                  ??i2_POS_CURSOR 0005  
                  ??_POS_CURSOR 0012            i2ESCRIBE_MENSAJE@tam 0006                         __Hparam 0000  
                       __Lparam 0000                ?_ESCRIBE_MENSAJE 0011               __end_of_configuro 1416  
                       ___awdiv 1060                         ___awmod 1124                         ___flmul 0866  
                       ___fltol 0F5A                    __psmallconst 0800           __end_of_ENVIA_LCD_CMD 1574  
             __end_of_convierte 1372                         _calculo 0037                         _decenas 003C  
                       __pcinit 168E              __end_of_POS_CURSOR 1506                         __ramtop 0800  
                       __ptext0 0E44                         __ptext1 1318                         __ptext2 1124  
                       __ptext3 1060                         __ptext4 13C8                         __ptext5 0C90  
                       __ptext6 0F5A                         __ptext7 0866                         __ptext8 1668  
                       __ptext9 1372         __end_ofi2_ENVIA_LCD_CMD 15DC            __end_ofi2_ENVIA_CHAR 1610  
                    ??___xxtofl 0012        ??_SERIAL_ESCRIBE_MENSAJE 0014                ___awmod@dividend 000E  
     SERIAL_ESCRIBE_MENSAJE@tam 0016                 i2ENVIA_CHAR@aux 0003                    _ENVIA_NIBBLE 16AC  
          end_of_initialization 169A                         postinc0 000FEE                         strlen@a 0010  
                       strlen@s 000E                   ___xxtofl@sign 0016                       _TRISAbits 000F92  
                     _TRISCbits 000F94                       _TRISEbits 000F96                     ___flmul@grs 0029  
                  _CURSOR_ONOFF 1610              CURSOR_ONOFF@estado 0011            __end_ofi2_POS_CURSOR 1540  
              ?i2_ENVIA_LCD_CMD 0001                  __end_of_strlen 14CC                   ??_CURSOR_HOME 0011  
           start_initialization 168E               ENVIA_LCD_CMD@dato 000F                i2POS_CURSOR@fila 0005  
         __end_of_EUSART_RX_ISR 00AE                        ??_strlen 0010                       ___flmul@a 0020  
                     ___flmul@b 001C                     __pbssCOMRAM 0037                   i2LEER_LCD@aux 0001  
            i2ENVIA_LCD_CMD@aux 0003             __end_of_CURSOR_HOME 16EC                  i2_ENVIA_NIBBLE 16C8  
        _SERIAL_ESCRIBE_MENSAJE 1372                    i2_ENVIA_CHAR 15DC              i2ENVIA_NIBBLE@dato 0001  
                     __pintcode 0008                        ?___awdiv 0014                        ?___awmod 000E  
                      ?___flmul 001C                        ?___fltol 000E                       _configuro 13C8  
                   __smallconst 0800                       _convierte 1318                 convierte@numero 001C  
           i2POS_CURSOR@columna 0004          __end_ofi2_ENVIA_NIBBLE 16E4                        _LEER_LCD 11D4  
                      _LCD_Init 1640                        _LATDbits 000F8C                        _LATEbits 000F8D  
                      _PIE1bits 000F9D                        i2u131_40 002E                        i2u131_41 002A  
                      i2u132_40 0060                        i2u132_41 005C                        i2u150_47 1260  
                      i2u127_40 1518                        i2u127_41 1514                        i2u151_47 126A  
                      i2u128_40 1536                        i2u128_41 1532                        i2u152_47 1280  
                      i2u129_40 1490                        i2u129_41 148C                        i2u153_47 128E  
                      i2u154_47 1298                        i2u155_47 16DA                        i2u147_47 15B6  
                      i2u148_47 15EA                        i2u149_47 1252                        _PIR1bits 000F9E  
              ESCRIBE_MENSAJE@i 0016                  POS_CURSOR@fila 0012                      ?_configuro 0001  
                    _ADCON0bits 000FC2                      ?_convierte 0001                     _CURSOR_HOME 16E4  
                  i2_POS_CURSOR 1506                 ?i2_ENVIA_NIBBLE 0001                        __Hrparam 0000  
                      __Lrparam 0000                    __Lsmallconst 0800                      _ANSELAbits 000F5B  
             i2_ESCRIBE_MENSAJE 1454                      _ANSELCbits 000F5D                      _ANSELEbits 000F5F  
                      ___xxtofl 0C90              ?i2_ESCRIBE_MENSAJE 0004                        _centenas 003D  
                      __ptext10 1492                        __ptext11 14CC                        __ptext20 11D4  
                      __ptext12 1640                        __ptext21 16AC                        __ptext13 12B8  
                      __ptext14 1610                        __ptext23 1506                        __ptext15 16E4  
                      __ptext24 15A8                        __ptext16 16EC                        __ptext25 1454  
                      __ptext17 1540                        __ptext26 15DC                        __ptext18 1416  
                      __ptext27 1246                        __ptext19 1574                        __ptext28 16C8  
                    _BORRAR_LCD 16EC             ??i2_ESCRIBE_MENSAJE 0007                      _LCD_CONFIG 12B8  
                    _ENVIA_CHAR 1574                        isa$xinst 000000                        int$flags 003E  
                      _unidades 003B                i2ENVIA_CHAR@dato 0002       __end_ofi2_ESCRIBE_MENSAJE 1492  
                 _ENVIA_LCD_CMD 1540                     ??_configuro 000E                  _SERIAL_NEWLINE 1668  
                   ??_convierte 001C                      _INTCONbits 000FF2               ??_ESCRIBE_MENSAJE 0014  
                      intlevel2 0000           ESCRIBE_MENSAJE@cadena 0011                      i2_LEER_LCD 1246  
       ?_SERIAL_ESCRIBE_MENSAJE 0012                      _RCSTA1bits 000FAB                  ?_ENVIA_LCD_CMD 0001  
        __end_of_SERIAL_NEWLINE 168E                     ?_BORRAR_LCD 0001                   ?_ENVIA_NIBBLE 0001  
                    _POS_CURSOR 14CC  __end_of_SERIAL_ESCRIBE_MENSAJE 13C8                     ?_LCD_CONFIG 0001  
            ESCRIBE_MENSAJE@tam 0013                     ?_ENVIA_CHAR 0001               POS_CURSOR@columna 0011  
